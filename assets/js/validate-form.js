(function(){const h=document.createElement("link").relList;if(h&&h.supports&&h.supports("modulepreload"))return;for(const P of document.querySelectorAll('link[rel="modulepreload"]'))s(P);new MutationObserver(P=>{for(const R of P)if(R.type==="childList")for(const N of R.addedNodes)N.tagName==="LINK"&&N.rel==="modulepreload"&&s(N)}).observe(document,{childList:!0,subtree:!0});function V(P){const R={};return P.integrity&&(R.integrity=P.integrity),P.referrerPolicy&&(R.referrerPolicy=P.referrerPolicy),P.crossOrigin==="use-credentials"?R.credentials="include":P.crossOrigin==="anonymous"?R.credentials="omit":R.credentials="same-origin",R}function s(P){if(P.ep)return;P.ep=!0;const R=V(P);fetch(P.href,R)}})();function eS(o){return o&&o.__esModule&&Object.prototype.hasOwnProperty.call(o,"default")?o.default:o}var ro={exports:{}},pu={};/**
 * @license React
 * react-jsx-runtime.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var ff;function aS(){if(ff)return pu;ff=1;var o=Symbol.for("react.transitional.element"),h=Symbol.for("react.fragment");function V(s,P,R){var N=null;if(R!==void 0&&(N=""+R),P.key!==void 0&&(N=""+P.key),"key"in P){R={};for(var K in P)K!=="key"&&(R[K]=P[K])}else R=P;return P=R.ref,{$$typeof:o,type:s,key:N,ref:P!==void 0?P:null,props:R}}return pu.Fragment=h,pu.jsx=V,pu.jsxs=V,pu}var mf;function tS(){return mf||(mf=1,ro.exports=aS()),ro.exports}var E=tS(),oo={exports:{}},ei={};/**
 * @license React
 * react.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var gf;function uS(){if(gf)return ei;gf=1;var o=Symbol.for("react.transitional.element"),h=Symbol.for("react.portal"),V=Symbol.for("react.fragment"),s=Symbol.for("react.strict_mode"),P=Symbol.for("react.profiler"),R=Symbol.for("react.consumer"),N=Symbol.for("react.context"),K=Symbol.for("react.forward_ref"),z=Symbol.for("react.suspense"),B=Symbol.for("react.memo"),D=Symbol.for("react.lazy"),Y=Symbol.iterator;function J(d){return d===null||typeof d!="object"?null:(d=Y&&d[Y]||d["@@iterator"],typeof d=="function"?d:null)}var k={isMounted:function(){return!1},enqueueForceUpdate:function(){},enqueueReplaceState:function(){},enqueueSetState:function(){}},ti=Object.assign,ii={};function Z(d,T,H){this.props=d,this.context=T,this.refs=ii,this.updater=H||k}Z.prototype.isReactComponent={},Z.prototype.setState=function(d,T){if(typeof d!="object"&&typeof d!="function"&&d!=null)throw Error("takes an object of state variables to update or a function which returns an object of state variables.");this.updater.enqueueSetState(this,d,T,"setState")},Z.prototype.forceUpdate=function(d){this.updater.enqueueForceUpdate(this,d,"forceUpdate")};function j(){}j.prototype=Z.prototype;function G(d,T,H){this.props=d,this.context=T,this.refs=ii,this.updater=H||k}var A=G.prototype=new j;A.constructor=G,ti(A,Z.prototype),A.isPureReactComponent=!0;var x=Array.isArray,O={H:null,A:null,T:null,S:null,V:null},Ci=Object.prototype.hasOwnProperty;function $(d,T,H,L,X,si){return H=si.ref,{$$typeof:o,type:d,key:T,ref:H!==void 0?H:null,props:si}}function ai(d,T){return $(d.type,T,void 0,void 0,void 0,d.props)}function Pi(d){return typeof d=="object"&&d!==null&&d.$$typeof===o}function Ii(d){var T={"=":"=0",":":"=2"};return"$"+d.replace(/[=:]/g,function(H){return T[H]})}var Li=/\/+/g;function yi(d,T){return typeof d=="object"&&d!==null&&d.key!=null?Ii(""+d.key):T.toString(36)}function me(){}function Oe(d){switch(d.status){case"fulfilled":return d.value;case"rejected":throw d.reason;default:switch(typeof d.status=="string"?d.then(me,me):(d.status="pending",d.then(function(T){d.status==="pending"&&(d.status="fulfilled",d.value=T)},function(T){d.status==="pending"&&(d.status="rejected",d.reason=T)})),d.status){case"fulfilled":return d.value;case"rejected":throw d.reason}}throw d}function Hi(d,T,H,L,X){var si=typeof d;(si==="undefined"||si==="boolean")&&(d=null);var W=!1;if(d===null)W=!0;else switch(si){case"bigint":case"string":case"number":W=!0;break;case"object":switch(d.$$typeof){case o:case h:W=!0;break;case D:return W=d._init,Hi(W(d._payload),T,H,L,X)}}if(W)return X=X(d),W=L===""?"."+yi(d,0):L,x(X)?(H="",W!=null&&(H=W.replace(Li,"$&/")+"/"),Hi(X,T,H,"",function(Ie){return Ie})):X!=null&&(Pi(X)&&(X=ai(X,H+(X.key==null||d&&d.key===X.key?"":(""+X.key).replace(Li,"$&/")+"/")+W)),T.push(X)),1;W=0;var te=L===""?".":L+":";if(x(d))for(var Ti=0;Ti<d.length;Ti++)L=d[Ti],si=te+yi(L,Ti),W+=Hi(L,T,H,si,X);else if(Ti=J(d),typeof Ti=="function")for(d=Ti.call(d),Ti=0;!(L=d.next()).done;)L=L.value,si=te+yi(L,Ti++),W+=Hi(L,T,H,si,X);else if(si==="object"){if(typeof d.then=="function")return Hi(Oe(d),T,H,L,X);throw T=String(d),Error("Objects are not valid as a React child (found: "+(T==="[object Object]"?"object with keys {"+Object.keys(d).join(", ")+"}":T)+"). If you meant to render a collection of children, use an array instead.")}return W}function b(d,T,H){if(d==null)return d;var L=[],X=0;return Hi(d,L,"","",function(si){return T.call(H,si,X++)}),L}function _(d){if(d._status===-1){var T=d._result;T=T(),T.then(function(H){(d._status===0||d._status===-1)&&(d._status=1,d._result=H)},function(H){(d._status===0||d._status===-1)&&(d._status=2,d._result=H)}),d._status===-1&&(d._status=0,d._result=T)}if(d._status===1)return d._result.default;throw d._result}var q=typeof reportError=="function"?reportError:function(d){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var T=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof d=="object"&&d!==null&&typeof d.message=="string"?String(d.message):String(d),error:d});if(!window.dispatchEvent(T))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",d);return}console.error(d)};function bi(){}return ei.Children={map:b,forEach:function(d,T,H){b(d,function(){T.apply(this,arguments)},H)},count:function(d){var T=0;return b(d,function(){T++}),T},toArray:function(d){return b(d,function(T){return T})||[]},only:function(d){if(!Pi(d))throw Error("React.Children.only expected to receive a single React element child.");return d}},ei.Component=Z,ei.Fragment=V,ei.Profiler=P,ei.PureComponent=G,ei.StrictMode=s,ei.Suspense=z,ei.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=O,ei.__COMPILER_RUNTIME={__proto__:null,c:function(d){return O.H.useMemoCache(d)}},ei.cache=function(d){return function(){return d.apply(null,arguments)}},ei.cloneElement=function(d,T,H){if(d==null)throw Error("The argument must be a React element, but you passed "+d+".");var L=ti({},d.props),X=d.key,si=void 0;if(T!=null)for(W in T.ref!==void 0&&(si=void 0),T.key!==void 0&&(X=""+T.key),T)!Ci.call(T,W)||W==="key"||W==="__self"||W==="__source"||W==="ref"&&T.ref===void 0||(L[W]=T[W]);var W=arguments.length-2;if(W===1)L.children=H;else if(1<W){for(var te=Array(W),Ti=0;Ti<W;Ti++)te[Ti]=arguments[Ti+2];L.children=te}return $(d.type,X,void 0,void 0,si,L)},ei.createContext=function(d){return d={$$typeof:N,_currentValue:d,_currentValue2:d,_threadCount:0,Provider:null,Consumer:null},d.Provider=d,d.Consumer={$$typeof:R,_context:d},d},ei.createElement=function(d,T,H){var L,X={},si=null;if(T!=null)for(L in T.key!==void 0&&(si=""+T.key),T)Ci.call(T,L)&&L!=="key"&&L!=="__self"&&L!=="__source"&&(X[L]=T[L]);var W=arguments.length-2;if(W===1)X.children=H;else if(1<W){for(var te=Array(W),Ti=0;Ti<W;Ti++)te[Ti]=arguments[Ti+2];X.children=te}if(d&&d.defaultProps)for(L in W=d.defaultProps,W)X[L]===void 0&&(X[L]=W[L]);return $(d,si,void 0,void 0,null,X)},ei.createRef=function(){return{current:null}},ei.forwardRef=function(d){return{$$typeof:K,render:d}},ei.isValidElement=Pi,ei.lazy=function(d){return{$$typeof:D,_payload:{_status:-1,_result:d},_init:_}},ei.memo=function(d,T){return{$$typeof:B,type:d,compare:T===void 0?null:T}},ei.startTransition=function(d){var T=O.T,H={};O.T=H;try{var L=d(),X=O.S;X!==null&&X(H,L),typeof L=="object"&&L!==null&&typeof L.then=="function"&&L.then(bi,q)}catch(si){q(si)}finally{O.T=T}},ei.unstable_useCacheRefresh=function(){return O.H.useCacheRefresh()},ei.use=function(d){return O.H.use(d)},ei.useActionState=function(d,T,H){return O.H.useActionState(d,T,H)},ei.useCallback=function(d,T){return O.H.useCallback(d,T)},ei.useContext=function(d){return O.H.useContext(d)},ei.useDebugValue=function(){},ei.useDeferredValue=function(d,T){return O.H.useDeferredValue(d,T)},ei.useEffect=function(d,T,H){var L=O.H;if(typeof H=="function")throw Error("useEffect CRUD overload is not enabled in this build of React.");return L.useEffect(d,T)},ei.useId=function(){return O.H.useId()},ei.useImperativeHandle=function(d,T,H){return O.H.useImperativeHandle(d,T,H)},ei.useInsertionEffect=function(d,T){return O.H.useInsertionEffect(d,T)},ei.useLayoutEffect=function(d,T){return O.H.useLayoutEffect(d,T)},ei.useMemo=function(d,T){return O.H.useMemo(d,T)},ei.useOptimistic=function(d,T){return O.H.useOptimistic(d,T)},ei.useReducer=function(d,T,H){return O.H.useReducer(d,T,H)},ei.useRef=function(d){return O.H.useRef(d)},ei.useState=function(d){return O.H.useState(d)},ei.useSyncExternalStore=function(d,T,H){return O.H.useSyncExternalStore(d,T,H)},ei.useTransition=function(){return O.H.useTransition()},ei.version="19.1.0",ei}var Sf;function ho(){return Sf||(Sf=1,oo.exports=uS()),oo.exports}var ci=ho();const Vi=eS(ci);var co={exports:{}},Vu={},so={exports:{}},fo={};/**
 * @license React
 * scheduler.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var Cf;function lS(){return Cf||(Cf=1,function(o){function h(b,_){var q=b.length;b.push(_);i:for(;0<q;){var bi=q-1>>>1,d=b[bi];if(0<P(d,_))b[bi]=_,b[q]=d,q=bi;else break i}}function V(b){return b.length===0?null:b[0]}function s(b){if(b.length===0)return null;var _=b[0],q=b.pop();if(q!==_){b[0]=q;i:for(var bi=0,d=b.length,T=d>>>1;bi<T;){var H=2*(bi+1)-1,L=b[H],X=H+1,si=b[X];if(0>P(L,q))X<d&&0>P(si,L)?(b[bi]=si,b[X]=q,bi=X):(b[bi]=L,b[H]=q,bi=H);else if(X<d&&0>P(si,q))b[bi]=si,b[X]=q,bi=X;else break i}}return _}function P(b,_){var q=b.sortIndex-_.sortIndex;return q!==0?q:b.id-_.id}if(o.unstable_now=void 0,typeof performance=="object"&&typeof performance.now=="function"){var R=performance;o.unstable_now=function(){return R.now()}}else{var N=Date,K=N.now();o.unstable_now=function(){return N.now()-K}}var z=[],B=[],D=1,Y=null,J=3,k=!1,ti=!1,ii=!1,Z=!1,j=typeof setTimeout=="function"?setTimeout:null,G=typeof clearTimeout=="function"?clearTimeout:null,A=typeof setImmediate<"u"?setImmediate:null;function x(b){for(var _=V(B);_!==null;){if(_.callback===null)s(B);else if(_.startTime<=b)s(B),_.sortIndex=_.expirationTime,h(z,_);else break;_=V(B)}}function O(b){if(ii=!1,x(b),!ti)if(V(z)!==null)ti=!0,Ci||(Ci=!0,yi());else{var _=V(B);_!==null&&Hi(O,_.startTime-b)}}var Ci=!1,$=-1,ai=5,Pi=-1;function Ii(){return Z?!0:!(o.unstable_now()-Pi<ai)}function Li(){if(Z=!1,Ci){var b=o.unstable_now();Pi=b;var _=!0;try{i:{ti=!1,ii&&(ii=!1,G($),$=-1),k=!0;var q=J;try{e:{for(x(b),Y=V(z);Y!==null&&!(Y.expirationTime>b&&Ii());){var bi=Y.callback;if(typeof bi=="function"){Y.callback=null,J=Y.priorityLevel;var d=bi(Y.expirationTime<=b);if(b=o.unstable_now(),typeof d=="function"){Y.callback=d,x(b),_=!0;break e}Y===V(z)&&s(z),x(b)}else s(z);Y=V(z)}if(Y!==null)_=!0;else{var T=V(B);T!==null&&Hi(O,T.startTime-b),_=!1}}break i}finally{Y=null,J=q,k=!1}_=void 0}}finally{_?yi():Ci=!1}}}var yi;if(typeof A=="function")yi=function(){A(Li)};else if(typeof MessageChannel<"u"){var me=new MessageChannel,Oe=me.port2;me.port1.onmessage=Li,yi=function(){Oe.postMessage(null)}}else yi=function(){j(Li,0)};function Hi(b,_){$=j(function(){b(o.unstable_now())},_)}o.unstable_IdlePriority=5,o.unstable_ImmediatePriority=1,o.unstable_LowPriority=4,o.unstable_NormalPriority=3,o.unstable_Profiling=null,o.unstable_UserBlockingPriority=2,o.unstable_cancelCallback=function(b){b.callback=null},o.unstable_forceFrameRate=function(b){0>b||125<b?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):ai=0<b?Math.floor(1e3/b):5},o.unstable_getCurrentPriorityLevel=function(){return J},o.unstable_next=function(b){switch(J){case 1:case 2:case 3:var _=3;break;default:_=J}var q=J;J=_;try{return b()}finally{J=q}},o.unstable_requestPaint=function(){Z=!0},o.unstable_runWithPriority=function(b,_){switch(b){case 1:case 2:case 3:case 4:case 5:break;default:b=3}var q=J;J=b;try{return _()}finally{J=q}},o.unstable_scheduleCallback=function(b,_,q){var bi=o.unstable_now();switch(typeof q=="object"&&q!==null?(q=q.delay,q=typeof q=="number"&&0<q?bi+q:bi):q=bi,b){case 1:var d=-1;break;case 2:d=250;break;case 5:d=1073741823;break;case 4:d=1e4;break;default:d=5e3}return d=q+d,b={id:D++,callback:_,priorityLevel:b,startTime:q,expirationTime:d,sortIndex:-1},q>bi?(b.sortIndex=q,h(B,b),V(z)===null&&b===V(B)&&(ii?(G($),$=-1):ii=!0,Hi(O,q-bi))):(b.sortIndex=d,h(z,b),ti||k||(ti=!0,Ci||(Ci=!0,yi()))),b},o.unstable_shouldYield=Ii,o.unstable_wrapCallback=function(b){var _=J;return function(){var q=J;J=_;try{return b.apply(this,arguments)}finally{J=q}}}}(fo)),fo}var vf;function nS(){return vf||(vf=1,so.exports=lS()),so.exports}var mo={exports:{}},Ki={};/**
 * @license React
 * react-dom.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var hf;function rS(){if(hf)return Ki;hf=1;var o=ho();function h(z){var B="https://react.dev/errors/"+z;if(1<arguments.length){B+="?args[]="+encodeURIComponent(arguments[1]);for(var D=2;D<arguments.length;D++)B+="&args[]="+encodeURIComponent(arguments[D])}return"Minified React error #"+z+"; visit "+B+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function V(){}var s={d:{f:V,r:function(){throw Error(h(522))},D:V,C:V,L:V,m:V,X:V,S:V,M:V},p:0,findDOMNode:null},P=Symbol.for("react.portal");function R(z,B,D){var Y=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:P,key:Y==null?null:""+Y,children:z,containerInfo:B,implementation:D}}var N=o.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;function K(z,B){if(z==="font")return"";if(typeof B=="string")return B==="use-credentials"?B:""}return Ki.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE=s,Ki.createPortal=function(z,B){var D=2<arguments.length&&arguments[2]!==void 0?arguments[2]:null;if(!B||B.nodeType!==1&&B.nodeType!==9&&B.nodeType!==11)throw Error(h(299));return R(z,B,null,D)},Ki.flushSync=function(z){var B=N.T,D=s.p;try{if(N.T=null,s.p=2,z)return z()}finally{N.T=B,s.p=D,s.d.f()}},Ki.preconnect=function(z,B){typeof z=="string"&&(B?(B=B.crossOrigin,B=typeof B=="string"?B==="use-credentials"?B:"":void 0):B=null,s.d.C(z,B))},Ki.prefetchDNS=function(z){typeof z=="string"&&s.d.D(z)},Ki.preinit=function(z,B){if(typeof z=="string"&&B&&typeof B.as=="string"){var D=B.as,Y=K(D,B.crossOrigin),J=typeof B.integrity=="string"?B.integrity:void 0,k=typeof B.fetchPriority=="string"?B.fetchPriority:void 0;D==="style"?s.d.S(z,typeof B.precedence=="string"?B.precedence:void 0,{crossOrigin:Y,integrity:J,fetchPriority:k}):D==="script"&&s.d.X(z,{crossOrigin:Y,integrity:J,fetchPriority:k,nonce:typeof B.nonce=="string"?B.nonce:void 0})}},Ki.preinitModule=function(z,B){if(typeof z=="string")if(typeof B=="object"&&B!==null){if(B.as==null||B.as==="script"){var D=K(B.as,B.crossOrigin);s.d.M(z,{crossOrigin:D,integrity:typeof B.integrity=="string"?B.integrity:void 0,nonce:typeof B.nonce=="string"?B.nonce:void 0})}}else B==null&&s.d.M(z)},Ki.preload=function(z,B){if(typeof z=="string"&&typeof B=="object"&&B!==null&&typeof B.as=="string"){var D=B.as,Y=K(D,B.crossOrigin);s.d.L(z,D,{crossOrigin:Y,integrity:typeof B.integrity=="string"?B.integrity:void 0,nonce:typeof B.nonce=="string"?B.nonce:void 0,type:typeof B.type=="string"?B.type:void 0,fetchPriority:typeof B.fetchPriority=="string"?B.fetchPriority:void 0,referrerPolicy:typeof B.referrerPolicy=="string"?B.referrerPolicy:void 0,imageSrcSet:typeof B.imageSrcSet=="string"?B.imageSrcSet:void 0,imageSizes:typeof B.imageSizes=="string"?B.imageSizes:void 0,media:typeof B.media=="string"?B.media:void 0})}},Ki.preloadModule=function(z,B){if(typeof z=="string")if(B){var D=K(B.as,B.crossOrigin);s.d.m(z,{as:typeof B.as=="string"&&B.as!=="script"?B.as:void 0,crossOrigin:D,integrity:typeof B.integrity=="string"?B.integrity:void 0})}else s.d.m(z)},Ki.requestFormReset=function(z){s.d.r(z)},Ki.unstable_batchedUpdates=function(z,B){return z(B)},Ki.useFormState=function(z,B,D){return N.H.useFormState(z,B,D)},Ki.useFormStatus=function(){return N.H.useHostTransitionStatus()},Ki.version="19.1.0",Ki}var Bf;function oS(){if(Bf)return mo.exports;Bf=1;function o(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(o)}catch(h){console.error(h)}}return o(),mo.exports=rS(),mo.exports}/**
 * @license React
 * react-dom-client.production.js
 *
 * Copyright (c) Meta Platforms, Inc. and affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var bf;function cS(){if(bf)return Vu;bf=1;var o=nS(),h=ho(),V=oS();function s(i){var e="https://react.dev/errors/"+i;if(1<arguments.length){e+="?args[]="+encodeURIComponent(arguments[1]);for(var a=2;a<arguments.length;a++)e+="&args[]="+encodeURIComponent(arguments[a])}return"Minified React error #"+i+"; visit "+e+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}function P(i){return!(!i||i.nodeType!==1&&i.nodeType!==9&&i.nodeType!==11)}function R(i){var e=i,a=i;if(i.alternate)for(;e.return;)e=e.return;else{i=e;do e=i,(e.flags&4098)!==0&&(a=e.return),i=e.return;while(i)}return e.tag===3?a:null}function N(i){if(i.tag===13){var e=i.memoizedState;if(e===null&&(i=i.alternate,i!==null&&(e=i.memoizedState)),e!==null)return e.dehydrated}return null}function K(i){if(R(i)!==i)throw Error(s(188))}function z(i){var e=i.alternate;if(!e){if(e=R(i),e===null)throw Error(s(188));return e!==i?null:i}for(var a=i,t=e;;){var u=a.return;if(u===null)break;var l=u.alternate;if(l===null){if(t=u.return,t!==null){a=t;continue}break}if(u.child===l.child){for(l=u.child;l;){if(l===a)return K(u),i;if(l===t)return K(u),e;l=l.sibling}throw Error(s(188))}if(a.return!==t.return)a=u,t=l;else{for(var n=!1,r=u.child;r;){if(r===a){n=!0,a=u,t=l;break}if(r===t){n=!0,t=u,a=l;break}r=r.sibling}if(!n){for(r=l.child;r;){if(r===a){n=!0,a=l,t=u;break}if(r===t){n=!0,t=l,a=u;break}r=r.sibling}if(!n)throw Error(s(189))}}if(a.alternate!==t)throw Error(s(190))}if(a.tag!==3)throw Error(s(188));return a.stateNode.current===a?i:e}function B(i){var e=i.tag;if(e===5||e===26||e===27||e===6)return i;for(i=i.child;i!==null;){if(e=B(i),e!==null)return e;i=i.sibling}return null}var D=Object.assign,Y=Symbol.for("react.element"),J=Symbol.for("react.transitional.element"),k=Symbol.for("react.portal"),ti=Symbol.for("react.fragment"),ii=Symbol.for("react.strict_mode"),Z=Symbol.for("react.profiler"),j=Symbol.for("react.provider"),G=Symbol.for("react.consumer"),A=Symbol.for("react.context"),x=Symbol.for("react.forward_ref"),O=Symbol.for("react.suspense"),Ci=Symbol.for("react.suspense_list"),$=Symbol.for("react.memo"),ai=Symbol.for("react.lazy"),Pi=Symbol.for("react.activity"),Ii=Symbol.for("react.memo_cache_sentinel"),Li=Symbol.iterator;function yi(i){return i===null||typeof i!="object"?null:(i=Li&&i[Li]||i["@@iterator"],typeof i=="function"?i:null)}var me=Symbol.for("react.client.reference");function Oe(i){if(i==null)return null;if(typeof i=="function")return i.$$typeof===me?null:i.displayName||i.name||null;if(typeof i=="string")return i;switch(i){case ti:return"Fragment";case Z:return"Profiler";case ii:return"StrictMode";case O:return"Suspense";case Ci:return"SuspenseList";case Pi:return"Activity"}if(typeof i=="object")switch(i.$$typeof){case k:return"Portal";case A:return(i.displayName||"Context")+".Provider";case G:return(i._context.displayName||"Context")+".Consumer";case x:var e=i.render;return i=i.displayName,i||(i=e.displayName||e.name||"",i=i!==""?"ForwardRef("+i+")":"ForwardRef"),i;case $:return e=i.displayName||null,e!==null?e:Oe(i.type)||"Memo";case ai:e=i._payload,i=i._init;try{return Oe(i(e))}catch{}}return null}var Hi=Array.isArray,b=h.__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,_=V.__DOM_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE,q={pending:!1,data:null,method:null,action:null},bi=[],d=-1;function T(i){return{current:i}}function H(i){0>d||(i.current=bi[d],bi[d]=null,d--)}function L(i,e){d++,bi[d]=i.current,i.current=e}var X=T(null),si=T(null),W=T(null),te=T(null);function Ti(i,e){switch(L(W,e),L(si,i),L(X,null),e.nodeType){case 9:case 11:i=(i=e.documentElement)&&(i=i.namespaceURI)?jd(i):0;break;default:if(i=e.tagName,e=e.namespaceURI)e=jd(e),i=xd(e,i);else switch(i){case"svg":i=1;break;case"math":i=2;break;default:i=0}}H(X),L(X,i)}function Ie(){H(X),H(si),H(W)}function Yl(i){i.memoizedState!==null&&L(te,i);var e=X.current,a=xd(e,i.type);e!==a&&(L(si,i),L(X,a))}function zu(i){si.current===i&&(H(X),H(si)),te.current===i&&(H(te),vu._currentValue=q)}var Xl=Object.prototype.hasOwnProperty,Ql=o.unstable_scheduleCallback,Kl=o.unstable_cancelCallback,Nf=o.unstable_shouldYield,_f=o.unstable_requestPaint,De=o.unstable_now,Lf=o.unstable_getCurrentPriorityLevel,Bo=o.unstable_ImmediatePriority,bo=o.unstable_UserBlockingPriority,Pu=o.unstable_NormalPriority,Hf=o.unstable_LowPriority,Mo=o.unstable_IdlePriority,Ef=o.log,Uf=o.unstable_setDisableYieldValue,Tt=null,ue=null;function we(i){if(typeof Ef=="function"&&Uf(i),ue&&typeof ue.setStrictMode=="function")try{ue.setStrictMode(Tt,i)}catch{}}var le=Math.clz32?Math.clz32:Jf,jf=Math.log,xf=Math.LN2;function Jf(i){return i>>>=0,i===0?32:31-(jf(i)/xf|0)|0}var Ru=256,Gu=4194304;function ba(i){var e=i&42;if(e!==0)return e;switch(i&-i){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:return 64;case 128:return 128;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return i&4194048;case 4194304:case 8388608:case 16777216:case 33554432:return i&62914560;case 67108864:return 67108864;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 0;default:return i}}function Au(i,e,a){var t=i.pendingLanes;if(t===0)return 0;var u=0,l=i.suspendedLanes,n=i.pingedLanes;i=i.warmLanes;var r=t&134217727;return r!==0?(t=r&~l,t!==0?u=ba(t):(n&=r,n!==0?u=ba(n):a||(a=r&~i,a!==0&&(u=ba(a))))):(r=t&~l,r!==0?u=ba(r):n!==0?u=ba(n):a||(a=t&~i,a!==0&&(u=ba(a)))),u===0?0:e!==0&&e!==u&&(e&l)===0&&(l=u&-u,a=e&-e,l>=a||l===32&&(a&4194048)!==0)?e:u}function Dt(i,e){return(i.pendingLanes&~(i.suspendedLanes&~i.pingedLanes)&e)===0}function Ff(i,e){switch(i){case 1:case 2:case 4:case 8:case 64:return e+250;case 16:case 32:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return e+5e3;case 4194304:case 8388608:case 16777216:case 33554432:return-1;case 67108864:case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function po(){var i=Ru;return Ru<<=1,(Ru&4194048)===0&&(Ru=256),i}function Vo(){var i=Gu;return Gu<<=1,(Gu&62914560)===0&&(Gu=4194304),i}function Il(i){for(var e=[],a=0;31>a;a++)e.push(i);return e}function zt(i,e){i.pendingLanes|=e,e!==268435456&&(i.suspendedLanes=0,i.pingedLanes=0,i.warmLanes=0)}function Zf(i,e,a,t,u,l){var n=i.pendingLanes;i.pendingLanes=a,i.suspendedLanes=0,i.pingedLanes=0,i.warmLanes=0,i.expiredLanes&=a,i.entangledLanes&=a,i.errorRecoveryDisabledLanes&=a,i.shellSuspendCounter=0;var r=i.entanglements,c=i.expirationTimes,S=i.hiddenUpdates;for(a=n&~a;0<a;){var M=31-le(a),y=1<<M;r[M]=0,c[M]=-1;var C=S[M];if(C!==null)for(S[M]=null,M=0;M<C.length;M++){var v=C[M];v!==null&&(v.lane&=-536870913)}a&=~y}t!==0&&yo(i,t,0),l!==0&&u===0&&i.tag!==0&&(i.suspendedLanes|=l&~(n&~e))}function yo(i,e,a){i.pendingLanes|=e,i.suspendedLanes&=~e;var t=31-le(e);i.entangledLanes|=e,i.entanglements[t]=i.entanglements[t]|1073741824|a&4194090}function To(i,e){var a=i.entangledLanes|=e;for(i=i.entanglements;a;){var t=31-le(a),u=1<<t;u&e|i[t]&e&&(i[t]|=e),a&=~u}}function wl(i){switch(i){case 2:i=1;break;case 8:i=4;break;case 32:i=16;break;case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:i=128;break;case 268435456:i=134217728;break;default:i=0}return i}function kl(i){return i&=-i,2<i?8<i?(i&134217727)!==0?32:268435456:8:2}function Do(){var i=_.p;return i!==0?i:(i=window.event,i===void 0?32:nf(i.type))}function qf(i,e){var a=_.p;try{return _.p=i,e()}finally{_.p=a}}var ke=Math.random().toString(36).slice(2),Xi="__reactFiber$"+ke,$i="__reactProps$"+ke,xa="__reactContainer$"+ke,$l="__reactEvents$"+ke,Yf="__reactListeners$"+ke,Xf="__reactHandles$"+ke,zo="__reactResources$"+ke,Pt="__reactMarker$"+ke;function Wl(i){delete i[Xi],delete i[$i],delete i[$l],delete i[Yf],delete i[Xf]}function Ja(i){var e=i[Xi];if(e)return e;for(var a=i.parentNode;a;){if(e=a[xa]||a[Xi]){if(a=e.alternate,e.child!==null||a!==null&&a.child!==null)for(i=qd(i);i!==null;){if(a=i[Xi])return a;i=qd(i)}return e}i=a,a=i.parentNode}return null}function Fa(i){if(i=i[Xi]||i[xa]){var e=i.tag;if(e===5||e===6||e===13||e===26||e===27||e===3)return i}return null}function Rt(i){var e=i.tag;if(e===5||e===26||e===27||e===6)return i.stateNode;throw Error(s(33))}function Za(i){var e=i[zo];return e||(e=i[zo]={hoistableStyles:new Map,hoistableScripts:new Map}),e}function ji(i){i[Pt]=!0}var Po=new Set,Ro={};function Ma(i,e){qa(i,e),qa(i+"Capture",e)}function qa(i,e){for(Ro[i]=e,i=0;i<e.length;i++)Po.add(e[i])}var Qf=RegExp("^[:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD][:A-Z_a-z\\u00C0-\\u00D6\\u00D8-\\u00F6\\u00F8-\\u02FF\\u0370-\\u037D\\u037F-\\u1FFF\\u200C-\\u200D\\u2070-\\u218F\\u2C00-\\u2FEF\\u3001-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFFD\\-.0-9\\u00B7\\u0300-\\u036F\\u203F-\\u2040]*$"),Go={},Ao={};function Kf(i){return Xl.call(Ao,i)?!0:Xl.call(Go,i)?!1:Qf.test(i)?Ao[i]=!0:(Go[i]=!0,!1)}function Ou(i,e,a){if(Kf(e))if(a===null)i.removeAttribute(e);else{switch(typeof a){case"undefined":case"function":case"symbol":i.removeAttribute(e);return;case"boolean":var t=e.toLowerCase().slice(0,5);if(t!=="data-"&&t!=="aria-"){i.removeAttribute(e);return}}i.setAttribute(e,""+a)}}function Nu(i,e,a){if(a===null)i.removeAttribute(e);else{switch(typeof a){case"undefined":case"function":case"symbol":case"boolean":i.removeAttribute(e);return}i.setAttribute(e,""+a)}}function Ne(i,e,a,t){if(t===null)i.removeAttribute(a);else{switch(typeof t){case"undefined":case"function":case"symbol":case"boolean":i.removeAttribute(a);return}i.setAttributeNS(e,a,""+t)}}var en,Oo;function Ya(i){if(en===void 0)try{throw Error()}catch(a){var e=a.stack.trim().match(/\n( *(at )?)/);en=e&&e[1]||"",Oo=-1<a.stack.indexOf(`
    at`)?" (<anonymous>)":-1<a.stack.indexOf("@")?"@unknown:0:0":""}return`
`+en+i+Oo}var an=!1;function tn(i,e){if(!i||an)return"";an=!0;var a=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{var t={DetermineComponentFrameRoot:function(){try{if(e){var y=function(){throw Error()};if(Object.defineProperty(y.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(y,[])}catch(v){var C=v}Reflect.construct(i,[],y)}else{try{y.call()}catch(v){C=v}i.call(y.prototype)}}else{try{throw Error()}catch(v){C=v}(y=i())&&typeof y.catch=="function"&&y.catch(function(){})}}catch(v){if(v&&C&&typeof v.stack=="string")return[v.stack,C.stack]}return[null,null]}};t.DetermineComponentFrameRoot.displayName="DetermineComponentFrameRoot";var u=Object.getOwnPropertyDescriptor(t.DetermineComponentFrameRoot,"name");u&&u.configurable&&Object.defineProperty(t.DetermineComponentFrameRoot,"name",{value:"DetermineComponentFrameRoot"});var l=t.DetermineComponentFrameRoot(),n=l[0],r=l[1];if(n&&r){var c=n.split(`
`),S=r.split(`
`);for(u=t=0;t<c.length&&!c[t].includes("DetermineComponentFrameRoot");)t++;for(;u<S.length&&!S[u].includes("DetermineComponentFrameRoot");)u++;if(t===c.length||u===S.length)for(t=c.length-1,u=S.length-1;1<=t&&0<=u&&c[t]!==S[u];)u--;for(;1<=t&&0<=u;t--,u--)if(c[t]!==S[u]){if(t!==1||u!==1)do if(t--,u--,0>u||c[t]!==S[u]){var M=`
`+c[t].replace(" at new "," at ");return i.displayName&&M.includes("<anonymous>")&&(M=M.replace("<anonymous>",i.displayName)),M}while(1<=t&&0<=u);break}}}finally{an=!1,Error.prepareStackTrace=a}return(a=i?i.displayName||i.name:"")?Ya(a):""}function If(i){switch(i.tag){case 26:case 27:case 5:return Ya(i.type);case 16:return Ya("Lazy");case 13:return Ya("Suspense");case 19:return Ya("SuspenseList");case 0:case 15:return tn(i.type,!1);case 11:return tn(i.type.render,!1);case 1:return tn(i.type,!0);case 31:return Ya("Activity");default:return""}}function No(i){try{var e="";do e+=If(i),i=i.return;while(i);return e}catch(a){return`
Error generating stack: `+a.message+`
`+a.stack}}function ge(i){switch(typeof i){case"bigint":case"boolean":case"number":case"string":case"undefined":return i;case"object":return i;default:return""}}function _o(i){var e=i.type;return(i=i.nodeName)&&i.toLowerCase()==="input"&&(e==="checkbox"||e==="radio")}function wf(i){var e=_o(i)?"checked":"value",a=Object.getOwnPropertyDescriptor(i.constructor.prototype,e),t=""+i[e];if(!i.hasOwnProperty(e)&&typeof a<"u"&&typeof a.get=="function"&&typeof a.set=="function"){var u=a.get,l=a.set;return Object.defineProperty(i,e,{configurable:!0,get:function(){return u.call(this)},set:function(n){t=""+n,l.call(this,n)}}),Object.defineProperty(i,e,{enumerable:a.enumerable}),{getValue:function(){return t},setValue:function(n){t=""+n},stopTracking:function(){i._valueTracker=null,delete i[e]}}}}function _u(i){i._valueTracker||(i._valueTracker=wf(i))}function Lo(i){if(!i)return!1;var e=i._valueTracker;if(!e)return!0;var a=e.getValue(),t="";return i&&(t=_o(i)?i.checked?"true":"false":i.value),i=t,i!==a?(e.setValue(i),!0):!1}function Lu(i){if(i=i||(typeof document<"u"?document:void 0),typeof i>"u")return null;try{return i.activeElement||i.body}catch{return i.body}}var kf=/[\n"\\]/g;function Se(i){return i.replace(kf,function(e){return"\\"+e.charCodeAt(0).toString(16)+" "})}function un(i,e,a,t,u,l,n,r){i.name="",n!=null&&typeof n!="function"&&typeof n!="symbol"&&typeof n!="boolean"?i.type=n:i.removeAttribute("type"),e!=null?n==="number"?(e===0&&i.value===""||i.value!=e)&&(i.value=""+ge(e)):i.value!==""+ge(e)&&(i.value=""+ge(e)):n!=="submit"&&n!=="reset"||i.removeAttribute("value"),e!=null?ln(i,n,ge(e)):a!=null?ln(i,n,ge(a)):t!=null&&i.removeAttribute("value"),u==null&&l!=null&&(i.defaultChecked=!!l),u!=null&&(i.checked=u&&typeof u!="function"&&typeof u!="symbol"),r!=null&&typeof r!="function"&&typeof r!="symbol"&&typeof r!="boolean"?i.name=""+ge(r):i.removeAttribute("name")}function Ho(i,e,a,t,u,l,n,r){if(l!=null&&typeof l!="function"&&typeof l!="symbol"&&typeof l!="boolean"&&(i.type=l),e!=null||a!=null){if(!(l!=="submit"&&l!=="reset"||e!=null))return;a=a!=null?""+ge(a):"",e=e!=null?""+ge(e):a,r||e===i.value||(i.value=e),i.defaultValue=e}t=t??u,t=typeof t!="function"&&typeof t!="symbol"&&!!t,i.checked=r?i.checked:!!t,i.defaultChecked=!!t,n!=null&&typeof n!="function"&&typeof n!="symbol"&&typeof n!="boolean"&&(i.name=n)}function ln(i,e,a){e==="number"&&Lu(i.ownerDocument)===i||i.defaultValue===""+a||(i.defaultValue=""+a)}function Xa(i,e,a,t){if(i=i.options,e){e={};for(var u=0;u<a.length;u++)e["$"+a[u]]=!0;for(a=0;a<i.length;a++)u=e.hasOwnProperty("$"+i[a].value),i[a].selected!==u&&(i[a].selected=u),u&&t&&(i[a].defaultSelected=!0)}else{for(a=""+ge(a),e=null,u=0;u<i.length;u++){if(i[u].value===a){i[u].selected=!0,t&&(i[u].defaultSelected=!0);return}e!==null||i[u].disabled||(e=i[u])}e!==null&&(e.selected=!0)}}function Eo(i,e,a){if(e!=null&&(e=""+ge(e),e!==i.value&&(i.value=e),a==null)){i.defaultValue!==e&&(i.defaultValue=e);return}i.defaultValue=a!=null?""+ge(a):""}function Uo(i,e,a,t){if(e==null){if(t!=null){if(a!=null)throw Error(s(92));if(Hi(t)){if(1<t.length)throw Error(s(93));t=t[0]}a=t}a==null&&(a=""),e=a}a=ge(e),i.defaultValue=a,t=i.textContent,t===a&&t!==""&&t!==null&&(i.value=t)}function Qa(i,e){if(e){var a=i.firstChild;if(a&&a===i.lastChild&&a.nodeType===3){a.nodeValue=e;return}}i.textContent=e}var $f=new Set("animationIterationCount aspectRatio borderImageOutset borderImageSlice borderImageWidth boxFlex boxFlexGroup boxOrdinalGroup columnCount columns flex flexGrow flexPositive flexShrink flexNegative flexOrder gridArea gridRow gridRowEnd gridRowSpan gridRowStart gridColumn gridColumnEnd gridColumnSpan gridColumnStart fontWeight lineClamp lineHeight opacity order orphans scale tabSize widows zIndex zoom fillOpacity floodOpacity stopOpacity strokeDasharray strokeDashoffset strokeMiterlimit strokeOpacity strokeWidth MozAnimationIterationCount MozBoxFlex MozBoxFlexGroup MozLineClamp msAnimationIterationCount msFlex msZoom msFlexGrow msFlexNegative msFlexOrder msFlexPositive msFlexShrink msGridColumn msGridColumnSpan msGridRow msGridRowSpan WebkitAnimationIterationCount WebkitBoxFlex WebKitBoxFlexGroup WebkitBoxOrdinalGroup WebkitColumnCount WebkitColumns WebkitFlex WebkitFlexGrow WebkitFlexPositive WebkitFlexShrink WebkitLineClamp".split(" "));function jo(i,e,a){var t=e.indexOf("--")===0;a==null||typeof a=="boolean"||a===""?t?i.setProperty(e,""):e==="float"?i.cssFloat="":i[e]="":t?i.setProperty(e,a):typeof a!="number"||a===0||$f.has(e)?e==="float"?i.cssFloat=a:i[e]=(""+a).trim():i[e]=a+"px"}function xo(i,e,a){if(e!=null&&typeof e!="object")throw Error(s(62));if(i=i.style,a!=null){for(var t in a)!a.hasOwnProperty(t)||e!=null&&e.hasOwnProperty(t)||(t.indexOf("--")===0?i.setProperty(t,""):t==="float"?i.cssFloat="":i[t]="");for(var u in e)t=e[u],e.hasOwnProperty(u)&&a[u]!==t&&jo(i,u,t)}else for(var l in e)e.hasOwnProperty(l)&&jo(i,l,e[l])}function nn(i){if(i.indexOf("-")===-1)return!1;switch(i){case"annotation-xml":case"color-profile":case"font-face":case"font-face-src":case"font-face-uri":case"font-face-format":case"font-face-name":case"missing-glyph":return!1;default:return!0}}var Wf=new Map([["acceptCharset","accept-charset"],["htmlFor","for"],["httpEquiv","http-equiv"],["crossOrigin","crossorigin"],["accentHeight","accent-height"],["alignmentBaseline","alignment-baseline"],["arabicForm","arabic-form"],["baselineShift","baseline-shift"],["capHeight","cap-height"],["clipPath","clip-path"],["clipRule","clip-rule"],["colorInterpolation","color-interpolation"],["colorInterpolationFilters","color-interpolation-filters"],["colorProfile","color-profile"],["colorRendering","color-rendering"],["dominantBaseline","dominant-baseline"],["enableBackground","enable-background"],["fillOpacity","fill-opacity"],["fillRule","fill-rule"],["floodColor","flood-color"],["floodOpacity","flood-opacity"],["fontFamily","font-family"],["fontSize","font-size"],["fontSizeAdjust","font-size-adjust"],["fontStretch","font-stretch"],["fontStyle","font-style"],["fontVariant","font-variant"],["fontWeight","font-weight"],["glyphName","glyph-name"],["glyphOrientationHorizontal","glyph-orientation-horizontal"],["glyphOrientationVertical","glyph-orientation-vertical"],["horizAdvX","horiz-adv-x"],["horizOriginX","horiz-origin-x"],["imageRendering","image-rendering"],["letterSpacing","letter-spacing"],["lightingColor","lighting-color"],["markerEnd","marker-end"],["markerMid","marker-mid"],["markerStart","marker-start"],["overlinePosition","overline-position"],["overlineThickness","overline-thickness"],["paintOrder","paint-order"],["panose-1","panose-1"],["pointerEvents","pointer-events"],["renderingIntent","rendering-intent"],["shapeRendering","shape-rendering"],["stopColor","stop-color"],["stopOpacity","stop-opacity"],["strikethroughPosition","strikethrough-position"],["strikethroughThickness","strikethrough-thickness"],["strokeDasharray","stroke-dasharray"],["strokeDashoffset","stroke-dashoffset"],["strokeLinecap","stroke-linecap"],["strokeLinejoin","stroke-linejoin"],["strokeMiterlimit","stroke-miterlimit"],["strokeOpacity","stroke-opacity"],["strokeWidth","stroke-width"],["textAnchor","text-anchor"],["textDecoration","text-decoration"],["textRendering","text-rendering"],["transformOrigin","transform-origin"],["underlinePosition","underline-position"],["underlineThickness","underline-thickness"],["unicodeBidi","unicode-bidi"],["unicodeRange","unicode-range"],["unitsPerEm","units-per-em"],["vAlphabetic","v-alphabetic"],["vHanging","v-hanging"],["vIdeographic","v-ideographic"],["vMathematical","v-mathematical"],["vectorEffect","vector-effect"],["vertAdvY","vert-adv-y"],["vertOriginX","vert-origin-x"],["vertOriginY","vert-origin-y"],["wordSpacing","word-spacing"],["writingMode","writing-mode"],["xmlnsXlink","xmlns:xlink"],["xHeight","x-height"]]),im=/^[\u0000-\u001F ]*j[\r\n\t]*a[\r\n\t]*v[\r\n\t]*a[\r\n\t]*s[\r\n\t]*c[\r\n\t]*r[\r\n\t]*i[\r\n\t]*p[\r\n\t]*t[\r\n\t]*:/i;function Hu(i){return im.test(""+i)?"javascript:throw new Error('React has blocked a javascript: URL as a security precaution.')":i}var rn=null;function on(i){return i=i.target||i.srcElement||window,i.correspondingUseElement&&(i=i.correspondingUseElement),i.nodeType===3?i.parentNode:i}var Ka=null,Ia=null;function Jo(i){var e=Fa(i);if(e&&(i=e.stateNode)){var a=i[$i]||null;i:switch(i=e.stateNode,e.type){case"input":if(un(i,a.value,a.defaultValue,a.defaultValue,a.checked,a.defaultChecked,a.type,a.name),e=a.name,a.type==="radio"&&e!=null){for(a=i;a.parentNode;)a=a.parentNode;for(a=a.querySelectorAll('input[name="'+Se(""+e)+'"][type="radio"]'),e=0;e<a.length;e++){var t=a[e];if(t!==i&&t.form===i.form){var u=t[$i]||null;if(!u)throw Error(s(90));un(t,u.value,u.defaultValue,u.defaultValue,u.checked,u.defaultChecked,u.type,u.name)}}for(e=0;e<a.length;e++)t=a[e],t.form===i.form&&Lo(t)}break i;case"textarea":Eo(i,a.value,a.defaultValue);break i;case"select":e=a.value,e!=null&&Xa(i,!!a.multiple,e,!1)}}}var cn=!1;function Fo(i,e,a){if(cn)return i(e,a);cn=!0;try{var t=i(e);return t}finally{if(cn=!1,(Ka!==null||Ia!==null)&&(Ml(),Ka&&(e=Ka,i=Ia,Ia=Ka=null,Jo(e),i)))for(e=0;e<i.length;e++)Jo(i[e])}}function Gt(i,e){var a=i.stateNode;if(a===null)return null;var t=a[$i]||null;if(t===null)return null;a=t[e];i:switch(e){case"onClick":case"onClickCapture":case"onDoubleClick":case"onDoubleClickCapture":case"onMouseDown":case"onMouseDownCapture":case"onMouseMove":case"onMouseMoveCapture":case"onMouseUp":case"onMouseUpCapture":case"onMouseEnter":(t=!t.disabled)||(i=i.type,t=!(i==="button"||i==="input"||i==="select"||i==="textarea")),i=!t;break i;default:i=!1}if(i)return null;if(a&&typeof a!="function")throw Error(s(231,e,typeof a));return a}var _e=!(typeof window>"u"||typeof window.document>"u"||typeof window.document.createElement>"u"),sn=!1;if(_e)try{var At={};Object.defineProperty(At,"passive",{get:function(){sn=!0}}),window.addEventListener("test",At,At),window.removeEventListener("test",At,At)}catch{sn=!1}var $e=null,dn=null,Eu=null;function Zo(){if(Eu)return Eu;var i,e=dn,a=e.length,t,u="value"in $e?$e.value:$e.textContent,l=u.length;for(i=0;i<a&&e[i]===u[i];i++);var n=a-i;for(t=1;t<=n&&e[a-t]===u[l-t];t++);return Eu=u.slice(i,1<t?1-t:void 0)}function Uu(i){var e=i.keyCode;return"charCode"in i?(i=i.charCode,i===0&&e===13&&(i=13)):i=e,i===10&&(i=13),32<=i||i===13?i:0}function ju(){return!0}function qo(){return!1}function Wi(i){function e(a,t,u,l,n){this._reactName=a,this._targetInst=u,this.type=t,this.nativeEvent=l,this.target=n,this.currentTarget=null;for(var r in i)i.hasOwnProperty(r)&&(a=i[r],this[r]=a?a(l):l[r]);return this.isDefaultPrevented=(l.defaultPrevented!=null?l.defaultPrevented:l.returnValue===!1)?ju:qo,this.isPropagationStopped=qo,this}return D(e.prototype,{preventDefault:function(){this.defaultPrevented=!0;var a=this.nativeEvent;a&&(a.preventDefault?a.preventDefault():typeof a.returnValue!="unknown"&&(a.returnValue=!1),this.isDefaultPrevented=ju)},stopPropagation:function(){var a=this.nativeEvent;a&&(a.stopPropagation?a.stopPropagation():typeof a.cancelBubble!="unknown"&&(a.cancelBubble=!0),this.isPropagationStopped=ju)},persist:function(){},isPersistent:ju}),e}var pa={eventPhase:0,bubbles:0,cancelable:0,timeStamp:function(i){return i.timeStamp||Date.now()},defaultPrevented:0,isTrusted:0},xu=Wi(pa),Ot=D({},pa,{view:0,detail:0}),em=Wi(Ot),fn,mn,Nt,Ju=D({},Ot,{screenX:0,screenY:0,clientX:0,clientY:0,pageX:0,pageY:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,getModifierState:Sn,button:0,buttons:0,relatedTarget:function(i){return i.relatedTarget===void 0?i.fromElement===i.srcElement?i.toElement:i.fromElement:i.relatedTarget},movementX:function(i){return"movementX"in i?i.movementX:(i!==Nt&&(Nt&&i.type==="mousemove"?(fn=i.screenX-Nt.screenX,mn=i.screenY-Nt.screenY):mn=fn=0,Nt=i),fn)},movementY:function(i){return"movementY"in i?i.movementY:mn}}),Yo=Wi(Ju),am=D({},Ju,{dataTransfer:0}),tm=Wi(am),um=D({},Ot,{relatedTarget:0}),gn=Wi(um),lm=D({},pa,{animationName:0,elapsedTime:0,pseudoElement:0}),nm=Wi(lm),rm=D({},pa,{clipboardData:function(i){return"clipboardData"in i?i.clipboardData:window.clipboardData}}),om=Wi(rm),cm=D({},pa,{data:0}),Xo=Wi(cm),sm={Esc:"Escape",Spacebar:" ",Left:"ArrowLeft",Up:"ArrowUp",Right:"ArrowRight",Down:"ArrowDown",Del:"Delete",Win:"OS",Menu:"ContextMenu",Apps:"ContextMenu",Scroll:"ScrollLock",MozPrintableKey:"Unidentified"},dm={8:"Backspace",9:"Tab",12:"Clear",13:"Enter",16:"Shift",17:"Control",18:"Alt",19:"Pause",20:"CapsLock",27:"Escape",32:" ",33:"PageUp",34:"PageDown",35:"End",36:"Home",37:"ArrowLeft",38:"ArrowUp",39:"ArrowRight",40:"ArrowDown",45:"Insert",46:"Delete",112:"F1",113:"F2",114:"F3",115:"F4",116:"F5",117:"F6",118:"F7",119:"F8",120:"F9",121:"F10",122:"F11",123:"F12",144:"NumLock",145:"ScrollLock",224:"Meta"},fm={Alt:"altKey",Control:"ctrlKey",Meta:"metaKey",Shift:"shiftKey"};function mm(i){var e=this.nativeEvent;return e.getModifierState?e.getModifierState(i):(i=fm[i])?!!e[i]:!1}function Sn(){return mm}var gm=D({},Ot,{key:function(i){if(i.key){var e=sm[i.key]||i.key;if(e!=="Unidentified")return e}return i.type==="keypress"?(i=Uu(i),i===13?"Enter":String.fromCharCode(i)):i.type==="keydown"||i.type==="keyup"?dm[i.keyCode]||"Unidentified":""},code:0,location:0,ctrlKey:0,shiftKey:0,altKey:0,metaKey:0,repeat:0,locale:0,getModifierState:Sn,charCode:function(i){return i.type==="keypress"?Uu(i):0},keyCode:function(i){return i.type==="keydown"||i.type==="keyup"?i.keyCode:0},which:function(i){return i.type==="keypress"?Uu(i):i.type==="keydown"||i.type==="keyup"?i.keyCode:0}}),Sm=Wi(gm),Cm=D({},Ju,{pointerId:0,width:0,height:0,pressure:0,tangentialPressure:0,tiltX:0,tiltY:0,twist:0,pointerType:0,isPrimary:0}),Qo=Wi(Cm),vm=D({},Ot,{touches:0,targetTouches:0,changedTouches:0,altKey:0,metaKey:0,ctrlKey:0,shiftKey:0,getModifierState:Sn}),hm=Wi(vm),Bm=D({},pa,{propertyName:0,elapsedTime:0,pseudoElement:0}),bm=Wi(Bm),Mm=D({},Ju,{deltaX:function(i){return"deltaX"in i?i.deltaX:"wheelDeltaX"in i?-i.wheelDeltaX:0},deltaY:function(i){return"deltaY"in i?i.deltaY:"wheelDeltaY"in i?-i.wheelDeltaY:"wheelDelta"in i?-i.wheelDelta:0},deltaZ:0,deltaMode:0}),pm=Wi(Mm),Vm=D({},pa,{newState:0,oldState:0}),ym=Wi(Vm),Tm=[9,13,27,32],Cn=_e&&"CompositionEvent"in window,_t=null;_e&&"documentMode"in document&&(_t=document.documentMode);var Dm=_e&&"TextEvent"in window&&!_t,Ko=_e&&(!Cn||_t&&8<_t&&11>=_t),Io=" ",wo=!1;function ko(i,e){switch(i){case"keyup":return Tm.indexOf(e.keyCode)!==-1;case"keydown":return e.keyCode!==229;case"keypress":case"mousedown":case"focusout":return!0;default:return!1}}function $o(i){return i=i.detail,typeof i=="object"&&"data"in i?i.data:null}var wa=!1;function zm(i,e){switch(i){case"compositionend":return $o(e);case"keypress":return e.which!==32?null:(wo=!0,Io);case"textInput":return i=e.data,i===Io&&wo?null:i;default:return null}}function Pm(i,e){if(wa)return i==="compositionend"||!Cn&&ko(i,e)?(i=Zo(),Eu=dn=$e=null,wa=!1,i):null;switch(i){case"paste":return null;case"keypress":if(!(e.ctrlKey||e.altKey||e.metaKey)||e.ctrlKey&&e.altKey){if(e.char&&1<e.char.length)return e.char;if(e.which)return String.fromCharCode(e.which)}return null;case"compositionend":return Ko&&e.locale!=="ko"?null:e.data;default:return null}}var Rm={color:!0,date:!0,datetime:!0,"datetime-local":!0,email:!0,month:!0,number:!0,password:!0,range:!0,search:!0,tel:!0,text:!0,time:!0,url:!0,week:!0};function Wo(i){var e=i&&i.nodeName&&i.nodeName.toLowerCase();return e==="input"?!!Rm[i.type]:e==="textarea"}function ic(i,e,a,t){Ka?Ia?Ia.push(t):Ia=[t]:Ka=t,e=zl(e,"onChange"),0<e.length&&(a=new xu("onChange","change",null,a,t),i.push({event:a,listeners:e}))}var Lt=null,Ht=null;function Gm(i){_d(i,0)}function Fu(i){var e=Rt(i);if(Lo(e))return i}function ec(i,e){if(i==="change")return e}var ac=!1;if(_e){var vn;if(_e){var hn="oninput"in document;if(!hn){var tc=document.createElement("div");tc.setAttribute("oninput","return;"),hn=typeof tc.oninput=="function"}vn=hn}else vn=!1;ac=vn&&(!document.documentMode||9<document.documentMode)}function uc(){Lt&&(Lt.detachEvent("onpropertychange",lc),Ht=Lt=null)}function lc(i){if(i.propertyName==="value"&&Fu(Ht)){var e=[];ic(e,Ht,i,on(i)),Fo(Gm,e)}}function Am(i,e,a){i==="focusin"?(uc(),Lt=e,Ht=a,Lt.attachEvent("onpropertychange",lc)):i==="focusout"&&uc()}function Om(i){if(i==="selectionchange"||i==="keyup"||i==="keydown")return Fu(Ht)}function Nm(i,e){if(i==="click")return Fu(e)}function _m(i,e){if(i==="input"||i==="change")return Fu(e)}function Lm(i,e){return i===e&&(i!==0||1/i===1/e)||i!==i&&e!==e}var ne=typeof Object.is=="function"?Object.is:Lm;function Et(i,e){if(ne(i,e))return!0;if(typeof i!="object"||i===null||typeof e!="object"||e===null)return!1;var a=Object.keys(i),t=Object.keys(e);if(a.length!==t.length)return!1;for(t=0;t<a.length;t++){var u=a[t];if(!Xl.call(e,u)||!ne(i[u],e[u]))return!1}return!0}function nc(i){for(;i&&i.firstChild;)i=i.firstChild;return i}function rc(i,e){var a=nc(i);i=0;for(var t;a;){if(a.nodeType===3){if(t=i+a.textContent.length,i<=e&&t>=e)return{node:a,offset:e-i};i=t}i:{for(;a;){if(a.nextSibling){a=a.nextSibling;break i}a=a.parentNode}a=void 0}a=nc(a)}}function oc(i,e){return i&&e?i===e?!0:i&&i.nodeType===3?!1:e&&e.nodeType===3?oc(i,e.parentNode):"contains"in i?i.contains(e):i.compareDocumentPosition?!!(i.compareDocumentPosition(e)&16):!1:!1}function cc(i){i=i!=null&&i.ownerDocument!=null&&i.ownerDocument.defaultView!=null?i.ownerDocument.defaultView:window;for(var e=Lu(i.document);e instanceof i.HTMLIFrameElement;){try{var a=typeof e.contentWindow.location.href=="string"}catch{a=!1}if(a)i=e.contentWindow;else break;e=Lu(i.document)}return e}function Bn(i){var e=i&&i.nodeName&&i.nodeName.toLowerCase();return e&&(e==="input"&&(i.type==="text"||i.type==="search"||i.type==="tel"||i.type==="url"||i.type==="password")||e==="textarea"||i.contentEditable==="true")}var Hm=_e&&"documentMode"in document&&11>=document.documentMode,ka=null,bn=null,Ut=null,Mn=!1;function sc(i,e,a){var t=a.window===a?a.document:a.nodeType===9?a:a.ownerDocument;Mn||ka==null||ka!==Lu(t)||(t=ka,"selectionStart"in t&&Bn(t)?t={start:t.selectionStart,end:t.selectionEnd}:(t=(t.ownerDocument&&t.ownerDocument.defaultView||window).getSelection(),t={anchorNode:t.anchorNode,anchorOffset:t.anchorOffset,focusNode:t.focusNode,focusOffset:t.focusOffset}),Ut&&Et(Ut,t)||(Ut=t,t=zl(bn,"onSelect"),0<t.length&&(e=new xu("onSelect","select",null,e,a),i.push({event:e,listeners:t}),e.target=ka)))}function Va(i,e){var a={};return a[i.toLowerCase()]=e.toLowerCase(),a["Webkit"+i]="webkit"+e,a["Moz"+i]="moz"+e,a}var $a={animationend:Va("Animation","AnimationEnd"),animationiteration:Va("Animation","AnimationIteration"),animationstart:Va("Animation","AnimationStart"),transitionrun:Va("Transition","TransitionRun"),transitionstart:Va("Transition","TransitionStart"),transitioncancel:Va("Transition","TransitionCancel"),transitionend:Va("Transition","TransitionEnd")},pn={},dc={};_e&&(dc=document.createElement("div").style,"AnimationEvent"in window||(delete $a.animationend.animation,delete $a.animationiteration.animation,delete $a.animationstart.animation),"TransitionEvent"in window||delete $a.transitionend.transition);function ya(i){if(pn[i])return pn[i];if(!$a[i])return i;var e=$a[i],a;for(a in e)if(e.hasOwnProperty(a)&&a in dc)return pn[i]=e[a];return i}var fc=ya("animationend"),mc=ya("animationiteration"),gc=ya("animationstart"),Em=ya("transitionrun"),Um=ya("transitionstart"),jm=ya("transitioncancel"),Sc=ya("transitionend"),Cc=new Map,Vn="abort auxClick beforeToggle cancel canPlay canPlayThrough click close contextMenu copy cut drag dragEnd dragEnter dragExit dragLeave dragOver dragStart drop durationChange emptied encrypted ended error gotPointerCapture input invalid keyDown keyPress keyUp load loadedData loadedMetadata loadStart lostPointerCapture mouseDown mouseMove mouseOut mouseOver mouseUp paste pause play playing pointerCancel pointerDown pointerMove pointerOut pointerOver pointerUp progress rateChange reset resize seeked seeking stalled submit suspend timeUpdate touchCancel touchEnd touchStart volumeChange scroll toggle touchMove waiting wheel".split(" ");Vn.push("scrollEnd");function Ve(i,e){Cc.set(i,e),Ma(e,[i])}var vc=new WeakMap;function Ce(i,e){if(typeof i=="object"&&i!==null){var a=vc.get(i);return a!==void 0?a:(e={value:i,source:e,stack:No(e)},vc.set(i,e),e)}return{value:i,source:e,stack:No(e)}}var ve=[],Wa=0,yn=0;function Zu(){for(var i=Wa,e=yn=Wa=0;e<i;){var a=ve[e];ve[e++]=null;var t=ve[e];ve[e++]=null;var u=ve[e];ve[e++]=null;var l=ve[e];if(ve[e++]=null,t!==null&&u!==null){var n=t.pending;n===null?u.next=u:(u.next=n.next,n.next=u),t.pending=u}l!==0&&hc(a,u,l)}}function qu(i,e,a,t){ve[Wa++]=i,ve[Wa++]=e,ve[Wa++]=a,ve[Wa++]=t,yn|=t,i.lanes|=t,i=i.alternate,i!==null&&(i.lanes|=t)}function Tn(i,e,a,t){return qu(i,e,a,t),Yu(i)}function it(i,e){return qu(i,null,null,e),Yu(i)}function hc(i,e,a){i.lanes|=a;var t=i.alternate;t!==null&&(t.lanes|=a);for(var u=!1,l=i.return;l!==null;)l.childLanes|=a,t=l.alternate,t!==null&&(t.childLanes|=a),l.tag===22&&(i=l.stateNode,i===null||i._visibility&1||(u=!0)),i=l,l=l.return;return i.tag===3?(l=i.stateNode,u&&e!==null&&(u=31-le(a),i=l.hiddenUpdates,t=i[u],t===null?i[u]=[e]:t.push(e),e.lane=a|536870912),l):null}function Yu(i){if(50<cu)throw cu=0,Ar=null,Error(s(185));for(var e=i.return;e!==null;)i=e,e=i.return;return i.tag===3?i.stateNode:null}var et={};function xm(i,e,a,t){this.tag=i,this.key=a,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.refCleanup=this.ref=null,this.pendingProps=e,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=t,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function re(i,e,a,t){return new xm(i,e,a,t)}function Dn(i){return i=i.prototype,!(!i||!i.isReactComponent)}function Le(i,e){var a=i.alternate;return a===null?(a=re(i.tag,e,i.key,i.mode),a.elementType=i.elementType,a.type=i.type,a.stateNode=i.stateNode,a.alternate=i,i.alternate=a):(a.pendingProps=e,a.type=i.type,a.flags=0,a.subtreeFlags=0,a.deletions=null),a.flags=i.flags&65011712,a.childLanes=i.childLanes,a.lanes=i.lanes,a.child=i.child,a.memoizedProps=i.memoizedProps,a.memoizedState=i.memoizedState,a.updateQueue=i.updateQueue,e=i.dependencies,a.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext},a.sibling=i.sibling,a.index=i.index,a.ref=i.ref,a.refCleanup=i.refCleanup,a}function Bc(i,e){i.flags&=65011714;var a=i.alternate;return a===null?(i.childLanes=0,i.lanes=e,i.child=null,i.subtreeFlags=0,i.memoizedProps=null,i.memoizedState=null,i.updateQueue=null,i.dependencies=null,i.stateNode=null):(i.childLanes=a.childLanes,i.lanes=a.lanes,i.child=a.child,i.subtreeFlags=0,i.deletions=null,i.memoizedProps=a.memoizedProps,i.memoizedState=a.memoizedState,i.updateQueue=a.updateQueue,i.type=a.type,e=a.dependencies,i.dependencies=e===null?null:{lanes:e.lanes,firstContext:e.firstContext}),i}function Xu(i,e,a,t,u,l){var n=0;if(t=i,typeof i=="function")Dn(i)&&(n=1);else if(typeof i=="string")n=Fg(i,a,X.current)?26:i==="html"||i==="head"||i==="body"?27:5;else i:switch(i){case Pi:return i=re(31,a,e,u),i.elementType=Pi,i.lanes=l,i;case ti:return Ta(a.children,u,l,e);case ii:n=8,u|=24;break;case Z:return i=re(12,a,e,u|2),i.elementType=Z,i.lanes=l,i;case O:return i=re(13,a,e,u),i.elementType=O,i.lanes=l,i;case Ci:return i=re(19,a,e,u),i.elementType=Ci,i.lanes=l,i;default:if(typeof i=="object"&&i!==null)switch(i.$$typeof){case j:case A:n=10;break i;case G:n=9;break i;case x:n=11;break i;case $:n=14;break i;case ai:n=16,t=null;break i}n=29,a=Error(s(130,i===null?"null":typeof i,"")),t=null}return e=re(n,a,e,u),e.elementType=i,e.type=t,e.lanes=l,e}function Ta(i,e,a,t){return i=re(7,i,t,e),i.lanes=a,i}function zn(i,e,a){return i=re(6,i,null,e),i.lanes=a,i}function Pn(i,e,a){return e=re(4,i.children!==null?i.children:[],i.key,e),e.lanes=a,e.stateNode={containerInfo:i.containerInfo,pendingChildren:null,implementation:i.implementation},e}var at=[],tt=0,Qu=null,Ku=0,he=[],Be=0,Da=null,He=1,Ee="";function za(i,e){at[tt++]=Ku,at[tt++]=Qu,Qu=i,Ku=e}function bc(i,e,a){he[Be++]=He,he[Be++]=Ee,he[Be++]=Da,Da=i;var t=He;i=Ee;var u=32-le(t)-1;t&=~(1<<u),a+=1;var l=32-le(e)+u;if(30<l){var n=u-u%5;l=(t&(1<<n)-1).toString(32),t>>=n,u-=n,He=1<<32-le(e)+u|a<<u|t,Ee=l+i}else He=1<<l|a<<u|t,Ee=i}function Rn(i){i.return!==null&&(za(i,1),bc(i,1,0))}function Gn(i){for(;i===Qu;)Qu=at[--tt],at[tt]=null,Ku=at[--tt],at[tt]=null;for(;i===Da;)Da=he[--Be],he[Be]=null,Ee=he[--Be],he[Be]=null,He=he[--Be],he[Be]=null}var wi=null,Ri=null,fi=!1,Pa=null,ze=!1,An=Error(s(519));function Ra(i){var e=Error(s(418,""));throw Jt(Ce(e,i)),An}function Mc(i){var e=i.stateNode,a=i.type,t=i.memoizedProps;switch(e[Xi]=i,e[$i]=t,a){case"dialog":ri("cancel",e),ri("close",e);break;case"iframe":case"object":case"embed":ri("load",e);break;case"video":case"audio":for(a=0;a<du.length;a++)ri(du[a],e);break;case"source":ri("error",e);break;case"img":case"image":case"link":ri("error",e),ri("load",e);break;case"details":ri("toggle",e);break;case"input":ri("invalid",e),Ho(e,t.value,t.defaultValue,t.checked,t.defaultChecked,t.type,t.name,!0),_u(e);break;case"select":ri("invalid",e);break;case"textarea":ri("invalid",e),Uo(e,t.value,t.defaultValue,t.children),_u(e)}a=t.children,typeof a!="string"&&typeof a!="number"&&typeof a!="bigint"||e.textContent===""+a||t.suppressHydrationWarning===!0||Ud(e.textContent,a)?(t.popover!=null&&(ri("beforetoggle",e),ri("toggle",e)),t.onScroll!=null&&ri("scroll",e),t.onScrollEnd!=null&&ri("scrollend",e),t.onClick!=null&&(e.onclick=Pl),e=!0):e=!1,e||Ra(i)}function pc(i){for(wi=i.return;wi;)switch(wi.tag){case 5:case 13:ze=!1;return;case 27:case 3:ze=!0;return;default:wi=wi.return}}function jt(i){if(i!==wi)return!1;if(!fi)return pc(i),fi=!0,!1;var e=i.tag,a;if((a=e!==3&&e!==27)&&((a=e===5)&&(a=i.type,a=!(a!=="form"&&a!=="button")||Qr(i.type,i.memoizedProps)),a=!a),a&&Ri&&Ra(i),pc(i),e===13){if(i=i.memoizedState,i=i!==null?i.dehydrated:null,!i)throw Error(s(317));i:{for(i=i.nextSibling,e=0;i;){if(i.nodeType===8)if(a=i.data,a==="/$"){if(e===0){Ri=Te(i.nextSibling);break i}e--}else a!=="$"&&a!=="$!"&&a!=="$?"||e++;i=i.nextSibling}Ri=null}}else e===27?(e=Ri,ga(i.type)?(i=kr,kr=null,Ri=i):Ri=e):Ri=wi?Te(i.stateNode.nextSibling):null;return!0}function xt(){Ri=wi=null,fi=!1}function Vc(){var i=Pa;return i!==null&&(ae===null?ae=i:ae.push.apply(ae,i),Pa=null),i}function Jt(i){Pa===null?Pa=[i]:Pa.push(i)}var On=T(null),Ga=null,Ue=null;function We(i,e,a){L(On,e._currentValue),e._currentValue=a}function je(i){i._currentValue=On.current,H(On)}function Nn(i,e,a){for(;i!==null;){var t=i.alternate;if((i.childLanes&e)!==e?(i.childLanes|=e,t!==null&&(t.childLanes|=e)):t!==null&&(t.childLanes&e)!==e&&(t.childLanes|=e),i===a)break;i=i.return}}function _n(i,e,a,t){var u=i.child;for(u!==null&&(u.return=i);u!==null;){var l=u.dependencies;if(l!==null){var n=u.child;l=l.firstContext;i:for(;l!==null;){var r=l;l=u;for(var c=0;c<e.length;c++)if(r.context===e[c]){l.lanes|=a,r=l.alternate,r!==null&&(r.lanes|=a),Nn(l.return,a,i),t||(n=null);break i}l=r.next}}else if(u.tag===18){if(n=u.return,n===null)throw Error(s(341));n.lanes|=a,l=n.alternate,l!==null&&(l.lanes|=a),Nn(n,a,i),n=null}else n=u.child;if(n!==null)n.return=u;else for(n=u;n!==null;){if(n===i){n=null;break}if(u=n.sibling,u!==null){u.return=n.return,n=u;break}n=n.return}u=n}}function Ft(i,e,a,t){i=null;for(var u=e,l=!1;u!==null;){if(!l){if((u.flags&524288)!==0)l=!0;else if((u.flags&262144)!==0)break}if(u.tag===10){var n=u.alternate;if(n===null)throw Error(s(387));if(n=n.memoizedProps,n!==null){var r=u.type;ne(u.pendingProps.value,n.value)||(i!==null?i.push(r):i=[r])}}else if(u===te.current){if(n=u.alternate,n===null)throw Error(s(387));n.memoizedState.memoizedState!==u.memoizedState.memoizedState&&(i!==null?i.push(vu):i=[vu])}u=u.return}i!==null&&_n(e,i,a,t),e.flags|=262144}function Iu(i){for(i=i.firstContext;i!==null;){if(!ne(i.context._currentValue,i.memoizedValue))return!0;i=i.next}return!1}function Aa(i){Ga=i,Ue=null,i=i.dependencies,i!==null&&(i.firstContext=null)}function Qi(i){return yc(Ga,i)}function wu(i,e){return Ga===null&&Aa(i),yc(i,e)}function yc(i,e){var a=e._currentValue;if(e={context:e,memoizedValue:a,next:null},Ue===null){if(i===null)throw Error(s(308));Ue=e,i.dependencies={lanes:0,firstContext:e},i.flags|=524288}else Ue=Ue.next=e;return a}var Jm=typeof AbortController<"u"?AbortController:function(){var i=[],e=this.signal={aborted:!1,addEventListener:function(a,t){i.push(t)}};this.abort=function(){e.aborted=!0,i.forEach(function(a){return a()})}},Fm=o.unstable_scheduleCallback,Zm=o.unstable_NormalPriority,Ei={$$typeof:A,Consumer:null,Provider:null,_currentValue:null,_currentValue2:null,_threadCount:0};function Ln(){return{controller:new Jm,data:new Map,refCount:0}}function Zt(i){i.refCount--,i.refCount===0&&Fm(Zm,function(){i.controller.abort()})}var qt=null,Hn=0,ut=0,lt=null;function qm(i,e){if(qt===null){var a=qt=[];Hn=0,ut=Ur(),lt={status:"pending",value:void 0,then:function(t){a.push(t)}}}return Hn++,e.then(Tc,Tc),e}function Tc(){if(--Hn===0&&qt!==null){lt!==null&&(lt.status="fulfilled");var i=qt;qt=null,ut=0,lt=null;for(var e=0;e<i.length;e++)(0,i[e])()}}function Ym(i,e){var a=[],t={status:"pending",value:null,reason:null,then:function(u){a.push(u)}};return i.then(function(){t.status="fulfilled",t.value=e;for(var u=0;u<a.length;u++)(0,a[u])(e)},function(u){for(t.status="rejected",t.reason=u,u=0;u<a.length;u++)(0,a[u])(void 0)}),t}var Dc=b.S;b.S=function(i,e){typeof e=="object"&&e!==null&&typeof e.then=="function"&&qm(i,e),Dc!==null&&Dc(i,e)};var Oa=T(null);function En(){var i=Oa.current;return i!==null?i:pi.pooledCache}function ku(i,e){e===null?L(Oa,Oa.current):L(Oa,e.pool)}function zc(){var i=En();return i===null?null:{parent:Ei._currentValue,pool:i}}var Yt=Error(s(460)),Pc=Error(s(474)),$u=Error(s(542)),Un={then:function(){}};function Rc(i){return i=i.status,i==="fulfilled"||i==="rejected"}function Wu(){}function Gc(i,e,a){switch(a=i[a],a===void 0?i.push(e):a!==e&&(e.then(Wu,Wu),e=a),e.status){case"fulfilled":return e.value;case"rejected":throw i=e.reason,Oc(i),i;default:if(typeof e.status=="string")e.then(Wu,Wu);else{if(i=pi,i!==null&&100<i.shellSuspendCounter)throw Error(s(482));i=e,i.status="pending",i.then(function(t){if(e.status==="pending"){var u=e;u.status="fulfilled",u.value=t}},function(t){if(e.status==="pending"){var u=e;u.status="rejected",u.reason=t}})}switch(e.status){case"fulfilled":return e.value;case"rejected":throw i=e.reason,Oc(i),i}throw Xt=e,Yt}}var Xt=null;function Ac(){if(Xt===null)throw Error(s(459));var i=Xt;return Xt=null,i}function Oc(i){if(i===Yt||i===$u)throw Error(s(483))}var ia=!1;function jn(i){i.updateQueue={baseState:i.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,lanes:0,hiddenCallbacks:null},callbacks:null}}function xn(i,e){i=i.updateQueue,e.updateQueue===i&&(e.updateQueue={baseState:i.baseState,firstBaseUpdate:i.firstBaseUpdate,lastBaseUpdate:i.lastBaseUpdate,shared:i.shared,callbacks:null})}function ea(i){return{lane:i,tag:0,payload:null,callback:null,next:null}}function aa(i,e,a){var t=i.updateQueue;if(t===null)return null;if(t=t.shared,(gi&2)!==0){var u=t.pending;return u===null?e.next=e:(e.next=u.next,u.next=e),t.pending=e,e=Yu(i),hc(i,null,a),e}return qu(i,t,e,a),Yu(i)}function Qt(i,e,a){if(e=e.updateQueue,e!==null&&(e=e.shared,(a&4194048)!==0)){var t=e.lanes;t&=i.pendingLanes,a|=t,e.lanes=a,To(i,a)}}function Jn(i,e){var a=i.updateQueue,t=i.alternate;if(t!==null&&(t=t.updateQueue,a===t)){var u=null,l=null;if(a=a.firstBaseUpdate,a!==null){do{var n={lane:a.lane,tag:a.tag,payload:a.payload,callback:null,next:null};l===null?u=l=n:l=l.next=n,a=a.next}while(a!==null);l===null?u=l=e:l=l.next=e}else u=l=e;a={baseState:t.baseState,firstBaseUpdate:u,lastBaseUpdate:l,shared:t.shared,callbacks:t.callbacks},i.updateQueue=a;return}i=a.lastBaseUpdate,i===null?a.firstBaseUpdate=e:i.next=e,a.lastBaseUpdate=e}var Fn=!1;function Kt(){if(Fn){var i=lt;if(i!==null)throw i}}function It(i,e,a,t){Fn=!1;var u=i.updateQueue;ia=!1;var l=u.firstBaseUpdate,n=u.lastBaseUpdate,r=u.shared.pending;if(r!==null){u.shared.pending=null;var c=r,S=c.next;c.next=null,n===null?l=S:n.next=S,n=c;var M=i.alternate;M!==null&&(M=M.updateQueue,r=M.lastBaseUpdate,r!==n&&(r===null?M.firstBaseUpdate=S:r.next=S,M.lastBaseUpdate=c))}if(l!==null){var y=u.baseState;n=0,M=S=c=null,r=l;do{var C=r.lane&-536870913,v=C!==r.lane;if(v?(oi&C)===C:(t&C)===C){C!==0&&C===ut&&(Fn=!0),M!==null&&(M=M.next={lane:0,tag:r.tag,payload:r.payload,callback:null,next:null});i:{var w=i,Q=r;C=e;var Bi=a;switch(Q.tag){case 1:if(w=Q.payload,typeof w=="function"){y=w.call(Bi,y,C);break i}y=w;break i;case 3:w.flags=w.flags&-65537|128;case 0:if(w=Q.payload,C=typeof w=="function"?w.call(Bi,y,C):w,C==null)break i;y=D({},y,C);break i;case 2:ia=!0}}C=r.callback,C!==null&&(i.flags|=64,v&&(i.flags|=8192),v=u.callbacks,v===null?u.callbacks=[C]:v.push(C))}else v={lane:C,tag:r.tag,payload:r.payload,callback:r.callback,next:null},M===null?(S=M=v,c=y):M=M.next=v,n|=C;if(r=r.next,r===null){if(r=u.shared.pending,r===null)break;v=r,r=v.next,v.next=null,u.lastBaseUpdate=v,u.shared.pending=null}}while(!0);M===null&&(c=y),u.baseState=c,u.firstBaseUpdate=S,u.lastBaseUpdate=M,l===null&&(u.shared.lanes=0),sa|=n,i.lanes=n,i.memoizedState=y}}function Nc(i,e){if(typeof i!="function")throw Error(s(191,i));i.call(e)}function _c(i,e){var a=i.callbacks;if(a!==null)for(i.callbacks=null,i=0;i<a.length;i++)Nc(a[i],e)}var nt=T(null),il=T(0);function Lc(i,e){i=Xe,L(il,i),L(nt,e),Xe=i|e.baseLanes}function Zn(){L(il,Xe),L(nt,nt.current)}function qn(){Xe=il.current,H(nt),H(il)}var ta=0,ui=null,vi=null,Ni=null,el=!1,rt=!1,Na=!1,al=0,wt=0,ot=null,Xm=0;function Ai(){throw Error(s(321))}function Yn(i,e){if(e===null)return!1;for(var a=0;a<e.length&&a<i.length;a++)if(!ne(i[a],e[a]))return!1;return!0}function Xn(i,e,a,t,u,l){return ta=l,ui=e,e.memoizedState=null,e.updateQueue=null,e.lanes=0,b.H=i===null||i.memoizedState===null?hs:Bs,Na=!1,l=a(t,u),Na=!1,rt&&(l=Ec(e,a,t,u)),Hc(i),l}function Hc(i){b.H=ol;var e=vi!==null&&vi.next!==null;if(ta=0,Ni=vi=ui=null,el=!1,wt=0,ot=null,e)throw Error(s(300));i===null||xi||(i=i.dependencies,i!==null&&Iu(i)&&(xi=!0))}function Ec(i,e,a,t){ui=i;var u=0;do{if(rt&&(ot=null),wt=0,rt=!1,25<=u)throw Error(s(301));if(u+=1,Ni=vi=null,i.updateQueue!=null){var l=i.updateQueue;l.lastEffect=null,l.events=null,l.stores=null,l.memoCache!=null&&(l.memoCache.index=0)}b.H=Wm,l=e(a,t)}while(rt);return l}function Qm(){var i=b.H,e=i.useState()[0];return e=typeof e.then=="function"?kt(e):e,i=i.useState()[0],(vi!==null?vi.memoizedState:null)!==i&&(ui.flags|=1024),e}function Qn(){var i=al!==0;return al=0,i}function Kn(i,e,a){e.updateQueue=i.updateQueue,e.flags&=-2053,i.lanes&=~a}function In(i){if(el){for(i=i.memoizedState;i!==null;){var e=i.queue;e!==null&&(e.pending=null),i=i.next}el=!1}ta=0,Ni=vi=ui=null,rt=!1,wt=al=0,ot=null}function ie(){var i={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return Ni===null?ui.memoizedState=Ni=i:Ni=Ni.next=i,Ni}function _i(){if(vi===null){var i=ui.alternate;i=i!==null?i.memoizedState:null}else i=vi.next;var e=Ni===null?ui.memoizedState:Ni.next;if(e!==null)Ni=e,vi=i;else{if(i===null)throw ui.alternate===null?Error(s(467)):Error(s(310));vi=i,i={memoizedState:vi.memoizedState,baseState:vi.baseState,baseQueue:vi.baseQueue,queue:vi.queue,next:null},Ni===null?ui.memoizedState=Ni=i:Ni=Ni.next=i}return Ni}function wn(){return{lastEffect:null,events:null,stores:null,memoCache:null}}function kt(i){var e=wt;return wt+=1,ot===null&&(ot=[]),i=Gc(ot,i,e),e=ui,(Ni===null?e.memoizedState:Ni.next)===null&&(e=e.alternate,b.H=e===null||e.memoizedState===null?hs:Bs),i}function tl(i){if(i!==null&&typeof i=="object"){if(typeof i.then=="function")return kt(i);if(i.$$typeof===A)return Qi(i)}throw Error(s(438,String(i)))}function kn(i){var e=null,a=ui.updateQueue;if(a!==null&&(e=a.memoCache),e==null){var t=ui.alternate;t!==null&&(t=t.updateQueue,t!==null&&(t=t.memoCache,t!=null&&(e={data:t.data.map(function(u){return u.slice()}),index:0})))}if(e==null&&(e={data:[],index:0}),a===null&&(a=wn(),ui.updateQueue=a),a.memoCache=e,a=e.data[e.index],a===void 0)for(a=e.data[e.index]=Array(i),t=0;t<i;t++)a[t]=Ii;return e.index++,a}function xe(i,e){return typeof e=="function"?e(i):e}function ul(i){var e=_i();return $n(e,vi,i)}function $n(i,e,a){var t=i.queue;if(t===null)throw Error(s(311));t.lastRenderedReducer=a;var u=i.baseQueue,l=t.pending;if(l!==null){if(u!==null){var n=u.next;u.next=l.next,l.next=n}e.baseQueue=u=l,t.pending=null}if(l=i.baseState,u===null)i.memoizedState=l;else{e=u.next;var r=n=null,c=null,S=e,M=!1;do{var y=S.lane&-536870913;if(y!==S.lane?(oi&y)===y:(ta&y)===y){var C=S.revertLane;if(C===0)c!==null&&(c=c.next={lane:0,revertLane:0,action:S.action,hasEagerState:S.hasEagerState,eagerState:S.eagerState,next:null}),y===ut&&(M=!0);else if((ta&C)===C){S=S.next,C===ut&&(M=!0);continue}else y={lane:0,revertLane:S.revertLane,action:S.action,hasEagerState:S.hasEagerState,eagerState:S.eagerState,next:null},c===null?(r=c=y,n=l):c=c.next=y,ui.lanes|=C,sa|=C;y=S.action,Na&&a(l,y),l=S.hasEagerState?S.eagerState:a(l,y)}else C={lane:y,revertLane:S.revertLane,action:S.action,hasEagerState:S.hasEagerState,eagerState:S.eagerState,next:null},c===null?(r=c=C,n=l):c=c.next=C,ui.lanes|=y,sa|=y;S=S.next}while(S!==null&&S!==e);if(c===null?n=l:c.next=r,!ne(l,i.memoizedState)&&(xi=!0,M&&(a=lt,a!==null)))throw a;i.memoizedState=l,i.baseState=n,i.baseQueue=c,t.lastRenderedState=l}return u===null&&(t.lanes=0),[i.memoizedState,t.dispatch]}function Wn(i){var e=_i(),a=e.queue;if(a===null)throw Error(s(311));a.lastRenderedReducer=i;var t=a.dispatch,u=a.pending,l=e.memoizedState;if(u!==null){a.pending=null;var n=u=u.next;do l=i(l,n.action),n=n.next;while(n!==u);ne(l,e.memoizedState)||(xi=!0),e.memoizedState=l,e.baseQueue===null&&(e.baseState=l),a.lastRenderedState=l}return[l,t]}function Uc(i,e,a){var t=ui,u=_i(),l=fi;if(l){if(a===void 0)throw Error(s(407));a=a()}else a=e();var n=!ne((vi||u).memoizedState,a);n&&(u.memoizedState=a,xi=!0),u=u.queue;var r=Jc.bind(null,t,u,i);if($t(2048,8,r,[i]),u.getSnapshot!==e||n||Ni!==null&&Ni.memoizedState.tag&1){if(t.flags|=2048,ct(9,ll(),xc.bind(null,t,u,a,e),null),pi===null)throw Error(s(349));l||(ta&124)!==0||jc(t,e,a)}return a}function jc(i,e,a){i.flags|=16384,i={getSnapshot:e,value:a},e=ui.updateQueue,e===null?(e=wn(),ui.updateQueue=e,e.stores=[i]):(a=e.stores,a===null?e.stores=[i]:a.push(i))}function xc(i,e,a,t){e.value=a,e.getSnapshot=t,Fc(e)&&Zc(i)}function Jc(i,e,a){return a(function(){Fc(e)&&Zc(i)})}function Fc(i){var e=i.getSnapshot;i=i.value;try{var a=e();return!ne(i,a)}catch{return!0}}function Zc(i){var e=it(i,2);e!==null&&fe(e,i,2)}function ir(i){var e=ie();if(typeof i=="function"){var a=i;if(i=a(),Na){we(!0);try{a()}finally{we(!1)}}}return e.memoizedState=e.baseState=i,e.queue={pending:null,lanes:0,dispatch:null,lastRenderedReducer:xe,lastRenderedState:i},e}function qc(i,e,a,t){return i.baseState=a,$n(i,vi,typeof t=="function"?t:xe)}function Km(i,e,a,t,u){if(rl(i))throw Error(s(485));if(i=e.action,i!==null){var l={payload:u,action:i,next:null,isTransition:!0,status:"pending",value:null,reason:null,listeners:[],then:function(n){l.listeners.push(n)}};b.T!==null?a(!0):l.isTransition=!1,t(l),a=e.pending,a===null?(l.next=e.pending=l,Yc(e,l)):(l.next=a.next,e.pending=a.next=l)}}function Yc(i,e){var a=e.action,t=e.payload,u=i.state;if(e.isTransition){var l=b.T,n={};b.T=n;try{var r=a(u,t),c=b.S;c!==null&&c(n,r),Xc(i,e,r)}catch(S){er(i,e,S)}finally{b.T=l}}else try{l=a(u,t),Xc(i,e,l)}catch(S){er(i,e,S)}}function Xc(i,e,a){a!==null&&typeof a=="object"&&typeof a.then=="function"?a.then(function(t){Qc(i,e,t)},function(t){return er(i,e,t)}):Qc(i,e,a)}function Qc(i,e,a){e.status="fulfilled",e.value=a,Kc(e),i.state=a,e=i.pending,e!==null&&(a=e.next,a===e?i.pending=null:(a=a.next,e.next=a,Yc(i,a)))}function er(i,e,a){var t=i.pending;if(i.pending=null,t!==null){t=t.next;do e.status="rejected",e.reason=a,Kc(e),e=e.next;while(e!==t)}i.action=null}function Kc(i){i=i.listeners;for(var e=0;e<i.length;e++)(0,i[e])()}function Ic(i,e){return e}function wc(i,e){if(fi){var a=pi.formState;if(a!==null){i:{var t=ui;if(fi){if(Ri){e:{for(var u=Ri,l=ze;u.nodeType!==8;){if(!l){u=null;break e}if(u=Te(u.nextSibling),u===null){u=null;break e}}l=u.data,u=l==="F!"||l==="F"?u:null}if(u){Ri=Te(u.nextSibling),t=u.data==="F!";break i}}Ra(t)}t=!1}t&&(e=a[0])}}return a=ie(),a.memoizedState=a.baseState=e,t={pending:null,lanes:0,dispatch:null,lastRenderedReducer:Ic,lastRenderedState:e},a.queue=t,a=Ss.bind(null,ui,t),t.dispatch=a,t=ir(!1),l=nr.bind(null,ui,!1,t.queue),t=ie(),u={state:e,dispatch:null,action:i,pending:null},t.queue=u,a=Km.bind(null,ui,u,l,a),u.dispatch=a,t.memoizedState=i,[e,a,!1]}function kc(i){var e=_i();return $c(e,vi,i)}function $c(i,e,a){if(e=$n(i,e,Ic)[0],i=ul(xe)[0],typeof e=="object"&&e!==null&&typeof e.then=="function")try{var t=kt(e)}catch(n){throw n===Yt?$u:n}else t=e;e=_i();var u=e.queue,l=u.dispatch;return a!==e.memoizedState&&(ui.flags|=2048,ct(9,ll(),Im.bind(null,u,a),null)),[t,l,i]}function Im(i,e){i.action=e}function Wc(i){var e=_i(),a=vi;if(a!==null)return $c(e,a,i);_i(),e=e.memoizedState,a=_i();var t=a.queue.dispatch;return a.memoizedState=i,[e,t,!1]}function ct(i,e,a,t){return i={tag:i,create:a,deps:t,inst:e,next:null},e=ui.updateQueue,e===null&&(e=wn(),ui.updateQueue=e),a=e.lastEffect,a===null?e.lastEffect=i.next=i:(t=a.next,a.next=i,i.next=t,e.lastEffect=i),i}function ll(){return{destroy:void 0,resource:void 0}}function is(){return _i().memoizedState}function nl(i,e,a,t){var u=ie();t=t===void 0?null:t,ui.flags|=i,u.memoizedState=ct(1|e,ll(),a,t)}function $t(i,e,a,t){var u=_i();t=t===void 0?null:t;var l=u.memoizedState.inst;vi!==null&&t!==null&&Yn(t,vi.memoizedState.deps)?u.memoizedState=ct(e,l,a,t):(ui.flags|=i,u.memoizedState=ct(1|e,l,a,t))}function es(i,e){nl(8390656,8,i,e)}function as(i,e){$t(2048,8,i,e)}function ts(i,e){return $t(4,2,i,e)}function us(i,e){return $t(4,4,i,e)}function ls(i,e){if(typeof e=="function"){i=i();var a=e(i);return function(){typeof a=="function"?a():e(null)}}if(e!=null)return i=i(),e.current=i,function(){e.current=null}}function ns(i,e,a){a=a!=null?a.concat([i]):null,$t(4,4,ls.bind(null,e,i),a)}function ar(){}function rs(i,e){var a=_i();e=e===void 0?null:e;var t=a.memoizedState;return e!==null&&Yn(e,t[1])?t[0]:(a.memoizedState=[i,e],i)}function os(i,e){var a=_i();e=e===void 0?null:e;var t=a.memoizedState;if(e!==null&&Yn(e,t[1]))return t[0];if(t=i(),Na){we(!0);try{i()}finally{we(!1)}}return a.memoizedState=[t,e],t}function tr(i,e,a){return a===void 0||(ta&1073741824)!==0?i.memoizedState=e:(i.memoizedState=a,i=dd(),ui.lanes|=i,sa|=i,a)}function cs(i,e,a,t){return ne(a,e)?a:nt.current!==null?(i=tr(i,a,t),ne(i,e)||(xi=!0),i):(ta&42)===0?(xi=!0,i.memoizedState=a):(i=dd(),ui.lanes|=i,sa|=i,e)}function ss(i,e,a,t,u){var l=_.p;_.p=l!==0&&8>l?l:8;var n=b.T,r={};b.T=r,nr(i,!1,e,a);try{var c=u(),S=b.S;if(S!==null&&S(r,c),c!==null&&typeof c=="object"&&typeof c.then=="function"){var M=Ym(c,t);Wt(i,e,M,de(i))}else Wt(i,e,t,de(i))}catch(y){Wt(i,e,{then:function(){},status:"rejected",reason:y},de())}finally{_.p=l,b.T=n}}function wm(){}function ur(i,e,a,t){if(i.tag!==5)throw Error(s(476));var u=ds(i).queue;ss(i,u,e,q,a===null?wm:function(){return fs(i),a(t)})}function ds(i){var e=i.memoizedState;if(e!==null)return e;e={memoizedState:q,baseState:q,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:xe,lastRenderedState:q},next:null};var a={};return e.next={memoizedState:a,baseState:a,baseQueue:null,queue:{pending:null,lanes:0,dispatch:null,lastRenderedReducer:xe,lastRenderedState:a},next:null},i.memoizedState=e,i=i.alternate,i!==null&&(i.memoizedState=e),e}function fs(i){var e=ds(i).next.queue;Wt(i,e,{},de())}function lr(){return Qi(vu)}function ms(){return _i().memoizedState}function gs(){return _i().memoizedState}function km(i){for(var e=i.return;e!==null;){switch(e.tag){case 24:case 3:var a=de();i=ea(a);var t=aa(e,i,a);t!==null&&(fe(t,e,a),Qt(t,e,a)),e={cache:Ln()},i.payload=e;return}e=e.return}}function $m(i,e,a){var t=de();a={lane:t,revertLane:0,action:a,hasEagerState:!1,eagerState:null,next:null},rl(i)?Cs(e,a):(a=Tn(i,e,a,t),a!==null&&(fe(a,i,t),vs(a,e,t)))}function Ss(i,e,a){var t=de();Wt(i,e,a,t)}function Wt(i,e,a,t){var u={lane:t,revertLane:0,action:a,hasEagerState:!1,eagerState:null,next:null};if(rl(i))Cs(e,u);else{var l=i.alternate;if(i.lanes===0&&(l===null||l.lanes===0)&&(l=e.lastRenderedReducer,l!==null))try{var n=e.lastRenderedState,r=l(n,a);if(u.hasEagerState=!0,u.eagerState=r,ne(r,n))return qu(i,e,u,0),pi===null&&Zu(),!1}catch{}finally{}if(a=Tn(i,e,u,t),a!==null)return fe(a,i,t),vs(a,e,t),!0}return!1}function nr(i,e,a,t){if(t={lane:2,revertLane:Ur(),action:t,hasEagerState:!1,eagerState:null,next:null},rl(i)){if(e)throw Error(s(479))}else e=Tn(i,a,t,2),e!==null&&fe(e,i,2)}function rl(i){var e=i.alternate;return i===ui||e!==null&&e===ui}function Cs(i,e){rt=el=!0;var a=i.pending;a===null?e.next=e:(e.next=a.next,a.next=e),i.pending=e}function vs(i,e,a){if((a&4194048)!==0){var t=e.lanes;t&=i.pendingLanes,a|=t,e.lanes=a,To(i,a)}}var ol={readContext:Qi,use:tl,useCallback:Ai,useContext:Ai,useEffect:Ai,useImperativeHandle:Ai,useLayoutEffect:Ai,useInsertionEffect:Ai,useMemo:Ai,useReducer:Ai,useRef:Ai,useState:Ai,useDebugValue:Ai,useDeferredValue:Ai,useTransition:Ai,useSyncExternalStore:Ai,useId:Ai,useHostTransitionStatus:Ai,useFormState:Ai,useActionState:Ai,useOptimistic:Ai,useMemoCache:Ai,useCacheRefresh:Ai},hs={readContext:Qi,use:tl,useCallback:function(i,e){return ie().memoizedState=[i,e===void 0?null:e],i},useContext:Qi,useEffect:es,useImperativeHandle:function(i,e,a){a=a!=null?a.concat([i]):null,nl(4194308,4,ls.bind(null,e,i),a)},useLayoutEffect:function(i,e){return nl(4194308,4,i,e)},useInsertionEffect:function(i,e){nl(4,2,i,e)},useMemo:function(i,e){var a=ie();e=e===void 0?null:e;var t=i();if(Na){we(!0);try{i()}finally{we(!1)}}return a.memoizedState=[t,e],t},useReducer:function(i,e,a){var t=ie();if(a!==void 0){var u=a(e);if(Na){we(!0);try{a(e)}finally{we(!1)}}}else u=e;return t.memoizedState=t.baseState=u,i={pending:null,lanes:0,dispatch:null,lastRenderedReducer:i,lastRenderedState:u},t.queue=i,i=i.dispatch=$m.bind(null,ui,i),[t.memoizedState,i]},useRef:function(i){var e=ie();return i={current:i},e.memoizedState=i},useState:function(i){i=ir(i);var e=i.queue,a=Ss.bind(null,ui,e);return e.dispatch=a,[i.memoizedState,a]},useDebugValue:ar,useDeferredValue:function(i,e){var a=ie();return tr(a,i,e)},useTransition:function(){var i=ir(!1);return i=ss.bind(null,ui,i.queue,!0,!1),ie().memoizedState=i,[!1,i]},useSyncExternalStore:function(i,e,a){var t=ui,u=ie();if(fi){if(a===void 0)throw Error(s(407));a=a()}else{if(a=e(),pi===null)throw Error(s(349));(oi&124)!==0||jc(t,e,a)}u.memoizedState=a;var l={value:a,getSnapshot:e};return u.queue=l,es(Jc.bind(null,t,l,i),[i]),t.flags|=2048,ct(9,ll(),xc.bind(null,t,l,a,e),null),a},useId:function(){var i=ie(),e=pi.identifierPrefix;if(fi){var a=Ee,t=He;a=(t&~(1<<32-le(t)-1)).toString(32)+a,e="«"+e+"R"+a,a=al++,0<a&&(e+="H"+a.toString(32)),e+="»"}else a=Xm++,e="«"+e+"r"+a.toString(32)+"»";return i.memoizedState=e},useHostTransitionStatus:lr,useFormState:wc,useActionState:wc,useOptimistic:function(i){var e=ie();e.memoizedState=e.baseState=i;var a={pending:null,lanes:0,dispatch:null,lastRenderedReducer:null,lastRenderedState:null};return e.queue=a,e=nr.bind(null,ui,!0,a),a.dispatch=e,[i,e]},useMemoCache:kn,useCacheRefresh:function(){return ie().memoizedState=km.bind(null,ui)}},Bs={readContext:Qi,use:tl,useCallback:rs,useContext:Qi,useEffect:as,useImperativeHandle:ns,useInsertionEffect:ts,useLayoutEffect:us,useMemo:os,useReducer:ul,useRef:is,useState:function(){return ul(xe)},useDebugValue:ar,useDeferredValue:function(i,e){var a=_i();return cs(a,vi.memoizedState,i,e)},useTransition:function(){var i=ul(xe)[0],e=_i().memoizedState;return[typeof i=="boolean"?i:kt(i),e]},useSyncExternalStore:Uc,useId:ms,useHostTransitionStatus:lr,useFormState:kc,useActionState:kc,useOptimistic:function(i,e){var a=_i();return qc(a,vi,i,e)},useMemoCache:kn,useCacheRefresh:gs},Wm={readContext:Qi,use:tl,useCallback:rs,useContext:Qi,useEffect:as,useImperativeHandle:ns,useInsertionEffect:ts,useLayoutEffect:us,useMemo:os,useReducer:Wn,useRef:is,useState:function(){return Wn(xe)},useDebugValue:ar,useDeferredValue:function(i,e){var a=_i();return vi===null?tr(a,i,e):cs(a,vi.memoizedState,i,e)},useTransition:function(){var i=Wn(xe)[0],e=_i().memoizedState;return[typeof i=="boolean"?i:kt(i),e]},useSyncExternalStore:Uc,useId:ms,useHostTransitionStatus:lr,useFormState:Wc,useActionState:Wc,useOptimistic:function(i,e){var a=_i();return vi!==null?qc(a,vi,i,e):(a.baseState=i,[i,a.queue.dispatch])},useMemoCache:kn,useCacheRefresh:gs},st=null,iu=0;function cl(i){var e=iu;return iu+=1,st===null&&(st=[]),Gc(st,i,e)}function eu(i,e){e=e.props.ref,i.ref=e!==void 0?e:null}function sl(i,e){throw e.$$typeof===Y?Error(s(525)):(i=Object.prototype.toString.call(e),Error(s(31,i==="[object Object]"?"object with keys {"+Object.keys(e).join(", ")+"}":i)))}function bs(i){var e=i._init;return e(i._payload)}function Ms(i){function e(m,f){if(i){var g=m.deletions;g===null?(m.deletions=[f],m.flags|=16):g.push(f)}}function a(m,f){if(!i)return null;for(;f!==null;)e(m,f),f=f.sibling;return null}function t(m){for(var f=new Map;m!==null;)m.key!==null?f.set(m.key,m):f.set(m.index,m),m=m.sibling;return f}function u(m,f){return m=Le(m,f),m.index=0,m.sibling=null,m}function l(m,f,g){return m.index=g,i?(g=m.alternate,g!==null?(g=g.index,g<f?(m.flags|=67108866,f):g):(m.flags|=67108866,f)):(m.flags|=1048576,f)}function n(m){return i&&m.alternate===null&&(m.flags|=67108866),m}function r(m,f,g,p){return f===null||f.tag!==6?(f=zn(g,m.mode,p),f.return=m,f):(f=u(f,g),f.return=m,f)}function c(m,f,g,p){var U=g.type;return U===ti?M(m,f,g.props.children,p,g.key):f!==null&&(f.elementType===U||typeof U=="object"&&U!==null&&U.$$typeof===ai&&bs(U)===f.type)?(f=u(f,g.props),eu(f,g),f.return=m,f):(f=Xu(g.type,g.key,g.props,null,m.mode,p),eu(f,g),f.return=m,f)}function S(m,f,g,p){return f===null||f.tag!==4||f.stateNode.containerInfo!==g.containerInfo||f.stateNode.implementation!==g.implementation?(f=Pn(g,m.mode,p),f.return=m,f):(f=u(f,g.children||[]),f.return=m,f)}function M(m,f,g,p,U){return f===null||f.tag!==7?(f=Ta(g,m.mode,p,U),f.return=m,f):(f=u(f,g),f.return=m,f)}function y(m,f,g){if(typeof f=="string"&&f!==""||typeof f=="number"||typeof f=="bigint")return f=zn(""+f,m.mode,g),f.return=m,f;if(typeof f=="object"&&f!==null){switch(f.$$typeof){case J:return g=Xu(f.type,f.key,f.props,null,m.mode,g),eu(g,f),g.return=m,g;case k:return f=Pn(f,m.mode,g),f.return=m,f;case ai:var p=f._init;return f=p(f._payload),y(m,f,g)}if(Hi(f)||yi(f))return f=Ta(f,m.mode,g,null),f.return=m,f;if(typeof f.then=="function")return y(m,cl(f),g);if(f.$$typeof===A)return y(m,wu(m,f),g);sl(m,f)}return null}function C(m,f,g,p){var U=f!==null?f.key:null;if(typeof g=="string"&&g!==""||typeof g=="number"||typeof g=="bigint")return U!==null?null:r(m,f,""+g,p);if(typeof g=="object"&&g!==null){switch(g.$$typeof){case J:return g.key===U?c(m,f,g,p):null;case k:return g.key===U?S(m,f,g,p):null;case ai:return U=g._init,g=U(g._payload),C(m,f,g,p)}if(Hi(g)||yi(g))return U!==null?null:M(m,f,g,p,null);if(typeof g.then=="function")return C(m,f,cl(g),p);if(g.$$typeof===A)return C(m,f,wu(m,g),p);sl(m,g)}return null}function v(m,f,g,p,U){if(typeof p=="string"&&p!==""||typeof p=="number"||typeof p=="bigint")return m=m.get(g)||null,r(f,m,""+p,U);if(typeof p=="object"&&p!==null){switch(p.$$typeof){case J:return m=m.get(p.key===null?g:p.key)||null,c(f,m,p,U);case k:return m=m.get(p.key===null?g:p.key)||null,S(f,m,p,U);case ai:var li=p._init;return p=li(p._payload),v(m,f,g,p,U)}if(Hi(p)||yi(p))return m=m.get(g)||null,M(f,m,p,U,null);if(typeof p.then=="function")return v(m,f,g,cl(p),U);if(p.$$typeof===A)return v(m,f,g,wu(f,p),U);sl(f,p)}return null}function w(m,f,g,p){for(var U=null,li=null,F=f,I=f=0,Fi=null;F!==null&&I<g.length;I++){F.index>I?(Fi=F,F=null):Fi=F.sibling;var di=C(m,F,g[I],p);if(di===null){F===null&&(F=Fi);break}i&&F&&di.alternate===null&&e(m,F),f=l(di,f,I),li===null?U=di:li.sibling=di,li=di,F=Fi}if(I===g.length)return a(m,F),fi&&za(m,I),U;if(F===null){for(;I<g.length;I++)F=y(m,g[I],p),F!==null&&(f=l(F,f,I),li===null?U=F:li.sibling=F,li=F);return fi&&za(m,I),U}for(F=t(F);I<g.length;I++)Fi=v(F,m,I,g[I],p),Fi!==null&&(i&&Fi.alternate!==null&&F.delete(Fi.key===null?I:Fi.key),f=l(Fi,f,I),li===null?U=Fi:li.sibling=Fi,li=Fi);return i&&F.forEach(function(Ba){return e(m,Ba)}),fi&&za(m,I),U}function Q(m,f,g,p){if(g==null)throw Error(s(151));for(var U=null,li=null,F=f,I=f=0,Fi=null,di=g.next();F!==null&&!di.done;I++,di=g.next()){F.index>I?(Fi=F,F=null):Fi=F.sibling;var Ba=C(m,F,di.value,p);if(Ba===null){F===null&&(F=Fi);break}i&&F&&Ba.alternate===null&&e(m,F),f=l(Ba,f,I),li===null?U=Ba:li.sibling=Ba,li=Ba,F=Fi}if(di.done)return a(m,F),fi&&za(m,I),U;if(F===null){for(;!di.done;I++,di=g.next())di=y(m,di.value,p),di!==null&&(f=l(di,f,I),li===null?U=di:li.sibling=di,li=di);return fi&&za(m,I),U}for(F=t(F);!di.done;I++,di=g.next())di=v(F,m,I,di.value,p),di!==null&&(i&&di.alternate!==null&&F.delete(di.key===null?I:di.key),f=l(di,f,I),li===null?U=di:li.sibling=di,li=di);return i&&F.forEach(function(iS){return e(m,iS)}),fi&&za(m,I),U}function Bi(m,f,g,p){if(typeof g=="object"&&g!==null&&g.type===ti&&g.key===null&&(g=g.props.children),typeof g=="object"&&g!==null){switch(g.$$typeof){case J:i:{for(var U=g.key;f!==null;){if(f.key===U){if(U=g.type,U===ti){if(f.tag===7){a(m,f.sibling),p=u(f,g.props.children),p.return=m,m=p;break i}}else if(f.elementType===U||typeof U=="object"&&U!==null&&U.$$typeof===ai&&bs(U)===f.type){a(m,f.sibling),p=u(f,g.props),eu(p,g),p.return=m,m=p;break i}a(m,f);break}else e(m,f);f=f.sibling}g.type===ti?(p=Ta(g.props.children,m.mode,p,g.key),p.return=m,m=p):(p=Xu(g.type,g.key,g.props,null,m.mode,p),eu(p,g),p.return=m,m=p)}return n(m);case k:i:{for(U=g.key;f!==null;){if(f.key===U)if(f.tag===4&&f.stateNode.containerInfo===g.containerInfo&&f.stateNode.implementation===g.implementation){a(m,f.sibling),p=u(f,g.children||[]),p.return=m,m=p;break i}else{a(m,f);break}else e(m,f);f=f.sibling}p=Pn(g,m.mode,p),p.return=m,m=p}return n(m);case ai:return U=g._init,g=U(g._payload),Bi(m,f,g,p)}if(Hi(g))return w(m,f,g,p);if(yi(g)){if(U=yi(g),typeof U!="function")throw Error(s(150));return g=U.call(g),Q(m,f,g,p)}if(typeof g.then=="function")return Bi(m,f,cl(g),p);if(g.$$typeof===A)return Bi(m,f,wu(m,g),p);sl(m,g)}return typeof g=="string"&&g!==""||typeof g=="number"||typeof g=="bigint"?(g=""+g,f!==null&&f.tag===6?(a(m,f.sibling),p=u(f,g),p.return=m,m=p):(a(m,f),p=zn(g,m.mode,p),p.return=m,m=p),n(m)):a(m,f)}return function(m,f,g,p){try{iu=0;var U=Bi(m,f,g,p);return st=null,U}catch(F){if(F===Yt||F===$u)throw F;var li=re(29,F,null,m.mode);return li.lanes=p,li.return=m,li}finally{}}}var dt=Ms(!0),ps=Ms(!1),be=T(null),Pe=null;function ua(i){var e=i.alternate;L(Ui,Ui.current&1),L(be,i),Pe===null&&(e===null||nt.current!==null||e.memoizedState!==null)&&(Pe=i)}function Vs(i){if(i.tag===22){if(L(Ui,Ui.current),L(be,i),Pe===null){var e=i.alternate;e!==null&&e.memoizedState!==null&&(Pe=i)}}else la()}function la(){L(Ui,Ui.current),L(be,be.current)}function Je(i){H(be),Pe===i&&(Pe=null),H(Ui)}var Ui=T(0);function dl(i){for(var e=i;e!==null;){if(e.tag===13){var a=e.memoizedState;if(a!==null&&(a=a.dehydrated,a===null||a.data==="$?"||wr(a)))return e}else if(e.tag===19&&e.memoizedProps.revealOrder!==void 0){if((e.flags&128)!==0)return e}else if(e.child!==null){e.child.return=e,e=e.child;continue}if(e===i)break;for(;e.sibling===null;){if(e.return===null||e.return===i)return null;e=e.return}e.sibling.return=e.return,e=e.sibling}return null}function rr(i,e,a,t){e=i.memoizedState,a=a(t,e),a=a==null?e:D({},e,a),i.memoizedState=a,i.lanes===0&&(i.updateQueue.baseState=a)}var or={enqueueSetState:function(i,e,a){i=i._reactInternals;var t=de(),u=ea(t);u.payload=e,a!=null&&(u.callback=a),e=aa(i,u,t),e!==null&&(fe(e,i,t),Qt(e,i,t))},enqueueReplaceState:function(i,e,a){i=i._reactInternals;var t=de(),u=ea(t);u.tag=1,u.payload=e,a!=null&&(u.callback=a),e=aa(i,u,t),e!==null&&(fe(e,i,t),Qt(e,i,t))},enqueueForceUpdate:function(i,e){i=i._reactInternals;var a=de(),t=ea(a);t.tag=2,e!=null&&(t.callback=e),e=aa(i,t,a),e!==null&&(fe(e,i,a),Qt(e,i,a))}};function ys(i,e,a,t,u,l,n){return i=i.stateNode,typeof i.shouldComponentUpdate=="function"?i.shouldComponentUpdate(t,l,n):e.prototype&&e.prototype.isPureReactComponent?!Et(a,t)||!Et(u,l):!0}function Ts(i,e,a,t){i=e.state,typeof e.componentWillReceiveProps=="function"&&e.componentWillReceiveProps(a,t),typeof e.UNSAFE_componentWillReceiveProps=="function"&&e.UNSAFE_componentWillReceiveProps(a,t),e.state!==i&&or.enqueueReplaceState(e,e.state,null)}function _a(i,e){var a=e;if("ref"in e){a={};for(var t in e)t!=="ref"&&(a[t]=e[t])}if(i=i.defaultProps){a===e&&(a=D({},a));for(var u in i)a[u]===void 0&&(a[u]=i[u])}return a}var fl=typeof reportError=="function"?reportError:function(i){if(typeof window=="object"&&typeof window.ErrorEvent=="function"){var e=new window.ErrorEvent("error",{bubbles:!0,cancelable:!0,message:typeof i=="object"&&i!==null&&typeof i.message=="string"?String(i.message):String(i),error:i});if(!window.dispatchEvent(e))return}else if(typeof process=="object"&&typeof process.emit=="function"){process.emit("uncaughtException",i);return}console.error(i)};function Ds(i){fl(i)}function zs(i){console.error(i)}function Ps(i){fl(i)}function ml(i,e){try{var a=i.onUncaughtError;a(e.value,{componentStack:e.stack})}catch(t){setTimeout(function(){throw t})}}function Rs(i,e,a){try{var t=i.onCaughtError;t(a.value,{componentStack:a.stack,errorBoundary:e.tag===1?e.stateNode:null})}catch(u){setTimeout(function(){throw u})}}function cr(i,e,a){return a=ea(a),a.tag=3,a.payload={element:null},a.callback=function(){ml(i,e)},a}function Gs(i){return i=ea(i),i.tag=3,i}function As(i,e,a,t){var u=a.type.getDerivedStateFromError;if(typeof u=="function"){var l=t.value;i.payload=function(){return u(l)},i.callback=function(){Rs(e,a,t)}}var n=a.stateNode;n!==null&&typeof n.componentDidCatch=="function"&&(i.callback=function(){Rs(e,a,t),typeof u!="function"&&(da===null?da=new Set([this]):da.add(this));var r=t.stack;this.componentDidCatch(t.value,{componentStack:r!==null?r:""})})}function ig(i,e,a,t,u){if(a.flags|=32768,t!==null&&typeof t=="object"&&typeof t.then=="function"){if(e=a.alternate,e!==null&&Ft(e,a,u,!0),a=be.current,a!==null){switch(a.tag){case 13:return Pe===null?Nr():a.alternate===null&&Gi===0&&(Gi=3),a.flags&=-257,a.flags|=65536,a.lanes=u,t===Un?a.flags|=16384:(e=a.updateQueue,e===null?a.updateQueue=new Set([t]):e.add(t),Lr(i,t,u)),!1;case 22:return a.flags|=65536,t===Un?a.flags|=16384:(e=a.updateQueue,e===null?(e={transitions:null,markerInstances:null,retryQueue:new Set([t])},a.updateQueue=e):(a=e.retryQueue,a===null?e.retryQueue=new Set([t]):a.add(t)),Lr(i,t,u)),!1}throw Error(s(435,a.tag))}return Lr(i,t,u),Nr(),!1}if(fi)return e=be.current,e!==null?((e.flags&65536)===0&&(e.flags|=256),e.flags|=65536,e.lanes=u,t!==An&&(i=Error(s(422),{cause:t}),Jt(Ce(i,a)))):(t!==An&&(e=Error(s(423),{cause:t}),Jt(Ce(e,a))),i=i.current.alternate,i.flags|=65536,u&=-u,i.lanes|=u,t=Ce(t,a),u=cr(i.stateNode,t,u),Jn(i,u),Gi!==4&&(Gi=2)),!1;var l=Error(s(520),{cause:t});if(l=Ce(l,a),ou===null?ou=[l]:ou.push(l),Gi!==4&&(Gi=2),e===null)return!0;t=Ce(t,a),a=e;do{switch(a.tag){case 3:return a.flags|=65536,i=u&-u,a.lanes|=i,i=cr(a.stateNode,t,i),Jn(a,i),!1;case 1:if(e=a.type,l=a.stateNode,(a.flags&128)===0&&(typeof e.getDerivedStateFromError=="function"||l!==null&&typeof l.componentDidCatch=="function"&&(da===null||!da.has(l))))return a.flags|=65536,u&=-u,a.lanes|=u,u=Gs(u),As(u,i,a,t),Jn(a,u),!1}a=a.return}while(a!==null);return!1}var Os=Error(s(461)),xi=!1;function Zi(i,e,a,t){e.child=i===null?ps(e,null,a,t):dt(e,i.child,a,t)}function Ns(i,e,a,t,u){a=a.render;var l=e.ref;if("ref"in t){var n={};for(var r in t)r!=="ref"&&(n[r]=t[r])}else n=t;return Aa(e),t=Xn(i,e,a,n,l,u),r=Qn(),i!==null&&!xi?(Kn(i,e,u),Fe(i,e,u)):(fi&&r&&Rn(e),e.flags|=1,Zi(i,e,t,u),e.child)}function _s(i,e,a,t,u){if(i===null){var l=a.type;return typeof l=="function"&&!Dn(l)&&l.defaultProps===void 0&&a.compare===null?(e.tag=15,e.type=l,Ls(i,e,l,t,u)):(i=Xu(a.type,null,t,e,e.mode,u),i.ref=e.ref,i.return=e,e.child=i)}if(l=i.child,!vr(i,u)){var n=l.memoizedProps;if(a=a.compare,a=a!==null?a:Et,a(n,t)&&i.ref===e.ref)return Fe(i,e,u)}return e.flags|=1,i=Le(l,t),i.ref=e.ref,i.return=e,e.child=i}function Ls(i,e,a,t,u){if(i!==null){var l=i.memoizedProps;if(Et(l,t)&&i.ref===e.ref)if(xi=!1,e.pendingProps=t=l,vr(i,u))(i.flags&131072)!==0&&(xi=!0);else return e.lanes=i.lanes,Fe(i,e,u)}return sr(i,e,a,t,u)}function Hs(i,e,a){var t=e.pendingProps,u=t.children,l=i!==null?i.memoizedState:null;if(t.mode==="hidden"){if((e.flags&128)!==0){if(t=l!==null?l.baseLanes|a:a,i!==null){for(u=e.child=i.child,l=0;u!==null;)l=l|u.lanes|u.childLanes,u=u.sibling;e.childLanes=l&~t}else e.childLanes=0,e.child=null;return Es(i,e,t,a)}if((a&536870912)!==0)e.memoizedState={baseLanes:0,cachePool:null},i!==null&&ku(e,l!==null?l.cachePool:null),l!==null?Lc(e,l):Zn(),Vs(e);else return e.lanes=e.childLanes=536870912,Es(i,e,l!==null?l.baseLanes|a:a,a)}else l!==null?(ku(e,l.cachePool),Lc(e,l),la(),e.memoizedState=null):(i!==null&&ku(e,null),Zn(),la());return Zi(i,e,u,a),e.child}function Es(i,e,a,t){var u=En();return u=u===null?null:{parent:Ei._currentValue,pool:u},e.memoizedState={baseLanes:a,cachePool:u},i!==null&&ku(e,null),Zn(),Vs(e),i!==null&&Ft(i,e,t,!0),null}function gl(i,e){var a=e.ref;if(a===null)i!==null&&i.ref!==null&&(e.flags|=4194816);else{if(typeof a!="function"&&typeof a!="object")throw Error(s(284));(i===null||i.ref!==a)&&(e.flags|=4194816)}}function sr(i,e,a,t,u){return Aa(e),a=Xn(i,e,a,t,void 0,u),t=Qn(),i!==null&&!xi?(Kn(i,e,u),Fe(i,e,u)):(fi&&t&&Rn(e),e.flags|=1,Zi(i,e,a,u),e.child)}function Us(i,e,a,t,u,l){return Aa(e),e.updateQueue=null,a=Ec(e,t,a,u),Hc(i),t=Qn(),i!==null&&!xi?(Kn(i,e,l),Fe(i,e,l)):(fi&&t&&Rn(e),e.flags|=1,Zi(i,e,a,l),e.child)}function js(i,e,a,t,u){if(Aa(e),e.stateNode===null){var l=et,n=a.contextType;typeof n=="object"&&n!==null&&(l=Qi(n)),l=new a(t,l),e.memoizedState=l.state!==null&&l.state!==void 0?l.state:null,l.updater=or,e.stateNode=l,l._reactInternals=e,l=e.stateNode,l.props=t,l.state=e.memoizedState,l.refs={},jn(e),n=a.contextType,l.context=typeof n=="object"&&n!==null?Qi(n):et,l.state=e.memoizedState,n=a.getDerivedStateFromProps,typeof n=="function"&&(rr(e,a,n,t),l.state=e.memoizedState),typeof a.getDerivedStateFromProps=="function"||typeof l.getSnapshotBeforeUpdate=="function"||typeof l.UNSAFE_componentWillMount!="function"&&typeof l.componentWillMount!="function"||(n=l.state,typeof l.componentWillMount=="function"&&l.componentWillMount(),typeof l.UNSAFE_componentWillMount=="function"&&l.UNSAFE_componentWillMount(),n!==l.state&&or.enqueueReplaceState(l,l.state,null),It(e,t,l,u),Kt(),l.state=e.memoizedState),typeof l.componentDidMount=="function"&&(e.flags|=4194308),t=!0}else if(i===null){l=e.stateNode;var r=e.memoizedProps,c=_a(a,r);l.props=c;var S=l.context,M=a.contextType;n=et,typeof M=="object"&&M!==null&&(n=Qi(M));var y=a.getDerivedStateFromProps;M=typeof y=="function"||typeof l.getSnapshotBeforeUpdate=="function",r=e.pendingProps!==r,M||typeof l.UNSAFE_componentWillReceiveProps!="function"&&typeof l.componentWillReceiveProps!="function"||(r||S!==n)&&Ts(e,l,t,n),ia=!1;var C=e.memoizedState;l.state=C,It(e,t,l,u),Kt(),S=e.memoizedState,r||C!==S||ia?(typeof y=="function"&&(rr(e,a,y,t),S=e.memoizedState),(c=ia||ys(e,a,c,t,C,S,n))?(M||typeof l.UNSAFE_componentWillMount!="function"&&typeof l.componentWillMount!="function"||(typeof l.componentWillMount=="function"&&l.componentWillMount(),typeof l.UNSAFE_componentWillMount=="function"&&l.UNSAFE_componentWillMount()),typeof l.componentDidMount=="function"&&(e.flags|=4194308)):(typeof l.componentDidMount=="function"&&(e.flags|=4194308),e.memoizedProps=t,e.memoizedState=S),l.props=t,l.state=S,l.context=n,t=c):(typeof l.componentDidMount=="function"&&(e.flags|=4194308),t=!1)}else{l=e.stateNode,xn(i,e),n=e.memoizedProps,M=_a(a,n),l.props=M,y=e.pendingProps,C=l.context,S=a.contextType,c=et,typeof S=="object"&&S!==null&&(c=Qi(S)),r=a.getDerivedStateFromProps,(S=typeof r=="function"||typeof l.getSnapshotBeforeUpdate=="function")||typeof l.UNSAFE_componentWillReceiveProps!="function"&&typeof l.componentWillReceiveProps!="function"||(n!==y||C!==c)&&Ts(e,l,t,c),ia=!1,C=e.memoizedState,l.state=C,It(e,t,l,u),Kt();var v=e.memoizedState;n!==y||C!==v||ia||i!==null&&i.dependencies!==null&&Iu(i.dependencies)?(typeof r=="function"&&(rr(e,a,r,t),v=e.memoizedState),(M=ia||ys(e,a,M,t,C,v,c)||i!==null&&i.dependencies!==null&&Iu(i.dependencies))?(S||typeof l.UNSAFE_componentWillUpdate!="function"&&typeof l.componentWillUpdate!="function"||(typeof l.componentWillUpdate=="function"&&l.componentWillUpdate(t,v,c),typeof l.UNSAFE_componentWillUpdate=="function"&&l.UNSAFE_componentWillUpdate(t,v,c)),typeof l.componentDidUpdate=="function"&&(e.flags|=4),typeof l.getSnapshotBeforeUpdate=="function"&&(e.flags|=1024)):(typeof l.componentDidUpdate!="function"||n===i.memoizedProps&&C===i.memoizedState||(e.flags|=4),typeof l.getSnapshotBeforeUpdate!="function"||n===i.memoizedProps&&C===i.memoizedState||(e.flags|=1024),e.memoizedProps=t,e.memoizedState=v),l.props=t,l.state=v,l.context=c,t=M):(typeof l.componentDidUpdate!="function"||n===i.memoizedProps&&C===i.memoizedState||(e.flags|=4),typeof l.getSnapshotBeforeUpdate!="function"||n===i.memoizedProps&&C===i.memoizedState||(e.flags|=1024),t=!1)}return l=t,gl(i,e),t=(e.flags&128)!==0,l||t?(l=e.stateNode,a=t&&typeof a.getDerivedStateFromError!="function"?null:l.render(),e.flags|=1,i!==null&&t?(e.child=dt(e,i.child,null,u),e.child=dt(e,null,a,u)):Zi(i,e,a,u),e.memoizedState=l.state,i=e.child):i=Fe(i,e,u),i}function xs(i,e,a,t){return xt(),e.flags|=256,Zi(i,e,a,t),e.child}var dr={dehydrated:null,treeContext:null,retryLane:0,hydrationErrors:null};function fr(i){return{baseLanes:i,cachePool:zc()}}function mr(i,e,a){return i=i!==null?i.childLanes&~a:0,e&&(i|=Me),i}function Js(i,e,a){var t=e.pendingProps,u=!1,l=(e.flags&128)!==0,n;if((n=l)||(n=i!==null&&i.memoizedState===null?!1:(Ui.current&2)!==0),n&&(u=!0,e.flags&=-129),n=(e.flags&32)!==0,e.flags&=-33,i===null){if(fi){if(u?ua(e):la(),fi){var r=Ri,c;if(c=r){i:{for(c=r,r=ze;c.nodeType!==8;){if(!r){r=null;break i}if(c=Te(c.nextSibling),c===null){r=null;break i}}r=c}r!==null?(e.memoizedState={dehydrated:r,treeContext:Da!==null?{id:He,overflow:Ee}:null,retryLane:536870912,hydrationErrors:null},c=re(18,null,null,0),c.stateNode=r,c.return=e,e.child=c,wi=e,Ri=null,c=!0):c=!1}c||Ra(e)}if(r=e.memoizedState,r!==null&&(r=r.dehydrated,r!==null))return wr(r)?e.lanes=32:e.lanes=536870912,null;Je(e)}return r=t.children,t=t.fallback,u?(la(),u=e.mode,r=Sl({mode:"hidden",children:r},u),t=Ta(t,u,a,null),r.return=e,t.return=e,r.sibling=t,e.child=r,u=e.child,u.memoizedState=fr(a),u.childLanes=mr(i,n,a),e.memoizedState=dr,t):(ua(e),gr(e,r))}if(c=i.memoizedState,c!==null&&(r=c.dehydrated,r!==null)){if(l)e.flags&256?(ua(e),e.flags&=-257,e=Sr(i,e,a)):e.memoizedState!==null?(la(),e.child=i.child,e.flags|=128,e=null):(la(),u=t.fallback,r=e.mode,t=Sl({mode:"visible",children:t.children},r),u=Ta(u,r,a,null),u.flags|=2,t.return=e,u.return=e,t.sibling=u,e.child=t,dt(e,i.child,null,a),t=e.child,t.memoizedState=fr(a),t.childLanes=mr(i,n,a),e.memoizedState=dr,e=u);else if(ua(e),wr(r)){if(n=r.nextSibling&&r.nextSibling.dataset,n)var S=n.dgst;n=S,t=Error(s(419)),t.stack="",t.digest=n,Jt({value:t,source:null,stack:null}),e=Sr(i,e,a)}else if(xi||Ft(i,e,a,!1),n=(a&i.childLanes)!==0,xi||n){if(n=pi,n!==null&&(t=a&-a,t=(t&42)!==0?1:wl(t),t=(t&(n.suspendedLanes|a))!==0?0:t,t!==0&&t!==c.retryLane))throw c.retryLane=t,it(i,t),fe(n,i,t),Os;r.data==="$?"||Nr(),e=Sr(i,e,a)}else r.data==="$?"?(e.flags|=192,e.child=i.child,e=null):(i=c.treeContext,Ri=Te(r.nextSibling),wi=e,fi=!0,Pa=null,ze=!1,i!==null&&(he[Be++]=He,he[Be++]=Ee,he[Be++]=Da,He=i.id,Ee=i.overflow,Da=e),e=gr(e,t.children),e.flags|=4096);return e}return u?(la(),u=t.fallback,r=e.mode,c=i.child,S=c.sibling,t=Le(c,{mode:"hidden",children:t.children}),t.subtreeFlags=c.subtreeFlags&65011712,S!==null?u=Le(S,u):(u=Ta(u,r,a,null),u.flags|=2),u.return=e,t.return=e,t.sibling=u,e.child=t,t=u,u=e.child,r=i.child.memoizedState,r===null?r=fr(a):(c=r.cachePool,c!==null?(S=Ei._currentValue,c=c.parent!==S?{parent:S,pool:S}:c):c=zc(),r={baseLanes:r.baseLanes|a,cachePool:c}),u.memoizedState=r,u.childLanes=mr(i,n,a),e.memoizedState=dr,t):(ua(e),a=i.child,i=a.sibling,a=Le(a,{mode:"visible",children:t.children}),a.return=e,a.sibling=null,i!==null&&(n=e.deletions,n===null?(e.deletions=[i],e.flags|=16):n.push(i)),e.child=a,e.memoizedState=null,a)}function gr(i,e){return e=Sl({mode:"visible",children:e},i.mode),e.return=i,i.child=e}function Sl(i,e){return i=re(22,i,null,e),i.lanes=0,i.stateNode={_visibility:1,_pendingMarkers:null,_retryCache:null,_transitions:null},i}function Sr(i,e,a){return dt(e,i.child,null,a),i=gr(e,e.pendingProps.children),i.flags|=2,e.memoizedState=null,i}function Fs(i,e,a){i.lanes|=e;var t=i.alternate;t!==null&&(t.lanes|=e),Nn(i.return,e,a)}function Cr(i,e,a,t,u){var l=i.memoizedState;l===null?i.memoizedState={isBackwards:e,rendering:null,renderingStartTime:0,last:t,tail:a,tailMode:u}:(l.isBackwards=e,l.rendering=null,l.renderingStartTime=0,l.last=t,l.tail=a,l.tailMode=u)}function Zs(i,e,a){var t=e.pendingProps,u=t.revealOrder,l=t.tail;if(Zi(i,e,t.children,a),t=Ui.current,(t&2)!==0)t=t&1|2,e.flags|=128;else{if(i!==null&&(i.flags&128)!==0)i:for(i=e.child;i!==null;){if(i.tag===13)i.memoizedState!==null&&Fs(i,a,e);else if(i.tag===19)Fs(i,a,e);else if(i.child!==null){i.child.return=i,i=i.child;continue}if(i===e)break i;for(;i.sibling===null;){if(i.return===null||i.return===e)break i;i=i.return}i.sibling.return=i.return,i=i.sibling}t&=1}switch(L(Ui,t),u){case"forwards":for(a=e.child,u=null;a!==null;)i=a.alternate,i!==null&&dl(i)===null&&(u=a),a=a.sibling;a=u,a===null?(u=e.child,e.child=null):(u=a.sibling,a.sibling=null),Cr(e,!1,u,a,l);break;case"backwards":for(a=null,u=e.child,e.child=null;u!==null;){if(i=u.alternate,i!==null&&dl(i)===null){e.child=u;break}i=u.sibling,u.sibling=a,a=u,u=i}Cr(e,!0,a,null,l);break;case"together":Cr(e,!1,null,null,void 0);break;default:e.memoizedState=null}return e.child}function Fe(i,e,a){if(i!==null&&(e.dependencies=i.dependencies),sa|=e.lanes,(a&e.childLanes)===0)if(i!==null){if(Ft(i,e,a,!1),(a&e.childLanes)===0)return null}else return null;if(i!==null&&e.child!==i.child)throw Error(s(153));if(e.child!==null){for(i=e.child,a=Le(i,i.pendingProps),e.child=a,a.return=e;i.sibling!==null;)i=i.sibling,a=a.sibling=Le(i,i.pendingProps),a.return=e;a.sibling=null}return e.child}function vr(i,e){return(i.lanes&e)!==0?!0:(i=i.dependencies,!!(i!==null&&Iu(i)))}function eg(i,e,a){switch(e.tag){case 3:Ti(e,e.stateNode.containerInfo),We(e,Ei,i.memoizedState.cache),xt();break;case 27:case 5:Yl(e);break;case 4:Ti(e,e.stateNode.containerInfo);break;case 10:We(e,e.type,e.memoizedProps.value);break;case 13:var t=e.memoizedState;if(t!==null)return t.dehydrated!==null?(ua(e),e.flags|=128,null):(a&e.child.childLanes)!==0?Js(i,e,a):(ua(e),i=Fe(i,e,a),i!==null?i.sibling:null);ua(e);break;case 19:var u=(i.flags&128)!==0;if(t=(a&e.childLanes)!==0,t||(Ft(i,e,a,!1),t=(a&e.childLanes)!==0),u){if(t)return Zs(i,e,a);e.flags|=128}if(u=e.memoizedState,u!==null&&(u.rendering=null,u.tail=null,u.lastEffect=null),L(Ui,Ui.current),t)break;return null;case 22:case 23:return e.lanes=0,Hs(i,e,a);case 24:We(e,Ei,i.memoizedState.cache)}return Fe(i,e,a)}function qs(i,e,a){if(i!==null)if(i.memoizedProps!==e.pendingProps)xi=!0;else{if(!vr(i,a)&&(e.flags&128)===0)return xi=!1,eg(i,e,a);xi=(i.flags&131072)!==0}else xi=!1,fi&&(e.flags&1048576)!==0&&bc(e,Ku,e.index);switch(e.lanes=0,e.tag){case 16:i:{i=e.pendingProps;var t=e.elementType,u=t._init;if(t=u(t._payload),e.type=t,typeof t=="function")Dn(t)?(i=_a(t,i),e.tag=1,e=js(null,e,t,i,a)):(e.tag=0,e=sr(null,e,t,i,a));else{if(t!=null){if(u=t.$$typeof,u===x){e.tag=11,e=Ns(null,e,t,i,a);break i}else if(u===$){e.tag=14,e=_s(null,e,t,i,a);break i}}throw e=Oe(t)||t,Error(s(306,e,""))}}return e;case 0:return sr(i,e,e.type,e.pendingProps,a);case 1:return t=e.type,u=_a(t,e.pendingProps),js(i,e,t,u,a);case 3:i:{if(Ti(e,e.stateNode.containerInfo),i===null)throw Error(s(387));t=e.pendingProps;var l=e.memoizedState;u=l.element,xn(i,e),It(e,t,null,a);var n=e.memoizedState;if(t=n.cache,We(e,Ei,t),t!==l.cache&&_n(e,[Ei],a,!0),Kt(),t=n.element,l.isDehydrated)if(l={element:t,isDehydrated:!1,cache:n.cache},e.updateQueue.baseState=l,e.memoizedState=l,e.flags&256){e=xs(i,e,t,a);break i}else if(t!==u){u=Ce(Error(s(424)),e),Jt(u),e=xs(i,e,t,a);break i}else{switch(i=e.stateNode.containerInfo,i.nodeType){case 9:i=i.body;break;default:i=i.nodeName==="HTML"?i.ownerDocument.body:i}for(Ri=Te(i.firstChild),wi=e,fi=!0,Pa=null,ze=!0,a=ps(e,null,t,a),e.child=a;a;)a.flags=a.flags&-3|4096,a=a.sibling}else{if(xt(),t===u){e=Fe(i,e,a);break i}Zi(i,e,t,a)}e=e.child}return e;case 26:return gl(i,e),i===null?(a=Kd(e.type,null,e.pendingProps,null))?e.memoizedState=a:fi||(a=e.type,i=e.pendingProps,t=Rl(W.current).createElement(a),t[Xi]=e,t[$i]=i,Yi(t,a,i),ji(t),e.stateNode=t):e.memoizedState=Kd(e.type,i.memoizedProps,e.pendingProps,i.memoizedState),null;case 27:return Yl(e),i===null&&fi&&(t=e.stateNode=Yd(e.type,e.pendingProps,W.current),wi=e,ze=!0,u=Ri,ga(e.type)?(kr=u,Ri=Te(t.firstChild)):Ri=u),Zi(i,e,e.pendingProps.children,a),gl(i,e),i===null&&(e.flags|=4194304),e.child;case 5:return i===null&&fi&&((u=t=Ri)&&(t=Rg(t,e.type,e.pendingProps,ze),t!==null?(e.stateNode=t,wi=e,Ri=Te(t.firstChild),ze=!1,u=!0):u=!1),u||Ra(e)),Yl(e),u=e.type,l=e.pendingProps,n=i!==null?i.memoizedProps:null,t=l.children,Qr(u,l)?t=null:n!==null&&Qr(u,n)&&(e.flags|=32),e.memoizedState!==null&&(u=Xn(i,e,Qm,null,null,a),vu._currentValue=u),gl(i,e),Zi(i,e,t,a),e.child;case 6:return i===null&&fi&&((i=a=Ri)&&(a=Gg(a,e.pendingProps,ze),a!==null?(e.stateNode=a,wi=e,Ri=null,i=!0):i=!1),i||Ra(e)),null;case 13:return Js(i,e,a);case 4:return Ti(e,e.stateNode.containerInfo),t=e.pendingProps,i===null?e.child=dt(e,null,t,a):Zi(i,e,t,a),e.child;case 11:return Ns(i,e,e.type,e.pendingProps,a);case 7:return Zi(i,e,e.pendingProps,a),e.child;case 8:return Zi(i,e,e.pendingProps.children,a),e.child;case 12:return Zi(i,e,e.pendingProps.children,a),e.child;case 10:return t=e.pendingProps,We(e,e.type,t.value),Zi(i,e,t.children,a),e.child;case 9:return u=e.type._context,t=e.pendingProps.children,Aa(e),u=Qi(u),t=t(u),e.flags|=1,Zi(i,e,t,a),e.child;case 14:return _s(i,e,e.type,e.pendingProps,a);case 15:return Ls(i,e,e.type,e.pendingProps,a);case 19:return Zs(i,e,a);case 31:return t=e.pendingProps,a=e.mode,t={mode:t.mode,children:t.children},i===null?(a=Sl(t,a),a.ref=e.ref,e.child=a,a.return=e,e=a):(a=Le(i.child,t),a.ref=e.ref,e.child=a,a.return=e,e=a),e;case 22:return Hs(i,e,a);case 24:return Aa(e),t=Qi(Ei),i===null?(u=En(),u===null&&(u=pi,l=Ln(),u.pooledCache=l,l.refCount++,l!==null&&(u.pooledCacheLanes|=a),u=l),e.memoizedState={parent:t,cache:u},jn(e),We(e,Ei,u)):((i.lanes&a)!==0&&(xn(i,e),It(e,null,null,a),Kt()),u=i.memoizedState,l=e.memoizedState,u.parent!==t?(u={parent:t,cache:t},e.memoizedState=u,e.lanes===0&&(e.memoizedState=e.updateQueue.baseState=u),We(e,Ei,t)):(t=l.cache,We(e,Ei,t),t!==u.cache&&_n(e,[Ei],a,!0))),Zi(i,e,e.pendingProps.children,a),e.child;case 29:throw e.pendingProps}throw Error(s(156,e.tag))}function Ze(i){i.flags|=4}function Ys(i,e){if(e.type!=="stylesheet"||(e.state.loading&4)!==0)i.flags&=-16777217;else if(i.flags|=16777216,!Wd(e)){if(e=be.current,e!==null&&((oi&4194048)===oi?Pe!==null:(oi&62914560)!==oi&&(oi&536870912)===0||e!==Pe))throw Xt=Un,Pc;i.flags|=8192}}function Cl(i,e){e!==null&&(i.flags|=4),i.flags&16384&&(e=i.tag!==22?Vo():536870912,i.lanes|=e,St|=e)}function au(i,e){if(!fi)switch(i.tailMode){case"hidden":e=i.tail;for(var a=null;e!==null;)e.alternate!==null&&(a=e),e=e.sibling;a===null?i.tail=null:a.sibling=null;break;case"collapsed":a=i.tail;for(var t=null;a!==null;)a.alternate!==null&&(t=a),a=a.sibling;t===null?e||i.tail===null?i.tail=null:i.tail.sibling=null:t.sibling=null}}function zi(i){var e=i.alternate!==null&&i.alternate.child===i.child,a=0,t=0;if(e)for(var u=i.child;u!==null;)a|=u.lanes|u.childLanes,t|=u.subtreeFlags&65011712,t|=u.flags&65011712,u.return=i,u=u.sibling;else for(u=i.child;u!==null;)a|=u.lanes|u.childLanes,t|=u.subtreeFlags,t|=u.flags,u.return=i,u=u.sibling;return i.subtreeFlags|=t,i.childLanes=a,e}function ag(i,e,a){var t=e.pendingProps;switch(Gn(e),e.tag){case 31:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return zi(e),null;case 1:return zi(e),null;case 3:return a=e.stateNode,t=null,i!==null&&(t=i.memoizedState.cache),e.memoizedState.cache!==t&&(e.flags|=2048),je(Ei),Ie(),a.pendingContext&&(a.context=a.pendingContext,a.pendingContext=null),(i===null||i.child===null)&&(jt(e)?Ze(e):i===null||i.memoizedState.isDehydrated&&(e.flags&256)===0||(e.flags|=1024,Vc())),zi(e),null;case 26:return a=e.memoizedState,i===null?(Ze(e),a!==null?(zi(e),Ys(e,a)):(zi(e),e.flags&=-16777217)):a?a!==i.memoizedState?(Ze(e),zi(e),Ys(e,a)):(zi(e),e.flags&=-16777217):(i.memoizedProps!==t&&Ze(e),zi(e),e.flags&=-16777217),null;case 27:zu(e),a=W.current;var u=e.type;if(i!==null&&e.stateNode!=null)i.memoizedProps!==t&&Ze(e);else{if(!t){if(e.stateNode===null)throw Error(s(166));return zi(e),null}i=X.current,jt(e)?Mc(e):(i=Yd(u,t,a),e.stateNode=i,Ze(e))}return zi(e),null;case 5:if(zu(e),a=e.type,i!==null&&e.stateNode!=null)i.memoizedProps!==t&&Ze(e);else{if(!t){if(e.stateNode===null)throw Error(s(166));return zi(e),null}if(i=X.current,jt(e))Mc(e);else{switch(u=Rl(W.current),i){case 1:i=u.createElementNS("http://www.w3.org/2000/svg",a);break;case 2:i=u.createElementNS("http://www.w3.org/1998/Math/MathML",a);break;default:switch(a){case"svg":i=u.createElementNS("http://www.w3.org/2000/svg",a);break;case"math":i=u.createElementNS("http://www.w3.org/1998/Math/MathML",a);break;case"script":i=u.createElement("div"),i.innerHTML="<script><\/script>",i=i.removeChild(i.firstChild);break;case"select":i=typeof t.is=="string"?u.createElement("select",{is:t.is}):u.createElement("select"),t.multiple?i.multiple=!0:t.size&&(i.size=t.size);break;default:i=typeof t.is=="string"?u.createElement(a,{is:t.is}):u.createElement(a)}}i[Xi]=e,i[$i]=t;i:for(u=e.child;u!==null;){if(u.tag===5||u.tag===6)i.appendChild(u.stateNode);else if(u.tag!==4&&u.tag!==27&&u.child!==null){u.child.return=u,u=u.child;continue}if(u===e)break i;for(;u.sibling===null;){if(u.return===null||u.return===e)break i;u=u.return}u.sibling.return=u.return,u=u.sibling}e.stateNode=i;i:switch(Yi(i,a,t),a){case"button":case"input":case"select":case"textarea":i=!!t.autoFocus;break i;case"img":i=!0;break i;default:i=!1}i&&Ze(e)}}return zi(e),e.flags&=-16777217,null;case 6:if(i&&e.stateNode!=null)i.memoizedProps!==t&&Ze(e);else{if(typeof t!="string"&&e.stateNode===null)throw Error(s(166));if(i=W.current,jt(e)){if(i=e.stateNode,a=e.memoizedProps,t=null,u=wi,u!==null)switch(u.tag){case 27:case 5:t=u.memoizedProps}i[Xi]=e,i=!!(i.nodeValue===a||t!==null&&t.suppressHydrationWarning===!0||Ud(i.nodeValue,a)),i||Ra(e)}else i=Rl(i).createTextNode(t),i[Xi]=e,e.stateNode=i}return zi(e),null;case 13:if(t=e.memoizedState,i===null||i.memoizedState!==null&&i.memoizedState.dehydrated!==null){if(u=jt(e),t!==null&&t.dehydrated!==null){if(i===null){if(!u)throw Error(s(318));if(u=e.memoizedState,u=u!==null?u.dehydrated:null,!u)throw Error(s(317));u[Xi]=e}else xt(),(e.flags&128)===0&&(e.memoizedState=null),e.flags|=4;zi(e),u=!1}else u=Vc(),i!==null&&i.memoizedState!==null&&(i.memoizedState.hydrationErrors=u),u=!0;if(!u)return e.flags&256?(Je(e),e):(Je(e),null)}if(Je(e),(e.flags&128)!==0)return e.lanes=a,e;if(a=t!==null,i=i!==null&&i.memoizedState!==null,a){t=e.child,u=null,t.alternate!==null&&t.alternate.memoizedState!==null&&t.alternate.memoizedState.cachePool!==null&&(u=t.alternate.memoizedState.cachePool.pool);var l=null;t.memoizedState!==null&&t.memoizedState.cachePool!==null&&(l=t.memoizedState.cachePool.pool),l!==u&&(t.flags|=2048)}return a!==i&&a&&(e.child.flags|=8192),Cl(e,e.updateQueue),zi(e),null;case 4:return Ie(),i===null&&Fr(e.stateNode.containerInfo),zi(e),null;case 10:return je(e.type),zi(e),null;case 19:if(H(Ui),u=e.memoizedState,u===null)return zi(e),null;if(t=(e.flags&128)!==0,l=u.rendering,l===null)if(t)au(u,!1);else{if(Gi!==0||i!==null&&(i.flags&128)!==0)for(i=e.child;i!==null;){if(l=dl(i),l!==null){for(e.flags|=128,au(u,!1),i=l.updateQueue,e.updateQueue=i,Cl(e,i),e.subtreeFlags=0,i=a,a=e.child;a!==null;)Bc(a,i),a=a.sibling;return L(Ui,Ui.current&1|2),e.child}i=i.sibling}u.tail!==null&&De()>Bl&&(e.flags|=128,t=!0,au(u,!1),e.lanes=4194304)}else{if(!t)if(i=dl(l),i!==null){if(e.flags|=128,t=!0,i=i.updateQueue,e.updateQueue=i,Cl(e,i),au(u,!0),u.tail===null&&u.tailMode==="hidden"&&!l.alternate&&!fi)return zi(e),null}else 2*De()-u.renderingStartTime>Bl&&a!==536870912&&(e.flags|=128,t=!0,au(u,!1),e.lanes=4194304);u.isBackwards?(l.sibling=e.child,e.child=l):(i=u.last,i!==null?i.sibling=l:e.child=l,u.last=l)}return u.tail!==null?(e=u.tail,u.rendering=e,u.tail=e.sibling,u.renderingStartTime=De(),e.sibling=null,i=Ui.current,L(Ui,t?i&1|2:i&1),e):(zi(e),null);case 22:case 23:return Je(e),qn(),t=e.memoizedState!==null,i!==null?i.memoizedState!==null!==t&&(e.flags|=8192):t&&(e.flags|=8192),t?(a&536870912)!==0&&(e.flags&128)===0&&(zi(e),e.subtreeFlags&6&&(e.flags|=8192)):zi(e),a=e.updateQueue,a!==null&&Cl(e,a.retryQueue),a=null,i!==null&&i.memoizedState!==null&&i.memoizedState.cachePool!==null&&(a=i.memoizedState.cachePool.pool),t=null,e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(t=e.memoizedState.cachePool.pool),t!==a&&(e.flags|=2048),i!==null&&H(Oa),null;case 24:return a=null,i!==null&&(a=i.memoizedState.cache),e.memoizedState.cache!==a&&(e.flags|=2048),je(Ei),zi(e),null;case 25:return null;case 30:return null}throw Error(s(156,e.tag))}function tg(i,e){switch(Gn(e),e.tag){case 1:return i=e.flags,i&65536?(e.flags=i&-65537|128,e):null;case 3:return je(Ei),Ie(),i=e.flags,(i&65536)!==0&&(i&128)===0?(e.flags=i&-65537|128,e):null;case 26:case 27:case 5:return zu(e),null;case 13:if(Je(e),i=e.memoizedState,i!==null&&i.dehydrated!==null){if(e.alternate===null)throw Error(s(340));xt()}return i=e.flags,i&65536?(e.flags=i&-65537|128,e):null;case 19:return H(Ui),null;case 4:return Ie(),null;case 10:return je(e.type),null;case 22:case 23:return Je(e),qn(),i!==null&&H(Oa),i=e.flags,i&65536?(e.flags=i&-65537|128,e):null;case 24:return je(Ei),null;case 25:return null;default:return null}}function Xs(i,e){switch(Gn(e),e.tag){case 3:je(Ei),Ie();break;case 26:case 27:case 5:zu(e);break;case 4:Ie();break;case 13:Je(e);break;case 19:H(Ui);break;case 10:je(e.type);break;case 22:case 23:Je(e),qn(),i!==null&&H(Oa);break;case 24:je(Ei)}}function tu(i,e){try{var a=e.updateQueue,t=a!==null?a.lastEffect:null;if(t!==null){var u=t.next;a=u;do{if((a.tag&i)===i){t=void 0;var l=a.create,n=a.inst;t=l(),n.destroy=t}a=a.next}while(a!==u)}}catch(r){Mi(e,e.return,r)}}function na(i,e,a){try{var t=e.updateQueue,u=t!==null?t.lastEffect:null;if(u!==null){var l=u.next;t=l;do{if((t.tag&i)===i){var n=t.inst,r=n.destroy;if(r!==void 0){n.destroy=void 0,u=e;var c=a,S=r;try{S()}catch(M){Mi(u,c,M)}}}t=t.next}while(t!==l)}}catch(M){Mi(e,e.return,M)}}function Qs(i){var e=i.updateQueue;if(e!==null){var a=i.stateNode;try{_c(e,a)}catch(t){Mi(i,i.return,t)}}}function Ks(i,e,a){a.props=_a(i.type,i.memoizedProps),a.state=i.memoizedState;try{a.componentWillUnmount()}catch(t){Mi(i,e,t)}}function uu(i,e){try{var a=i.ref;if(a!==null){switch(i.tag){case 26:case 27:case 5:var t=i.stateNode;break;case 30:t=i.stateNode;break;default:t=i.stateNode}typeof a=="function"?i.refCleanup=a(t):a.current=t}}catch(u){Mi(i,e,u)}}function Re(i,e){var a=i.ref,t=i.refCleanup;if(a!==null)if(typeof t=="function")try{t()}catch(u){Mi(i,e,u)}finally{i.refCleanup=null,i=i.alternate,i!=null&&(i.refCleanup=null)}else if(typeof a=="function")try{a(null)}catch(u){Mi(i,e,u)}else a.current=null}function Is(i){var e=i.type,a=i.memoizedProps,t=i.stateNode;try{i:switch(e){case"button":case"input":case"select":case"textarea":a.autoFocus&&t.focus();break i;case"img":a.src?t.src=a.src:a.srcSet&&(t.srcset=a.srcSet)}}catch(u){Mi(i,i.return,u)}}function hr(i,e,a){try{var t=i.stateNode;yg(t,i.type,a,e),t[$i]=e}catch(u){Mi(i,i.return,u)}}function ws(i){return i.tag===5||i.tag===3||i.tag===26||i.tag===27&&ga(i.type)||i.tag===4}function Br(i){i:for(;;){for(;i.sibling===null;){if(i.return===null||ws(i.return))return null;i=i.return}for(i.sibling.return=i.return,i=i.sibling;i.tag!==5&&i.tag!==6&&i.tag!==18;){if(i.tag===27&&ga(i.type)||i.flags&2||i.child===null||i.tag===4)continue i;i.child.return=i,i=i.child}if(!(i.flags&2))return i.stateNode}}function br(i,e,a){var t=i.tag;if(t===5||t===6)i=i.stateNode,e?(a.nodeType===9?a.body:a.nodeName==="HTML"?a.ownerDocument.body:a).insertBefore(i,e):(e=a.nodeType===9?a.body:a.nodeName==="HTML"?a.ownerDocument.body:a,e.appendChild(i),a=a._reactRootContainer,a!=null||e.onclick!==null||(e.onclick=Pl));else if(t!==4&&(t===27&&ga(i.type)&&(a=i.stateNode,e=null),i=i.child,i!==null))for(br(i,e,a),i=i.sibling;i!==null;)br(i,e,a),i=i.sibling}function vl(i,e,a){var t=i.tag;if(t===5||t===6)i=i.stateNode,e?a.insertBefore(i,e):a.appendChild(i);else if(t!==4&&(t===27&&ga(i.type)&&(a=i.stateNode),i=i.child,i!==null))for(vl(i,e,a),i=i.sibling;i!==null;)vl(i,e,a),i=i.sibling}function ks(i){var e=i.stateNode,a=i.memoizedProps;try{for(var t=i.type,u=e.attributes;u.length;)e.removeAttributeNode(u[0]);Yi(e,t,a),e[Xi]=i,e[$i]=a}catch(l){Mi(i,i.return,l)}}var qe=!1,Oi=!1,Mr=!1,$s=typeof WeakSet=="function"?WeakSet:Set,Ji=null;function ug(i,e){if(i=i.containerInfo,Yr=Ll,i=cc(i),Bn(i)){if("selectionStart"in i)var a={start:i.selectionStart,end:i.selectionEnd};else i:{a=(a=i.ownerDocument)&&a.defaultView||window;var t=a.getSelection&&a.getSelection();if(t&&t.rangeCount!==0){a=t.anchorNode;var u=t.anchorOffset,l=t.focusNode;t=t.focusOffset;try{a.nodeType,l.nodeType}catch{a=null;break i}var n=0,r=-1,c=-1,S=0,M=0,y=i,C=null;e:for(;;){for(var v;y!==a||u!==0&&y.nodeType!==3||(r=n+u),y!==l||t!==0&&y.nodeType!==3||(c=n+t),y.nodeType===3&&(n+=y.nodeValue.length),(v=y.firstChild)!==null;)C=y,y=v;for(;;){if(y===i)break e;if(C===a&&++S===u&&(r=n),C===l&&++M===t&&(c=n),(v=y.nextSibling)!==null)break;y=C,C=y.parentNode}y=v}a=r===-1||c===-1?null:{start:r,end:c}}else a=null}a=a||{start:0,end:0}}else a=null;for(Xr={focusedElem:i,selectionRange:a},Ll=!1,Ji=e;Ji!==null;)if(e=Ji,i=e.child,(e.subtreeFlags&1024)!==0&&i!==null)i.return=e,Ji=i;else for(;Ji!==null;){switch(e=Ji,l=e.alternate,i=e.flags,e.tag){case 0:break;case 11:case 15:break;case 1:if((i&1024)!==0&&l!==null){i=void 0,a=e,u=l.memoizedProps,l=l.memoizedState,t=a.stateNode;try{var w=_a(a.type,u,a.elementType===a.type);i=t.getSnapshotBeforeUpdate(w,l),t.__reactInternalSnapshotBeforeUpdate=i}catch(Q){Mi(a,a.return,Q)}}break;case 3:if((i&1024)!==0){if(i=e.stateNode.containerInfo,a=i.nodeType,a===9)Ir(i);else if(a===1)switch(i.nodeName){case"HEAD":case"HTML":case"BODY":Ir(i);break;default:i.textContent=""}}break;case 5:case 26:case 27:case 6:case 4:case 17:break;default:if((i&1024)!==0)throw Error(s(163))}if(i=e.sibling,i!==null){i.return=e.return,Ji=i;break}Ji=e.return}}function Ws(i,e,a){var t=a.flags;switch(a.tag){case 0:case 11:case 15:ra(i,a),t&4&&tu(5,a);break;case 1:if(ra(i,a),t&4)if(i=a.stateNode,e===null)try{i.componentDidMount()}catch(n){Mi(a,a.return,n)}else{var u=_a(a.type,e.memoizedProps);e=e.memoizedState;try{i.componentDidUpdate(u,e,i.__reactInternalSnapshotBeforeUpdate)}catch(n){Mi(a,a.return,n)}}t&64&&Qs(a),t&512&&uu(a,a.return);break;case 3:if(ra(i,a),t&64&&(i=a.updateQueue,i!==null)){if(e=null,a.child!==null)switch(a.child.tag){case 27:case 5:e=a.child.stateNode;break;case 1:e=a.child.stateNode}try{_c(i,e)}catch(n){Mi(a,a.return,n)}}break;case 27:e===null&&t&4&&ks(a);case 26:case 5:ra(i,a),e===null&&t&4&&Is(a),t&512&&uu(a,a.return);break;case 12:ra(i,a);break;case 13:ra(i,a),t&4&&ad(i,a),t&64&&(i=a.memoizedState,i!==null&&(i=i.dehydrated,i!==null&&(a=mg.bind(null,a),Ag(i,a))));break;case 22:if(t=a.memoizedState!==null||qe,!t){e=e!==null&&e.memoizedState!==null||Oi,u=qe;var l=Oi;qe=t,(Oi=e)&&!l?oa(i,a,(a.subtreeFlags&8772)!==0):ra(i,a),qe=u,Oi=l}break;case 30:break;default:ra(i,a)}}function id(i){var e=i.alternate;e!==null&&(i.alternate=null,id(e)),i.child=null,i.deletions=null,i.sibling=null,i.tag===5&&(e=i.stateNode,e!==null&&Wl(e)),i.stateNode=null,i.return=null,i.dependencies=null,i.memoizedProps=null,i.memoizedState=null,i.pendingProps=null,i.stateNode=null,i.updateQueue=null}var Di=null,ee=!1;function Ye(i,e,a){for(a=a.child;a!==null;)ed(i,e,a),a=a.sibling}function ed(i,e,a){if(ue&&typeof ue.onCommitFiberUnmount=="function")try{ue.onCommitFiberUnmount(Tt,a)}catch{}switch(a.tag){case 26:Oi||Re(a,e),Ye(i,e,a),a.memoizedState?a.memoizedState.count--:a.stateNode&&(a=a.stateNode,a.parentNode.removeChild(a));break;case 27:Oi||Re(a,e);var t=Di,u=ee;ga(a.type)&&(Di=a.stateNode,ee=!1),Ye(i,e,a),mu(a.stateNode),Di=t,ee=u;break;case 5:Oi||Re(a,e);case 6:if(t=Di,u=ee,Di=null,Ye(i,e,a),Di=t,ee=u,Di!==null)if(ee)try{(Di.nodeType===9?Di.body:Di.nodeName==="HTML"?Di.ownerDocument.body:Di).removeChild(a.stateNode)}catch(l){Mi(a,e,l)}else try{Di.removeChild(a.stateNode)}catch(l){Mi(a,e,l)}break;case 18:Di!==null&&(ee?(i=Di,Zd(i.nodeType===9?i.body:i.nodeName==="HTML"?i.ownerDocument.body:i,a.stateNode),Mu(i)):Zd(Di,a.stateNode));break;case 4:t=Di,u=ee,Di=a.stateNode.containerInfo,ee=!0,Ye(i,e,a),Di=t,ee=u;break;case 0:case 11:case 14:case 15:Oi||na(2,a,e),Oi||na(4,a,e),Ye(i,e,a);break;case 1:Oi||(Re(a,e),t=a.stateNode,typeof t.componentWillUnmount=="function"&&Ks(a,e,t)),Ye(i,e,a);break;case 21:Ye(i,e,a);break;case 22:Oi=(t=Oi)||a.memoizedState!==null,Ye(i,e,a),Oi=t;break;default:Ye(i,e,a)}}function ad(i,e){if(e.memoizedState===null&&(i=e.alternate,i!==null&&(i=i.memoizedState,i!==null&&(i=i.dehydrated,i!==null))))try{Mu(i)}catch(a){Mi(e,e.return,a)}}function lg(i){switch(i.tag){case 13:case 19:var e=i.stateNode;return e===null&&(e=i.stateNode=new $s),e;case 22:return i=i.stateNode,e=i._retryCache,e===null&&(e=i._retryCache=new $s),e;default:throw Error(s(435,i.tag))}}function pr(i,e){var a=lg(i);e.forEach(function(t){var u=gg.bind(null,i,t);a.has(t)||(a.add(t),t.then(u,u))})}function oe(i,e){var a=e.deletions;if(a!==null)for(var t=0;t<a.length;t++){var u=a[t],l=i,n=e,r=n;i:for(;r!==null;){switch(r.tag){case 27:if(ga(r.type)){Di=r.stateNode,ee=!1;break i}break;case 5:Di=r.stateNode,ee=!1;break i;case 3:case 4:Di=r.stateNode.containerInfo,ee=!0;break i}r=r.return}if(Di===null)throw Error(s(160));ed(l,n,u),Di=null,ee=!1,l=u.alternate,l!==null&&(l.return=null),u.return=null}if(e.subtreeFlags&13878)for(e=e.child;e!==null;)td(e,i),e=e.sibling}var ye=null;function td(i,e){var a=i.alternate,t=i.flags;switch(i.tag){case 0:case 11:case 14:case 15:oe(e,i),ce(i),t&4&&(na(3,i,i.return),tu(3,i),na(5,i,i.return));break;case 1:oe(e,i),ce(i),t&512&&(Oi||a===null||Re(a,a.return)),t&64&&qe&&(i=i.updateQueue,i!==null&&(t=i.callbacks,t!==null&&(a=i.shared.hiddenCallbacks,i.shared.hiddenCallbacks=a===null?t:a.concat(t))));break;case 26:var u=ye;if(oe(e,i),ce(i),t&512&&(Oi||a===null||Re(a,a.return)),t&4){var l=a!==null?a.memoizedState:null;if(t=i.memoizedState,a===null)if(t===null)if(i.stateNode===null){i:{t=i.type,a=i.memoizedProps,u=u.ownerDocument||u;e:switch(t){case"title":l=u.getElementsByTagName("title")[0],(!l||l[Pt]||l[Xi]||l.namespaceURI==="http://www.w3.org/2000/svg"||l.hasAttribute("itemprop"))&&(l=u.createElement(t),u.head.insertBefore(l,u.querySelector("head > title"))),Yi(l,t,a),l[Xi]=i,ji(l),t=l;break i;case"link":var n=kd("link","href",u).get(t+(a.href||""));if(n){for(var r=0;r<n.length;r++)if(l=n[r],l.getAttribute("href")===(a.href==null||a.href===""?null:a.href)&&l.getAttribute("rel")===(a.rel==null?null:a.rel)&&l.getAttribute("title")===(a.title==null?null:a.title)&&l.getAttribute("crossorigin")===(a.crossOrigin==null?null:a.crossOrigin)){n.splice(r,1);break e}}l=u.createElement(t),Yi(l,t,a),u.head.appendChild(l);break;case"meta":if(n=kd("meta","content",u).get(t+(a.content||""))){for(r=0;r<n.length;r++)if(l=n[r],l.getAttribute("content")===(a.content==null?null:""+a.content)&&l.getAttribute("name")===(a.name==null?null:a.name)&&l.getAttribute("property")===(a.property==null?null:a.property)&&l.getAttribute("http-equiv")===(a.httpEquiv==null?null:a.httpEquiv)&&l.getAttribute("charset")===(a.charSet==null?null:a.charSet)){n.splice(r,1);break e}}l=u.createElement(t),Yi(l,t,a),u.head.appendChild(l);break;default:throw Error(s(468,t))}l[Xi]=i,ji(l),t=l}i.stateNode=t}else $d(u,i.type,i.stateNode);else i.stateNode=wd(u,t,i.memoizedProps);else l!==t?(l===null?a.stateNode!==null&&(a=a.stateNode,a.parentNode.removeChild(a)):l.count--,t===null?$d(u,i.type,i.stateNode):wd(u,t,i.memoizedProps)):t===null&&i.stateNode!==null&&hr(i,i.memoizedProps,a.memoizedProps)}break;case 27:oe(e,i),ce(i),t&512&&(Oi||a===null||Re(a,a.return)),a!==null&&t&4&&hr(i,i.memoizedProps,a.memoizedProps);break;case 5:if(oe(e,i),ce(i),t&512&&(Oi||a===null||Re(a,a.return)),i.flags&32){u=i.stateNode;try{Qa(u,"")}catch(v){Mi(i,i.return,v)}}t&4&&i.stateNode!=null&&(u=i.memoizedProps,hr(i,u,a!==null?a.memoizedProps:u)),t&1024&&(Mr=!0);break;case 6:if(oe(e,i),ce(i),t&4){if(i.stateNode===null)throw Error(s(162));t=i.memoizedProps,a=i.stateNode;try{a.nodeValue=t}catch(v){Mi(i,i.return,v)}}break;case 3:if(Ol=null,u=ye,ye=Gl(e.containerInfo),oe(e,i),ye=u,ce(i),t&4&&a!==null&&a.memoizedState.isDehydrated)try{Mu(e.containerInfo)}catch(v){Mi(i,i.return,v)}Mr&&(Mr=!1,ud(i));break;case 4:t=ye,ye=Gl(i.stateNode.containerInfo),oe(e,i),ce(i),ye=t;break;case 12:oe(e,i),ce(i);break;case 13:oe(e,i),ce(i),i.child.flags&8192&&i.memoizedState!==null!=(a!==null&&a.memoizedState!==null)&&(Pr=De()),t&4&&(t=i.updateQueue,t!==null&&(i.updateQueue=null,pr(i,t)));break;case 22:u=i.memoizedState!==null;var c=a!==null&&a.memoizedState!==null,S=qe,M=Oi;if(qe=S||u,Oi=M||c,oe(e,i),Oi=M,qe=S,ce(i),t&8192)i:for(e=i.stateNode,e._visibility=u?e._visibility&-2:e._visibility|1,u&&(a===null||c||qe||Oi||La(i)),a=null,e=i;;){if(e.tag===5||e.tag===26){if(a===null){c=a=e;try{if(l=c.stateNode,u)n=l.style,typeof n.setProperty=="function"?n.setProperty("display","none","important"):n.display="none";else{r=c.stateNode;var y=c.memoizedProps.style,C=y!=null&&y.hasOwnProperty("display")?y.display:null;r.style.display=C==null||typeof C=="boolean"?"":(""+C).trim()}}catch(v){Mi(c,c.return,v)}}}else if(e.tag===6){if(a===null){c=e;try{c.stateNode.nodeValue=u?"":c.memoizedProps}catch(v){Mi(c,c.return,v)}}}else if((e.tag!==22&&e.tag!==23||e.memoizedState===null||e===i)&&e.child!==null){e.child.return=e,e=e.child;continue}if(e===i)break i;for(;e.sibling===null;){if(e.return===null||e.return===i)break i;a===e&&(a=null),e=e.return}a===e&&(a=null),e.sibling.return=e.return,e=e.sibling}t&4&&(t=i.updateQueue,t!==null&&(a=t.retryQueue,a!==null&&(t.retryQueue=null,pr(i,a))));break;case 19:oe(e,i),ce(i),t&4&&(t=i.updateQueue,t!==null&&(i.updateQueue=null,pr(i,t)));break;case 30:break;case 21:break;default:oe(e,i),ce(i)}}function ce(i){var e=i.flags;if(e&2){try{for(var a,t=i.return;t!==null;){if(ws(t)){a=t;break}t=t.return}if(a==null)throw Error(s(160));switch(a.tag){case 27:var u=a.stateNode,l=Br(i);vl(i,l,u);break;case 5:var n=a.stateNode;a.flags&32&&(Qa(n,""),a.flags&=-33);var r=Br(i);vl(i,r,n);break;case 3:case 4:var c=a.stateNode.containerInfo,S=Br(i);br(i,S,c);break;default:throw Error(s(161))}}catch(M){Mi(i,i.return,M)}i.flags&=-3}e&4096&&(i.flags&=-4097)}function ud(i){if(i.subtreeFlags&1024)for(i=i.child;i!==null;){var e=i;ud(e),e.tag===5&&e.flags&1024&&e.stateNode.reset(),i=i.sibling}}function ra(i,e){if(e.subtreeFlags&8772)for(e=e.child;e!==null;)Ws(i,e.alternate,e),e=e.sibling}function La(i){for(i=i.child;i!==null;){var e=i;switch(e.tag){case 0:case 11:case 14:case 15:na(4,e,e.return),La(e);break;case 1:Re(e,e.return);var a=e.stateNode;typeof a.componentWillUnmount=="function"&&Ks(e,e.return,a),La(e);break;case 27:mu(e.stateNode);case 26:case 5:Re(e,e.return),La(e);break;case 22:e.memoizedState===null&&La(e);break;case 30:La(e);break;default:La(e)}i=i.sibling}}function oa(i,e,a){for(a=a&&(e.subtreeFlags&8772)!==0,e=e.child;e!==null;){var t=e.alternate,u=i,l=e,n=l.flags;switch(l.tag){case 0:case 11:case 15:oa(u,l,a),tu(4,l);break;case 1:if(oa(u,l,a),t=l,u=t.stateNode,typeof u.componentDidMount=="function")try{u.componentDidMount()}catch(S){Mi(t,t.return,S)}if(t=l,u=t.updateQueue,u!==null){var r=t.stateNode;try{var c=u.shared.hiddenCallbacks;if(c!==null)for(u.shared.hiddenCallbacks=null,u=0;u<c.length;u++)Nc(c[u],r)}catch(S){Mi(t,t.return,S)}}a&&n&64&&Qs(l),uu(l,l.return);break;case 27:ks(l);case 26:case 5:oa(u,l,a),a&&t===null&&n&4&&Is(l),uu(l,l.return);break;case 12:oa(u,l,a);break;case 13:oa(u,l,a),a&&n&4&&ad(u,l);break;case 22:l.memoizedState===null&&oa(u,l,a),uu(l,l.return);break;case 30:break;default:oa(u,l,a)}e=e.sibling}}function Vr(i,e){var a=null;i!==null&&i.memoizedState!==null&&i.memoizedState.cachePool!==null&&(a=i.memoizedState.cachePool.pool),i=null,e.memoizedState!==null&&e.memoizedState.cachePool!==null&&(i=e.memoizedState.cachePool.pool),i!==a&&(i!=null&&i.refCount++,a!=null&&Zt(a))}function yr(i,e){i=null,e.alternate!==null&&(i=e.alternate.memoizedState.cache),e=e.memoizedState.cache,e!==i&&(e.refCount++,i!=null&&Zt(i))}function Ge(i,e,a,t){if(e.subtreeFlags&10256)for(e=e.child;e!==null;)ld(i,e,a,t),e=e.sibling}function ld(i,e,a,t){var u=e.flags;switch(e.tag){case 0:case 11:case 15:Ge(i,e,a,t),u&2048&&tu(9,e);break;case 1:Ge(i,e,a,t);break;case 3:Ge(i,e,a,t),u&2048&&(i=null,e.alternate!==null&&(i=e.alternate.memoizedState.cache),e=e.memoizedState.cache,e!==i&&(e.refCount++,i!=null&&Zt(i)));break;case 12:if(u&2048){Ge(i,e,a,t),i=e.stateNode;try{var l=e.memoizedProps,n=l.id,r=l.onPostCommit;typeof r=="function"&&r(n,e.alternate===null?"mount":"update",i.passiveEffectDuration,-0)}catch(c){Mi(e,e.return,c)}}else Ge(i,e,a,t);break;case 13:Ge(i,e,a,t);break;case 23:break;case 22:l=e.stateNode,n=e.alternate,e.memoizedState!==null?l._visibility&2?Ge(i,e,a,t):lu(i,e):l._visibility&2?Ge(i,e,a,t):(l._visibility|=2,ft(i,e,a,t,(e.subtreeFlags&10256)!==0)),u&2048&&Vr(n,e);break;case 24:Ge(i,e,a,t),u&2048&&yr(e.alternate,e);break;default:Ge(i,e,a,t)}}function ft(i,e,a,t,u){for(u=u&&(e.subtreeFlags&10256)!==0,e=e.child;e!==null;){var l=i,n=e,r=a,c=t,S=n.flags;switch(n.tag){case 0:case 11:case 15:ft(l,n,r,c,u),tu(8,n);break;case 23:break;case 22:var M=n.stateNode;n.memoizedState!==null?M._visibility&2?ft(l,n,r,c,u):lu(l,n):(M._visibility|=2,ft(l,n,r,c,u)),u&&S&2048&&Vr(n.alternate,n);break;case 24:ft(l,n,r,c,u),u&&S&2048&&yr(n.alternate,n);break;default:ft(l,n,r,c,u)}e=e.sibling}}function lu(i,e){if(e.subtreeFlags&10256)for(e=e.child;e!==null;){var a=i,t=e,u=t.flags;switch(t.tag){case 22:lu(a,t),u&2048&&Vr(t.alternate,t);break;case 24:lu(a,t),u&2048&&yr(t.alternate,t);break;default:lu(a,t)}e=e.sibling}}var nu=8192;function mt(i){if(i.subtreeFlags&nu)for(i=i.child;i!==null;)nd(i),i=i.sibling}function nd(i){switch(i.tag){case 26:mt(i),i.flags&nu&&i.memoizedState!==null&&qg(ye,i.memoizedState,i.memoizedProps);break;case 5:mt(i);break;case 3:case 4:var e=ye;ye=Gl(i.stateNode.containerInfo),mt(i),ye=e;break;case 22:i.memoizedState===null&&(e=i.alternate,e!==null&&e.memoizedState!==null?(e=nu,nu=16777216,mt(i),nu=e):mt(i));break;default:mt(i)}}function rd(i){var e=i.alternate;if(e!==null&&(i=e.child,i!==null)){e.child=null;do e=i.sibling,i.sibling=null,i=e;while(i!==null)}}function ru(i){var e=i.deletions;if((i.flags&16)!==0){if(e!==null)for(var a=0;a<e.length;a++){var t=e[a];Ji=t,cd(t,i)}rd(i)}if(i.subtreeFlags&10256)for(i=i.child;i!==null;)od(i),i=i.sibling}function od(i){switch(i.tag){case 0:case 11:case 15:ru(i),i.flags&2048&&na(9,i,i.return);break;case 3:ru(i);break;case 12:ru(i);break;case 22:var e=i.stateNode;i.memoizedState!==null&&e._visibility&2&&(i.return===null||i.return.tag!==13)?(e._visibility&=-3,hl(i)):ru(i);break;default:ru(i)}}function hl(i){var e=i.deletions;if((i.flags&16)!==0){if(e!==null)for(var a=0;a<e.length;a++){var t=e[a];Ji=t,cd(t,i)}rd(i)}for(i=i.child;i!==null;){switch(e=i,e.tag){case 0:case 11:case 15:na(8,e,e.return),hl(e);break;case 22:a=e.stateNode,a._visibility&2&&(a._visibility&=-3,hl(e));break;default:hl(e)}i=i.sibling}}function cd(i,e){for(;Ji!==null;){var a=Ji;switch(a.tag){case 0:case 11:case 15:na(8,a,e);break;case 23:case 22:if(a.memoizedState!==null&&a.memoizedState.cachePool!==null){var t=a.memoizedState.cachePool.pool;t!=null&&t.refCount++}break;case 24:Zt(a.memoizedState.cache)}if(t=a.child,t!==null)t.return=a,Ji=t;else i:for(a=i;Ji!==null;){t=Ji;var u=t.sibling,l=t.return;if(id(t),t===a){Ji=null;break i}if(u!==null){u.return=l,Ji=u;break i}Ji=l}}}var ng={getCacheForType:function(i){var e=Qi(Ei),a=e.data.get(i);return a===void 0&&(a=i(),e.data.set(i,a)),a}},rg=typeof WeakMap=="function"?WeakMap:Map,gi=0,pi=null,ni=null,oi=0,Si=0,se=null,ca=!1,gt=!1,Tr=!1,Xe=0,Gi=0,sa=0,Ha=0,Dr=0,Me=0,St=0,ou=null,ae=null,zr=!1,Pr=0,Bl=1/0,bl=null,da=null,qi=0,fa=null,Ct=null,vt=0,Rr=0,Gr=null,sd=null,cu=0,Ar=null;function de(){if((gi&2)!==0&&oi!==0)return oi&-oi;if(b.T!==null){var i=ut;return i!==0?i:Ur()}return Do()}function dd(){Me===0&&(Me=(oi&536870912)===0||fi?po():536870912);var i=be.current;return i!==null&&(i.flags|=32),Me}function fe(i,e,a){(i===pi&&(Si===2||Si===9)||i.cancelPendingCommit!==null)&&(ht(i,0),ma(i,oi,Me,!1)),zt(i,a),((gi&2)===0||i!==pi)&&(i===pi&&((gi&2)===0&&(Ha|=a),Gi===4&&ma(i,oi,Me,!1)),Ae(i))}function fd(i,e,a){if((gi&6)!==0)throw Error(s(327));var t=!a&&(e&124)===0&&(e&i.expiredLanes)===0||Dt(i,e),u=t?sg(i,e):_r(i,e,!0),l=t;do{if(u===0){gt&&!t&&ma(i,e,0,!1);break}else{if(a=i.current.alternate,l&&!og(a)){u=_r(i,e,!1),l=!1;continue}if(u===2){if(l=e,i.errorRecoveryDisabledLanes&l)var n=0;else n=i.pendingLanes&-536870913,n=n!==0?n:n&536870912?536870912:0;if(n!==0){e=n;i:{var r=i;u=ou;var c=r.current.memoizedState.isDehydrated;if(c&&(ht(r,n).flags|=256),n=_r(r,n,!1),n!==2){if(Tr&&!c){r.errorRecoveryDisabledLanes|=l,Ha|=l,u=4;break i}l=ae,ae=u,l!==null&&(ae===null?ae=l:ae.push.apply(ae,l))}u=n}if(l=!1,u!==2)continue}}if(u===1){ht(i,0),ma(i,e,0,!0);break}i:{switch(t=i,l=u,l){case 0:case 1:throw Error(s(345));case 4:if((e&4194048)!==e)break;case 6:ma(t,e,Me,!ca);break i;case 2:ae=null;break;case 3:case 5:break;default:throw Error(s(329))}if((e&62914560)===e&&(u=Pr+300-De(),10<u)){if(ma(t,e,Me,!ca),Au(t,0,!0)!==0)break i;t.timeoutHandle=Jd(md.bind(null,t,a,ae,bl,zr,e,Me,Ha,St,ca,l,2,-0,0),u);break i}md(t,a,ae,bl,zr,e,Me,Ha,St,ca,l,0,-0,0)}}break}while(!0);Ae(i)}function md(i,e,a,t,u,l,n,r,c,S,M,y,C,v){if(i.timeoutHandle=-1,y=e.subtreeFlags,(y&8192||(y&16785408)===16785408)&&(Cu={stylesheets:null,count:0,unsuspend:Zg},nd(e),y=Yg(),y!==null)){i.cancelPendingCommit=y(bd.bind(null,i,e,l,a,t,u,n,r,c,M,1,C,v)),ma(i,l,n,!S);return}bd(i,e,l,a,t,u,n,r,c)}function og(i){for(var e=i;;){var a=e.tag;if((a===0||a===11||a===15)&&e.flags&16384&&(a=e.updateQueue,a!==null&&(a=a.stores,a!==null)))for(var t=0;t<a.length;t++){var u=a[t],l=u.getSnapshot;u=u.value;try{if(!ne(l(),u))return!1}catch{return!1}}if(a=e.child,e.subtreeFlags&16384&&a!==null)a.return=e,e=a;else{if(e===i)break;for(;e.sibling===null;){if(e.return===null||e.return===i)return!0;e=e.return}e.sibling.return=e.return,e=e.sibling}}return!0}function ma(i,e,a,t){e&=~Dr,e&=~Ha,i.suspendedLanes|=e,i.pingedLanes&=~e,t&&(i.warmLanes|=e),t=i.expirationTimes;for(var u=e;0<u;){var l=31-le(u),n=1<<l;t[l]=-1,u&=~n}a!==0&&yo(i,a,e)}function Ml(){return(gi&6)===0?(su(0),!1):!0}function Or(){if(ni!==null){if(Si===0)var i=ni.return;else i=ni,Ue=Ga=null,In(i),st=null,iu=0,i=ni;for(;i!==null;)Xs(i.alternate,i),i=i.return;ni=null}}function ht(i,e){var a=i.timeoutHandle;a!==-1&&(i.timeoutHandle=-1,Dg(a)),a=i.cancelPendingCommit,a!==null&&(i.cancelPendingCommit=null,a()),Or(),pi=i,ni=a=Le(i.current,null),oi=e,Si=0,se=null,ca=!1,gt=Dt(i,e),Tr=!1,St=Me=Dr=Ha=sa=Gi=0,ae=ou=null,zr=!1,(e&8)!==0&&(e|=e&32);var t=i.entangledLanes;if(t!==0)for(i=i.entanglements,t&=e;0<t;){var u=31-le(t),l=1<<u;e|=i[u],t&=~l}return Xe=e,Zu(),a}function gd(i,e){ui=null,b.H=ol,e===Yt||e===$u?(e=Ac(),Si=3):e===Pc?(e=Ac(),Si=4):Si=e===Os?8:e!==null&&typeof e=="object"&&typeof e.then=="function"?6:1,se=e,ni===null&&(Gi=1,ml(i,Ce(e,i.current)))}function Sd(){var i=b.H;return b.H=ol,i===null?ol:i}function Cd(){var i=b.A;return b.A=ng,i}function Nr(){Gi=4,ca||(oi&4194048)!==oi&&be.current!==null||(gt=!0),(sa&134217727)===0&&(Ha&134217727)===0||pi===null||ma(pi,oi,Me,!1)}function _r(i,e,a){var t=gi;gi|=2;var u=Sd(),l=Cd();(pi!==i||oi!==e)&&(bl=null,ht(i,e)),e=!1;var n=Gi;i:do try{if(Si!==0&&ni!==null){var r=ni,c=se;switch(Si){case 8:Or(),n=6;break i;case 3:case 2:case 9:case 6:be.current===null&&(e=!0);var S=Si;if(Si=0,se=null,Bt(i,r,c,S),a&&gt){n=0;break i}break;default:S=Si,Si=0,se=null,Bt(i,r,c,S)}}cg(),n=Gi;break}catch(M){gd(i,M)}while(!0);return e&&i.shellSuspendCounter++,Ue=Ga=null,gi=t,b.H=u,b.A=l,ni===null&&(pi=null,oi=0,Zu()),n}function cg(){for(;ni!==null;)vd(ni)}function sg(i,e){var a=gi;gi|=2;var t=Sd(),u=Cd();pi!==i||oi!==e?(bl=null,Bl=De()+500,ht(i,e)):gt=Dt(i,e);i:do try{if(Si!==0&&ni!==null){e=ni;var l=se;e:switch(Si){case 1:Si=0,se=null,Bt(i,e,l,1);break;case 2:case 9:if(Rc(l)){Si=0,se=null,hd(e);break}e=function(){Si!==2&&Si!==9||pi!==i||(Si=7),Ae(i)},l.then(e,e);break i;case 3:Si=7;break i;case 4:Si=5;break i;case 7:Rc(l)?(Si=0,se=null,hd(e)):(Si=0,se=null,Bt(i,e,l,7));break;case 5:var n=null;switch(ni.tag){case 26:n=ni.memoizedState;case 5:case 27:var r=ni;if(!n||Wd(n)){Si=0,se=null;var c=r.sibling;if(c!==null)ni=c;else{var S=r.return;S!==null?(ni=S,pl(S)):ni=null}break e}}Si=0,se=null,Bt(i,e,l,5);break;case 6:Si=0,se=null,Bt(i,e,l,6);break;case 8:Or(),Gi=6;break i;default:throw Error(s(462))}}dg();break}catch(M){gd(i,M)}while(!0);return Ue=Ga=null,b.H=t,b.A=u,gi=a,ni!==null?0:(pi=null,oi=0,Zu(),Gi)}function dg(){for(;ni!==null&&!Nf();)vd(ni)}function vd(i){var e=qs(i.alternate,i,Xe);i.memoizedProps=i.pendingProps,e===null?pl(i):ni=e}function hd(i){var e=i,a=e.alternate;switch(e.tag){case 15:case 0:e=Us(a,e,e.pendingProps,e.type,void 0,oi);break;case 11:e=Us(a,e,e.pendingProps,e.type.render,e.ref,oi);break;case 5:In(e);default:Xs(a,e),e=ni=Bc(e,Xe),e=qs(a,e,Xe)}i.memoizedProps=i.pendingProps,e===null?pl(i):ni=e}function Bt(i,e,a,t){Ue=Ga=null,In(e),st=null,iu=0;var u=e.return;try{if(ig(i,u,e,a,oi)){Gi=1,ml(i,Ce(a,i.current)),ni=null;return}}catch(l){if(u!==null)throw ni=u,l;Gi=1,ml(i,Ce(a,i.current)),ni=null;return}e.flags&32768?(fi||t===1?i=!0:gt||(oi&536870912)!==0?i=!1:(ca=i=!0,(t===2||t===9||t===3||t===6)&&(t=be.current,t!==null&&t.tag===13&&(t.flags|=16384))),Bd(e,i)):pl(e)}function pl(i){var e=i;do{if((e.flags&32768)!==0){Bd(e,ca);return}i=e.return;var a=ag(e.alternate,e,Xe);if(a!==null){ni=a;return}if(e=e.sibling,e!==null){ni=e;return}ni=e=i}while(e!==null);Gi===0&&(Gi=5)}function Bd(i,e){do{var a=tg(i.alternate,i);if(a!==null){a.flags&=32767,ni=a;return}if(a=i.return,a!==null&&(a.flags|=32768,a.subtreeFlags=0,a.deletions=null),!e&&(i=i.sibling,i!==null)){ni=i;return}ni=i=a}while(i!==null);Gi=6,ni=null}function bd(i,e,a,t,u,l,n,r,c){i.cancelPendingCommit=null;do Vl();while(qi!==0);if((gi&6)!==0)throw Error(s(327));if(e!==null){if(e===i.current)throw Error(s(177));if(l=e.lanes|e.childLanes,l|=yn,Zf(i,a,l,n,r,c),i===pi&&(ni=pi=null,oi=0),Ct=e,fa=i,vt=a,Rr=l,Gr=u,sd=t,(e.subtreeFlags&10256)!==0||(e.flags&10256)!==0?(i.callbackNode=null,i.callbackPriority=0,Sg(Pu,function(){return Td(),null})):(i.callbackNode=null,i.callbackPriority=0),t=(e.flags&13878)!==0,(e.subtreeFlags&13878)!==0||t){t=b.T,b.T=null,u=_.p,_.p=2,n=gi,gi|=4;try{ug(i,e,a)}finally{gi=n,_.p=u,b.T=t}}qi=1,Md(),pd(),Vd()}}function Md(){if(qi===1){qi=0;var i=fa,e=Ct,a=(e.flags&13878)!==0;if((e.subtreeFlags&13878)!==0||a){a=b.T,b.T=null;var t=_.p;_.p=2;var u=gi;gi|=4;try{td(e,i);var l=Xr,n=cc(i.containerInfo),r=l.focusedElem,c=l.selectionRange;if(n!==r&&r&&r.ownerDocument&&oc(r.ownerDocument.documentElement,r)){if(c!==null&&Bn(r)){var S=c.start,M=c.end;if(M===void 0&&(M=S),"selectionStart"in r)r.selectionStart=S,r.selectionEnd=Math.min(M,r.value.length);else{var y=r.ownerDocument||document,C=y&&y.defaultView||window;if(C.getSelection){var v=C.getSelection(),w=r.textContent.length,Q=Math.min(c.start,w),Bi=c.end===void 0?Q:Math.min(c.end,w);!v.extend&&Q>Bi&&(n=Bi,Bi=Q,Q=n);var m=rc(r,Q),f=rc(r,Bi);if(m&&f&&(v.rangeCount!==1||v.anchorNode!==m.node||v.anchorOffset!==m.offset||v.focusNode!==f.node||v.focusOffset!==f.offset)){var g=y.createRange();g.setStart(m.node,m.offset),v.removeAllRanges(),Q>Bi?(v.addRange(g),v.extend(f.node,f.offset)):(g.setEnd(f.node,f.offset),v.addRange(g))}}}}for(y=[],v=r;v=v.parentNode;)v.nodeType===1&&y.push({element:v,left:v.scrollLeft,top:v.scrollTop});for(typeof r.focus=="function"&&r.focus(),r=0;r<y.length;r++){var p=y[r];p.element.scrollLeft=p.left,p.element.scrollTop=p.top}}Ll=!!Yr,Xr=Yr=null}finally{gi=u,_.p=t,b.T=a}}i.current=e,qi=2}}function pd(){if(qi===2){qi=0;var i=fa,e=Ct,a=(e.flags&8772)!==0;if((e.subtreeFlags&8772)!==0||a){a=b.T,b.T=null;var t=_.p;_.p=2;var u=gi;gi|=4;try{Ws(i,e.alternate,e)}finally{gi=u,_.p=t,b.T=a}}qi=3}}function Vd(){if(qi===4||qi===3){qi=0,_f();var i=fa,e=Ct,a=vt,t=sd;(e.subtreeFlags&10256)!==0||(e.flags&10256)!==0?qi=5:(qi=0,Ct=fa=null,yd(i,i.pendingLanes));var u=i.pendingLanes;if(u===0&&(da=null),kl(a),e=e.stateNode,ue&&typeof ue.onCommitFiberRoot=="function")try{ue.onCommitFiberRoot(Tt,e,void 0,(e.current.flags&128)===128)}catch{}if(t!==null){e=b.T,u=_.p,_.p=2,b.T=null;try{for(var l=i.onRecoverableError,n=0;n<t.length;n++){var r=t[n];l(r.value,{componentStack:r.stack})}}finally{b.T=e,_.p=u}}(vt&3)!==0&&Vl(),Ae(i),u=i.pendingLanes,(a&4194090)!==0&&(u&42)!==0?i===Ar?cu++:(cu=0,Ar=i):cu=0,su(0)}}function yd(i,e){(i.pooledCacheLanes&=e)===0&&(e=i.pooledCache,e!=null&&(i.pooledCache=null,Zt(e)))}function Vl(i){return Md(),pd(),Vd(),Td()}function Td(){if(qi!==5)return!1;var i=fa,e=Rr;Rr=0;var a=kl(vt),t=b.T,u=_.p;try{_.p=32>a?32:a,b.T=null,a=Gr,Gr=null;var l=fa,n=vt;if(qi=0,Ct=fa=null,vt=0,(gi&6)!==0)throw Error(s(331));var r=gi;if(gi|=4,od(l.current),ld(l,l.current,n,a),gi=r,su(0,!1),ue&&typeof ue.onPostCommitFiberRoot=="function")try{ue.onPostCommitFiberRoot(Tt,l)}catch{}return!0}finally{_.p=u,b.T=t,yd(i,e)}}function Dd(i,e,a){e=Ce(a,e),e=cr(i.stateNode,e,2),i=aa(i,e,2),i!==null&&(zt(i,2),Ae(i))}function Mi(i,e,a){if(i.tag===3)Dd(i,i,a);else for(;e!==null;){if(e.tag===3){Dd(e,i,a);break}else if(e.tag===1){var t=e.stateNode;if(typeof e.type.getDerivedStateFromError=="function"||typeof t.componentDidCatch=="function"&&(da===null||!da.has(t))){i=Ce(a,i),a=Gs(2),t=aa(e,a,2),t!==null&&(As(a,t,e,i),zt(t,2),Ae(t));break}}e=e.return}}function Lr(i,e,a){var t=i.pingCache;if(t===null){t=i.pingCache=new rg;var u=new Set;t.set(e,u)}else u=t.get(e),u===void 0&&(u=new Set,t.set(e,u));u.has(a)||(Tr=!0,u.add(a),i=fg.bind(null,i,e,a),e.then(i,i))}function fg(i,e,a){var t=i.pingCache;t!==null&&t.delete(e),i.pingedLanes|=i.suspendedLanes&a,i.warmLanes&=~a,pi===i&&(oi&a)===a&&(Gi===4||Gi===3&&(oi&62914560)===oi&&300>De()-Pr?(gi&2)===0&&ht(i,0):Dr|=a,St===oi&&(St=0)),Ae(i)}function zd(i,e){e===0&&(e=Vo()),i=it(i,e),i!==null&&(zt(i,e),Ae(i))}function mg(i){var e=i.memoizedState,a=0;e!==null&&(a=e.retryLane),zd(i,a)}function gg(i,e){var a=0;switch(i.tag){case 13:var t=i.stateNode,u=i.memoizedState;u!==null&&(a=u.retryLane);break;case 19:t=i.stateNode;break;case 22:t=i.stateNode._retryCache;break;default:throw Error(s(314))}t!==null&&t.delete(e),zd(i,a)}function Sg(i,e){return Ql(i,e)}var yl=null,bt=null,Hr=!1,Tl=!1,Er=!1,Ea=0;function Ae(i){i!==bt&&i.next===null&&(bt===null?yl=bt=i:bt=bt.next=i),Tl=!0,Hr||(Hr=!0,vg())}function su(i,e){if(!Er&&Tl){Er=!0;do for(var a=!1,t=yl;t!==null;){if(i!==0){var u=t.pendingLanes;if(u===0)var l=0;else{var n=t.suspendedLanes,r=t.pingedLanes;l=(1<<31-le(42|i)+1)-1,l&=u&~(n&~r),l=l&201326741?l&201326741|1:l?l|2:0}l!==0&&(a=!0,Ad(t,l))}else l=oi,l=Au(t,t===pi?l:0,t.cancelPendingCommit!==null||t.timeoutHandle!==-1),(l&3)===0||Dt(t,l)||(a=!0,Ad(t,l));t=t.next}while(a);Er=!1}}function Cg(){Pd()}function Pd(){Tl=Hr=!1;var i=0;Ea!==0&&(Tg()&&(i=Ea),Ea=0);for(var e=De(),a=null,t=yl;t!==null;){var u=t.next,l=Rd(t,e);l===0?(t.next=null,a===null?yl=u:a.next=u,u===null&&(bt=a)):(a=t,(i!==0||(l&3)!==0)&&(Tl=!0)),t=u}su(i)}function Rd(i,e){for(var a=i.suspendedLanes,t=i.pingedLanes,u=i.expirationTimes,l=i.pendingLanes&-62914561;0<l;){var n=31-le(l),r=1<<n,c=u[n];c===-1?((r&a)===0||(r&t)!==0)&&(u[n]=Ff(r,e)):c<=e&&(i.expiredLanes|=r),l&=~r}if(e=pi,a=oi,a=Au(i,i===e?a:0,i.cancelPendingCommit!==null||i.timeoutHandle!==-1),t=i.callbackNode,a===0||i===e&&(Si===2||Si===9)||i.cancelPendingCommit!==null)return t!==null&&t!==null&&Kl(t),i.callbackNode=null,i.callbackPriority=0;if((a&3)===0||Dt(i,a)){if(e=a&-a,e===i.callbackPriority)return e;switch(t!==null&&Kl(t),kl(a)){case 2:case 8:a=bo;break;case 32:a=Pu;break;case 268435456:a=Mo;break;default:a=Pu}return t=Gd.bind(null,i),a=Ql(a,t),i.callbackPriority=e,i.callbackNode=a,e}return t!==null&&t!==null&&Kl(t),i.callbackPriority=2,i.callbackNode=null,2}function Gd(i,e){if(qi!==0&&qi!==5)return i.callbackNode=null,i.callbackPriority=0,null;var a=i.callbackNode;if(Vl()&&i.callbackNode!==a)return null;var t=oi;return t=Au(i,i===pi?t:0,i.cancelPendingCommit!==null||i.timeoutHandle!==-1),t===0?null:(fd(i,t,e),Rd(i,De()),i.callbackNode!=null&&i.callbackNode===a?Gd.bind(null,i):null)}function Ad(i,e){if(Vl())return null;fd(i,e,!0)}function vg(){zg(function(){(gi&6)!==0?Ql(Bo,Cg):Pd()})}function Ur(){return Ea===0&&(Ea=po()),Ea}function Od(i){return i==null||typeof i=="symbol"||typeof i=="boolean"?null:typeof i=="function"?i:Hu(""+i)}function Nd(i,e){var a=e.ownerDocument.createElement("input");return a.name=e.name,a.value=e.value,i.id&&a.setAttribute("form",i.id),e.parentNode.insertBefore(a,e),i=new FormData(i),a.parentNode.removeChild(a),i}function hg(i,e,a,t,u){if(e==="submit"&&a&&a.stateNode===u){var l=Od((u[$i]||null).action),n=t.submitter;n&&(e=(e=n[$i]||null)?Od(e.formAction):n.getAttribute("formAction"),e!==null&&(l=e,n=null));var r=new xu("action","action",null,t,u);i.push({event:r,listeners:[{instance:null,listener:function(){if(t.defaultPrevented){if(Ea!==0){var c=n?Nd(u,n):new FormData(u);ur(a,{pending:!0,data:c,method:u.method,action:l},null,c)}}else typeof l=="function"&&(r.preventDefault(),c=n?Nd(u,n):new FormData(u),ur(a,{pending:!0,data:c,method:u.method,action:l},l,c))},currentTarget:u}]})}}for(var jr=0;jr<Vn.length;jr++){var xr=Vn[jr],Bg=xr.toLowerCase(),bg=xr[0].toUpperCase()+xr.slice(1);Ve(Bg,"on"+bg)}Ve(fc,"onAnimationEnd"),Ve(mc,"onAnimationIteration"),Ve(gc,"onAnimationStart"),Ve("dblclick","onDoubleClick"),Ve("focusin","onFocus"),Ve("focusout","onBlur"),Ve(Em,"onTransitionRun"),Ve(Um,"onTransitionStart"),Ve(jm,"onTransitionCancel"),Ve(Sc,"onTransitionEnd"),qa("onMouseEnter",["mouseout","mouseover"]),qa("onMouseLeave",["mouseout","mouseover"]),qa("onPointerEnter",["pointerout","pointerover"]),qa("onPointerLeave",["pointerout","pointerover"]),Ma("onChange","change click focusin focusout input keydown keyup selectionchange".split(" ")),Ma("onSelect","focusout contextmenu dragend focusin keydown keyup mousedown mouseup selectionchange".split(" ")),Ma("onBeforeInput",["compositionend","keypress","textInput","paste"]),Ma("onCompositionEnd","compositionend focusout keydown keypress keyup mousedown".split(" ")),Ma("onCompositionStart","compositionstart focusout keydown keypress keyup mousedown".split(" ")),Ma("onCompositionUpdate","compositionupdate focusout keydown keypress keyup mousedown".split(" "));var du="abort canplay canplaythrough durationchange emptied encrypted ended error loadeddata loadedmetadata loadstart pause play playing progress ratechange resize seeked seeking stalled suspend timeupdate volumechange waiting".split(" "),Mg=new Set("beforetoggle cancel close invalid load scroll scrollend toggle".split(" ").concat(du));function _d(i,e){e=(e&4)!==0;for(var a=0;a<i.length;a++){var t=i[a],u=t.event;t=t.listeners;i:{var l=void 0;if(e)for(var n=t.length-1;0<=n;n--){var r=t[n],c=r.instance,S=r.currentTarget;if(r=r.listener,c!==l&&u.isPropagationStopped())break i;l=r,u.currentTarget=S;try{l(u)}catch(M){fl(M)}u.currentTarget=null,l=c}else for(n=0;n<t.length;n++){if(r=t[n],c=r.instance,S=r.currentTarget,r=r.listener,c!==l&&u.isPropagationStopped())break i;l=r,u.currentTarget=S;try{l(u)}catch(M){fl(M)}u.currentTarget=null,l=c}}}}function ri(i,e){var a=e[$l];a===void 0&&(a=e[$l]=new Set);var t=i+"__bubble";a.has(t)||(Ld(e,i,2,!1),a.add(t))}function Jr(i,e,a){var t=0;e&&(t|=4),Ld(a,i,t,e)}var Dl="_reactListening"+Math.random().toString(36).slice(2);function Fr(i){if(!i[Dl]){i[Dl]=!0,Po.forEach(function(a){a!=="selectionchange"&&(Mg.has(a)||Jr(a,!1,i),Jr(a,!0,i))});var e=i.nodeType===9?i:i.ownerDocument;e===null||e[Dl]||(e[Dl]=!0,Jr("selectionchange",!1,e))}}function Ld(i,e,a,t){switch(nf(e)){case 2:var u=Kg;break;case 8:u=Ig;break;default:u=ao}a=u.bind(null,e,a,i),u=void 0,!sn||e!=="touchstart"&&e!=="touchmove"&&e!=="wheel"||(u=!0),t?u!==void 0?i.addEventListener(e,a,{capture:!0,passive:u}):i.addEventListener(e,a,!0):u!==void 0?i.addEventListener(e,a,{passive:u}):i.addEventListener(e,a,!1)}function Zr(i,e,a,t,u){var l=t;if((e&1)===0&&(e&2)===0&&t!==null)i:for(;;){if(t===null)return;var n=t.tag;if(n===3||n===4){var r=t.stateNode.containerInfo;if(r===u)break;if(n===4)for(n=t.return;n!==null;){var c=n.tag;if((c===3||c===4)&&n.stateNode.containerInfo===u)return;n=n.return}for(;r!==null;){if(n=Ja(r),n===null)return;if(c=n.tag,c===5||c===6||c===26||c===27){t=l=n;continue i}r=r.parentNode}}t=t.return}Fo(function(){var S=l,M=on(a),y=[];i:{var C=Cc.get(i);if(C!==void 0){var v=xu,w=i;switch(i){case"keypress":if(Uu(a)===0)break i;case"keydown":case"keyup":v=Sm;break;case"focusin":w="focus",v=gn;break;case"focusout":w="blur",v=gn;break;case"beforeblur":case"afterblur":v=gn;break;case"click":if(a.button===2)break i;case"auxclick":case"dblclick":case"mousedown":case"mousemove":case"mouseup":case"mouseout":case"mouseover":case"contextmenu":v=Yo;break;case"drag":case"dragend":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"dragstart":case"drop":v=tm;break;case"touchcancel":case"touchend":case"touchmove":case"touchstart":v=hm;break;case fc:case mc:case gc:v=nm;break;case Sc:v=bm;break;case"scroll":case"scrollend":v=em;break;case"wheel":v=pm;break;case"copy":case"cut":case"paste":v=om;break;case"gotpointercapture":case"lostpointercapture":case"pointercancel":case"pointerdown":case"pointermove":case"pointerout":case"pointerover":case"pointerup":v=Qo;break;case"toggle":case"beforetoggle":v=ym}var Q=(e&4)!==0,Bi=!Q&&(i==="scroll"||i==="scrollend"),m=Q?C!==null?C+"Capture":null:C;Q=[];for(var f=S,g;f!==null;){var p=f;if(g=p.stateNode,p=p.tag,p!==5&&p!==26&&p!==27||g===null||m===null||(p=Gt(f,m),p!=null&&Q.push(fu(f,p,g))),Bi)break;f=f.return}0<Q.length&&(C=new v(C,w,null,a,M),y.push({event:C,listeners:Q}))}}if((e&7)===0){i:{if(C=i==="mouseover"||i==="pointerover",v=i==="mouseout"||i==="pointerout",C&&a!==rn&&(w=a.relatedTarget||a.fromElement)&&(Ja(w)||w[xa]))break i;if((v||C)&&(C=M.window===M?M:(C=M.ownerDocument)?C.defaultView||C.parentWindow:window,v?(w=a.relatedTarget||a.toElement,v=S,w=w?Ja(w):null,w!==null&&(Bi=R(w),Q=w.tag,w!==Bi||Q!==5&&Q!==27&&Q!==6)&&(w=null)):(v=null,w=S),v!==w)){if(Q=Yo,p="onMouseLeave",m="onMouseEnter",f="mouse",(i==="pointerout"||i==="pointerover")&&(Q=Qo,p="onPointerLeave",m="onPointerEnter",f="pointer"),Bi=v==null?C:Rt(v),g=w==null?C:Rt(w),C=new Q(p,f+"leave",v,a,M),C.target=Bi,C.relatedTarget=g,p=null,Ja(M)===S&&(Q=new Q(m,f+"enter",w,a,M),Q.target=g,Q.relatedTarget=Bi,p=Q),Bi=p,v&&w)e:{for(Q=v,m=w,f=0,g=Q;g;g=Mt(g))f++;for(g=0,p=m;p;p=Mt(p))g++;for(;0<f-g;)Q=Mt(Q),f--;for(;0<g-f;)m=Mt(m),g--;for(;f--;){if(Q===m||m!==null&&Q===m.alternate)break e;Q=Mt(Q),m=Mt(m)}Q=null}else Q=null;v!==null&&Hd(y,C,v,Q,!1),w!==null&&Bi!==null&&Hd(y,Bi,w,Q,!0)}}i:{if(C=S?Rt(S):window,v=C.nodeName&&C.nodeName.toLowerCase(),v==="select"||v==="input"&&C.type==="file")var U=ec;else if(Wo(C))if(ac)U=_m;else{U=Om;var li=Am}else v=C.nodeName,!v||v.toLowerCase()!=="input"||C.type!=="checkbox"&&C.type!=="radio"?S&&nn(S.elementType)&&(U=ec):U=Nm;if(U&&(U=U(i,S))){ic(y,U,a,M);break i}li&&li(i,C,S),i==="focusout"&&S&&C.type==="number"&&S.memoizedProps.value!=null&&ln(C,"number",C.value)}switch(li=S?Rt(S):window,i){case"focusin":(Wo(li)||li.contentEditable==="true")&&(ka=li,bn=S,Ut=null);break;case"focusout":Ut=bn=ka=null;break;case"mousedown":Mn=!0;break;case"contextmenu":case"mouseup":case"dragend":Mn=!1,sc(y,a,M);break;case"selectionchange":if(Hm)break;case"keydown":case"keyup":sc(y,a,M)}var F;if(Cn)i:{switch(i){case"compositionstart":var I="onCompositionStart";break i;case"compositionend":I="onCompositionEnd";break i;case"compositionupdate":I="onCompositionUpdate";break i}I=void 0}else wa?ko(i,a)&&(I="onCompositionEnd"):i==="keydown"&&a.keyCode===229&&(I="onCompositionStart");I&&(Ko&&a.locale!=="ko"&&(wa||I!=="onCompositionStart"?I==="onCompositionEnd"&&wa&&(F=Zo()):($e=M,dn="value"in $e?$e.value:$e.textContent,wa=!0)),li=zl(S,I),0<li.length&&(I=new Xo(I,i,null,a,M),y.push({event:I,listeners:li}),F?I.data=F:(F=$o(a),F!==null&&(I.data=F)))),(F=Dm?zm(i,a):Pm(i,a))&&(I=zl(S,"onBeforeInput"),0<I.length&&(li=new Xo("onBeforeInput","beforeinput",null,a,M),y.push({event:li,listeners:I}),li.data=F)),hg(y,i,S,a,M)}_d(y,e)})}function fu(i,e,a){return{instance:i,listener:e,currentTarget:a}}function zl(i,e){for(var a=e+"Capture",t=[];i!==null;){var u=i,l=u.stateNode;if(u=u.tag,u!==5&&u!==26&&u!==27||l===null||(u=Gt(i,a),u!=null&&t.unshift(fu(i,u,l)),u=Gt(i,e),u!=null&&t.push(fu(i,u,l))),i.tag===3)return t;i=i.return}return[]}function Mt(i){if(i===null)return null;do i=i.return;while(i&&i.tag!==5&&i.tag!==27);return i||null}function Hd(i,e,a,t,u){for(var l=e._reactName,n=[];a!==null&&a!==t;){var r=a,c=r.alternate,S=r.stateNode;if(r=r.tag,c!==null&&c===t)break;r!==5&&r!==26&&r!==27||S===null||(c=S,u?(S=Gt(a,l),S!=null&&n.unshift(fu(a,S,c))):u||(S=Gt(a,l),S!=null&&n.push(fu(a,S,c)))),a=a.return}n.length!==0&&i.push({event:e,listeners:n})}var pg=/\r\n?/g,Vg=/\u0000|\uFFFD/g;function Ed(i){return(typeof i=="string"?i:""+i).replace(pg,`
`).replace(Vg,"")}function Ud(i,e){return e=Ed(e),Ed(i)===e}function Pl(){}function hi(i,e,a,t,u,l){switch(a){case"children":typeof t=="string"?e==="body"||e==="textarea"&&t===""||Qa(i,t):(typeof t=="number"||typeof t=="bigint")&&e!=="body"&&Qa(i,""+t);break;case"className":Nu(i,"class",t);break;case"tabIndex":Nu(i,"tabindex",t);break;case"dir":case"role":case"viewBox":case"width":case"height":Nu(i,a,t);break;case"style":xo(i,t,l);break;case"data":if(e!=="object"){Nu(i,"data",t);break}case"src":case"href":if(t===""&&(e!=="a"||a!=="href")){i.removeAttribute(a);break}if(t==null||typeof t=="function"||typeof t=="symbol"||typeof t=="boolean"){i.removeAttribute(a);break}t=Hu(""+t),i.setAttribute(a,t);break;case"action":case"formAction":if(typeof t=="function"){i.setAttribute(a,"javascript:throw new Error('A React form was unexpectedly submitted. If you called form.submit() manually, consider using form.requestSubmit() instead. If you\\'re trying to use event.stopPropagation() in a submit event handler, consider also calling event.preventDefault().')");break}else typeof l=="function"&&(a==="formAction"?(e!=="input"&&hi(i,e,"name",u.name,u,null),hi(i,e,"formEncType",u.formEncType,u,null),hi(i,e,"formMethod",u.formMethod,u,null),hi(i,e,"formTarget",u.formTarget,u,null)):(hi(i,e,"encType",u.encType,u,null),hi(i,e,"method",u.method,u,null),hi(i,e,"target",u.target,u,null)));if(t==null||typeof t=="symbol"||typeof t=="boolean"){i.removeAttribute(a);break}t=Hu(""+t),i.setAttribute(a,t);break;case"onClick":t!=null&&(i.onclick=Pl);break;case"onScroll":t!=null&&ri("scroll",i);break;case"onScrollEnd":t!=null&&ri("scrollend",i);break;case"dangerouslySetInnerHTML":if(t!=null){if(typeof t!="object"||!("__html"in t))throw Error(s(61));if(a=t.__html,a!=null){if(u.children!=null)throw Error(s(60));i.innerHTML=a}}break;case"multiple":i.multiple=t&&typeof t!="function"&&typeof t!="symbol";break;case"muted":i.muted=t&&typeof t!="function"&&typeof t!="symbol";break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"defaultValue":case"defaultChecked":case"innerHTML":case"ref":break;case"autoFocus":break;case"xlinkHref":if(t==null||typeof t=="function"||typeof t=="boolean"||typeof t=="symbol"){i.removeAttribute("xlink:href");break}a=Hu(""+t),i.setAttributeNS("http://www.w3.org/1999/xlink","xlink:href",a);break;case"contentEditable":case"spellCheck":case"draggable":case"value":case"autoReverse":case"externalResourcesRequired":case"focusable":case"preserveAlpha":t!=null&&typeof t!="function"&&typeof t!="symbol"?i.setAttribute(a,""+t):i.removeAttribute(a);break;case"inert":case"allowFullScreen":case"async":case"autoPlay":case"controls":case"default":case"defer":case"disabled":case"disablePictureInPicture":case"disableRemotePlayback":case"formNoValidate":case"hidden":case"loop":case"noModule":case"noValidate":case"open":case"playsInline":case"readOnly":case"required":case"reversed":case"scoped":case"seamless":case"itemScope":t&&typeof t!="function"&&typeof t!="symbol"?i.setAttribute(a,""):i.removeAttribute(a);break;case"capture":case"download":t===!0?i.setAttribute(a,""):t!==!1&&t!=null&&typeof t!="function"&&typeof t!="symbol"?i.setAttribute(a,t):i.removeAttribute(a);break;case"cols":case"rows":case"size":case"span":t!=null&&typeof t!="function"&&typeof t!="symbol"&&!isNaN(t)&&1<=t?i.setAttribute(a,t):i.removeAttribute(a);break;case"rowSpan":case"start":t==null||typeof t=="function"||typeof t=="symbol"||isNaN(t)?i.removeAttribute(a):i.setAttribute(a,t);break;case"popover":ri("beforetoggle",i),ri("toggle",i),Ou(i,"popover",t);break;case"xlinkActuate":Ne(i,"http://www.w3.org/1999/xlink","xlink:actuate",t);break;case"xlinkArcrole":Ne(i,"http://www.w3.org/1999/xlink","xlink:arcrole",t);break;case"xlinkRole":Ne(i,"http://www.w3.org/1999/xlink","xlink:role",t);break;case"xlinkShow":Ne(i,"http://www.w3.org/1999/xlink","xlink:show",t);break;case"xlinkTitle":Ne(i,"http://www.w3.org/1999/xlink","xlink:title",t);break;case"xlinkType":Ne(i,"http://www.w3.org/1999/xlink","xlink:type",t);break;case"xmlBase":Ne(i,"http://www.w3.org/XML/1998/namespace","xml:base",t);break;case"xmlLang":Ne(i,"http://www.w3.org/XML/1998/namespace","xml:lang",t);break;case"xmlSpace":Ne(i,"http://www.w3.org/XML/1998/namespace","xml:space",t);break;case"is":Ou(i,"is",t);break;case"innerText":case"textContent":break;default:(!(2<a.length)||a[0]!=="o"&&a[0]!=="O"||a[1]!=="n"&&a[1]!=="N")&&(a=Wf.get(a)||a,Ou(i,a,t))}}function qr(i,e,a,t,u,l){switch(a){case"style":xo(i,t,l);break;case"dangerouslySetInnerHTML":if(t!=null){if(typeof t!="object"||!("__html"in t))throw Error(s(61));if(a=t.__html,a!=null){if(u.children!=null)throw Error(s(60));i.innerHTML=a}}break;case"children":typeof t=="string"?Qa(i,t):(typeof t=="number"||typeof t=="bigint")&&Qa(i,""+t);break;case"onScroll":t!=null&&ri("scroll",i);break;case"onScrollEnd":t!=null&&ri("scrollend",i);break;case"onClick":t!=null&&(i.onclick=Pl);break;case"suppressContentEditableWarning":case"suppressHydrationWarning":case"innerHTML":case"ref":break;case"innerText":case"textContent":break;default:if(!Ro.hasOwnProperty(a))i:{if(a[0]==="o"&&a[1]==="n"&&(u=a.endsWith("Capture"),e=a.slice(2,u?a.length-7:void 0),l=i[$i]||null,l=l!=null?l[a]:null,typeof l=="function"&&i.removeEventListener(e,l,u),typeof t=="function")){typeof l!="function"&&l!==null&&(a in i?i[a]=null:i.hasAttribute(a)&&i.removeAttribute(a)),i.addEventListener(e,t,u);break i}a in i?i[a]=t:t===!0?i.setAttribute(a,""):Ou(i,a,t)}}}function Yi(i,e,a){switch(e){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"img":ri("error",i),ri("load",i);var t=!1,u=!1,l;for(l in a)if(a.hasOwnProperty(l)){var n=a[l];if(n!=null)switch(l){case"src":t=!0;break;case"srcSet":u=!0;break;case"children":case"dangerouslySetInnerHTML":throw Error(s(137,e));default:hi(i,e,l,n,a,null)}}u&&hi(i,e,"srcSet",a.srcSet,a,null),t&&hi(i,e,"src",a.src,a,null);return;case"input":ri("invalid",i);var r=l=n=u=null,c=null,S=null;for(t in a)if(a.hasOwnProperty(t)){var M=a[t];if(M!=null)switch(t){case"name":u=M;break;case"type":n=M;break;case"checked":c=M;break;case"defaultChecked":S=M;break;case"value":l=M;break;case"defaultValue":r=M;break;case"children":case"dangerouslySetInnerHTML":if(M!=null)throw Error(s(137,e));break;default:hi(i,e,t,M,a,null)}}Ho(i,l,r,c,S,n,u,!1),_u(i);return;case"select":ri("invalid",i),t=n=l=null;for(u in a)if(a.hasOwnProperty(u)&&(r=a[u],r!=null))switch(u){case"value":l=r;break;case"defaultValue":n=r;break;case"multiple":t=r;default:hi(i,e,u,r,a,null)}e=l,a=n,i.multiple=!!t,e!=null?Xa(i,!!t,e,!1):a!=null&&Xa(i,!!t,a,!0);return;case"textarea":ri("invalid",i),l=u=t=null;for(n in a)if(a.hasOwnProperty(n)&&(r=a[n],r!=null))switch(n){case"value":t=r;break;case"defaultValue":u=r;break;case"children":l=r;break;case"dangerouslySetInnerHTML":if(r!=null)throw Error(s(91));break;default:hi(i,e,n,r,a,null)}Uo(i,t,u,l),_u(i);return;case"option":for(c in a)if(a.hasOwnProperty(c)&&(t=a[c],t!=null))switch(c){case"selected":i.selected=t&&typeof t!="function"&&typeof t!="symbol";break;default:hi(i,e,c,t,a,null)}return;case"dialog":ri("beforetoggle",i),ri("toggle",i),ri("cancel",i),ri("close",i);break;case"iframe":case"object":ri("load",i);break;case"video":case"audio":for(t=0;t<du.length;t++)ri(du[t],i);break;case"image":ri("error",i),ri("load",i);break;case"details":ri("toggle",i);break;case"embed":case"source":case"link":ri("error",i),ri("load",i);case"area":case"base":case"br":case"col":case"hr":case"keygen":case"meta":case"param":case"track":case"wbr":case"menuitem":for(S in a)if(a.hasOwnProperty(S)&&(t=a[S],t!=null))switch(S){case"children":case"dangerouslySetInnerHTML":throw Error(s(137,e));default:hi(i,e,S,t,a,null)}return;default:if(nn(e)){for(M in a)a.hasOwnProperty(M)&&(t=a[M],t!==void 0&&qr(i,e,M,t,a,void 0));return}}for(r in a)a.hasOwnProperty(r)&&(t=a[r],t!=null&&hi(i,e,r,t,a,null))}function yg(i,e,a,t){switch(e){case"div":case"span":case"svg":case"path":case"a":case"g":case"p":case"li":break;case"input":var u=null,l=null,n=null,r=null,c=null,S=null,M=null;for(v in a){var y=a[v];if(a.hasOwnProperty(v)&&y!=null)switch(v){case"checked":break;case"value":break;case"defaultValue":c=y;default:t.hasOwnProperty(v)||hi(i,e,v,null,t,y)}}for(var C in t){var v=t[C];if(y=a[C],t.hasOwnProperty(C)&&(v!=null||y!=null))switch(C){case"type":l=v;break;case"name":u=v;break;case"checked":S=v;break;case"defaultChecked":M=v;break;case"value":n=v;break;case"defaultValue":r=v;break;case"children":case"dangerouslySetInnerHTML":if(v!=null)throw Error(s(137,e));break;default:v!==y&&hi(i,e,C,v,t,y)}}un(i,n,r,c,S,M,l,u);return;case"select":v=n=r=C=null;for(l in a)if(c=a[l],a.hasOwnProperty(l)&&c!=null)switch(l){case"value":break;case"multiple":v=c;default:t.hasOwnProperty(l)||hi(i,e,l,null,t,c)}for(u in t)if(l=t[u],c=a[u],t.hasOwnProperty(u)&&(l!=null||c!=null))switch(u){case"value":C=l;break;case"defaultValue":r=l;break;case"multiple":n=l;default:l!==c&&hi(i,e,u,l,t,c)}e=r,a=n,t=v,C!=null?Xa(i,!!a,C,!1):!!t!=!!a&&(e!=null?Xa(i,!!a,e,!0):Xa(i,!!a,a?[]:"",!1));return;case"textarea":v=C=null;for(r in a)if(u=a[r],a.hasOwnProperty(r)&&u!=null&&!t.hasOwnProperty(r))switch(r){case"value":break;case"children":break;default:hi(i,e,r,null,t,u)}for(n in t)if(u=t[n],l=a[n],t.hasOwnProperty(n)&&(u!=null||l!=null))switch(n){case"value":C=u;break;case"defaultValue":v=u;break;case"children":break;case"dangerouslySetInnerHTML":if(u!=null)throw Error(s(91));break;default:u!==l&&hi(i,e,n,u,t,l)}Eo(i,C,v);return;case"option":for(var w in a)if(C=a[w],a.hasOwnProperty(w)&&C!=null&&!t.hasOwnProperty(w))switch(w){case"selected":i.selected=!1;break;default:hi(i,e,w,null,t,C)}for(c in t)if(C=t[c],v=a[c],t.hasOwnProperty(c)&&C!==v&&(C!=null||v!=null))switch(c){case"selected":i.selected=C&&typeof C!="function"&&typeof C!="symbol";break;default:hi(i,e,c,C,t,v)}return;case"img":case"link":case"area":case"base":case"br":case"col":case"embed":case"hr":case"keygen":case"meta":case"param":case"source":case"track":case"wbr":case"menuitem":for(var Q in a)C=a[Q],a.hasOwnProperty(Q)&&C!=null&&!t.hasOwnProperty(Q)&&hi(i,e,Q,null,t,C);for(S in t)if(C=t[S],v=a[S],t.hasOwnProperty(S)&&C!==v&&(C!=null||v!=null))switch(S){case"children":case"dangerouslySetInnerHTML":if(C!=null)throw Error(s(137,e));break;default:hi(i,e,S,C,t,v)}return;default:if(nn(e)){for(var Bi in a)C=a[Bi],a.hasOwnProperty(Bi)&&C!==void 0&&!t.hasOwnProperty(Bi)&&qr(i,e,Bi,void 0,t,C);for(M in t)C=t[M],v=a[M],!t.hasOwnProperty(M)||C===v||C===void 0&&v===void 0||qr(i,e,M,C,t,v);return}}for(var m in a)C=a[m],a.hasOwnProperty(m)&&C!=null&&!t.hasOwnProperty(m)&&hi(i,e,m,null,t,C);for(y in t)C=t[y],v=a[y],!t.hasOwnProperty(y)||C===v||C==null&&v==null||hi(i,e,y,C,t,v)}var Yr=null,Xr=null;function Rl(i){return i.nodeType===9?i:i.ownerDocument}function jd(i){switch(i){case"http://www.w3.org/2000/svg":return 1;case"http://www.w3.org/1998/Math/MathML":return 2;default:return 0}}function xd(i,e){if(i===0)switch(e){case"svg":return 1;case"math":return 2;default:return 0}return i===1&&e==="foreignObject"?0:i}function Qr(i,e){return i==="textarea"||i==="noscript"||typeof e.children=="string"||typeof e.children=="number"||typeof e.children=="bigint"||typeof e.dangerouslySetInnerHTML=="object"&&e.dangerouslySetInnerHTML!==null&&e.dangerouslySetInnerHTML.__html!=null}var Kr=null;function Tg(){var i=window.event;return i&&i.type==="popstate"?i===Kr?!1:(Kr=i,!0):(Kr=null,!1)}var Jd=typeof setTimeout=="function"?setTimeout:void 0,Dg=typeof clearTimeout=="function"?clearTimeout:void 0,Fd=typeof Promise=="function"?Promise:void 0,zg=typeof queueMicrotask=="function"?queueMicrotask:typeof Fd<"u"?function(i){return Fd.resolve(null).then(i).catch(Pg)}:Jd;function Pg(i){setTimeout(function(){throw i})}function ga(i){return i==="head"}function Zd(i,e){var a=e,t=0,u=0;do{var l=a.nextSibling;if(i.removeChild(a),l&&l.nodeType===8)if(a=l.data,a==="/$"){if(0<t&&8>t){a=t;var n=i.ownerDocument;if(a&1&&mu(n.documentElement),a&2&&mu(n.body),a&4)for(a=n.head,mu(a),n=a.firstChild;n;){var r=n.nextSibling,c=n.nodeName;n[Pt]||c==="SCRIPT"||c==="STYLE"||c==="LINK"&&n.rel.toLowerCase()==="stylesheet"||a.removeChild(n),n=r}}if(u===0){i.removeChild(l),Mu(e);return}u--}else a==="$"||a==="$?"||a==="$!"?u++:t=a.charCodeAt(0)-48;else t=0;a=l}while(a);Mu(e)}function Ir(i){var e=i.firstChild;for(e&&e.nodeType===10&&(e=e.nextSibling);e;){var a=e;switch(e=e.nextSibling,a.nodeName){case"HTML":case"HEAD":case"BODY":Ir(a),Wl(a);continue;case"SCRIPT":case"STYLE":continue;case"LINK":if(a.rel.toLowerCase()==="stylesheet")continue}i.removeChild(a)}}function Rg(i,e,a,t){for(;i.nodeType===1;){var u=a;if(i.nodeName.toLowerCase()!==e.toLowerCase()){if(!t&&(i.nodeName!=="INPUT"||i.type!=="hidden"))break}else if(t){if(!i[Pt])switch(e){case"meta":if(!i.hasAttribute("itemprop"))break;return i;case"link":if(l=i.getAttribute("rel"),l==="stylesheet"&&i.hasAttribute("data-precedence"))break;if(l!==u.rel||i.getAttribute("href")!==(u.href==null||u.href===""?null:u.href)||i.getAttribute("crossorigin")!==(u.crossOrigin==null?null:u.crossOrigin)||i.getAttribute("title")!==(u.title==null?null:u.title))break;return i;case"style":if(i.hasAttribute("data-precedence"))break;return i;case"script":if(l=i.getAttribute("src"),(l!==(u.src==null?null:u.src)||i.getAttribute("type")!==(u.type==null?null:u.type)||i.getAttribute("crossorigin")!==(u.crossOrigin==null?null:u.crossOrigin))&&l&&i.hasAttribute("async")&&!i.hasAttribute("itemprop"))break;return i;default:return i}}else if(e==="input"&&i.type==="hidden"){var l=u.name==null?null:""+u.name;if(u.type==="hidden"&&i.getAttribute("name")===l)return i}else return i;if(i=Te(i.nextSibling),i===null)break}return null}function Gg(i,e,a){if(e==="")return null;for(;i.nodeType!==3;)if((i.nodeType!==1||i.nodeName!=="INPUT"||i.type!=="hidden")&&!a||(i=Te(i.nextSibling),i===null))return null;return i}function wr(i){return i.data==="$!"||i.data==="$?"&&i.ownerDocument.readyState==="complete"}function Ag(i,e){var a=i.ownerDocument;if(i.data!=="$?"||a.readyState==="complete")e();else{var t=function(){e(),a.removeEventListener("DOMContentLoaded",t)};a.addEventListener("DOMContentLoaded",t),i._reactRetry=t}}function Te(i){for(;i!=null;i=i.nextSibling){var e=i.nodeType;if(e===1||e===3)break;if(e===8){if(e=i.data,e==="$"||e==="$!"||e==="$?"||e==="F!"||e==="F")break;if(e==="/$")return null}}return i}var kr=null;function qd(i){i=i.previousSibling;for(var e=0;i;){if(i.nodeType===8){var a=i.data;if(a==="$"||a==="$!"||a==="$?"){if(e===0)return i;e--}else a==="/$"&&e++}i=i.previousSibling}return null}function Yd(i,e,a){switch(e=Rl(a),i){case"html":if(i=e.documentElement,!i)throw Error(s(452));return i;case"head":if(i=e.head,!i)throw Error(s(453));return i;case"body":if(i=e.body,!i)throw Error(s(454));return i;default:throw Error(s(451))}}function mu(i){for(var e=i.attributes;e.length;)i.removeAttributeNode(e[0]);Wl(i)}var pe=new Map,Xd=new Set;function Gl(i){return typeof i.getRootNode=="function"?i.getRootNode():i.nodeType===9?i:i.ownerDocument}var Qe=_.d;_.d={f:Og,r:Ng,D:_g,C:Lg,L:Hg,m:Eg,X:jg,S:Ug,M:xg};function Og(){var i=Qe.f(),e=Ml();return i||e}function Ng(i){var e=Fa(i);e!==null&&e.tag===5&&e.type==="form"?fs(e):Qe.r(i)}var pt=typeof document>"u"?null:document;function Qd(i,e,a){var t=pt;if(t&&typeof e=="string"&&e){var u=Se(e);u='link[rel="'+i+'"][href="'+u+'"]',typeof a=="string"&&(u+='[crossorigin="'+a+'"]'),Xd.has(u)||(Xd.add(u),i={rel:i,crossOrigin:a,href:e},t.querySelector(u)===null&&(e=t.createElement("link"),Yi(e,"link",i),ji(e),t.head.appendChild(e)))}}function _g(i){Qe.D(i),Qd("dns-prefetch",i,null)}function Lg(i,e){Qe.C(i,e),Qd("preconnect",i,e)}function Hg(i,e,a){Qe.L(i,e,a);var t=pt;if(t&&i&&e){var u='link[rel="preload"][as="'+Se(e)+'"]';e==="image"&&a&&a.imageSrcSet?(u+='[imagesrcset="'+Se(a.imageSrcSet)+'"]',typeof a.imageSizes=="string"&&(u+='[imagesizes="'+Se(a.imageSizes)+'"]')):u+='[href="'+Se(i)+'"]';var l=u;switch(e){case"style":l=Vt(i);break;case"script":l=yt(i)}pe.has(l)||(i=D({rel:"preload",href:e==="image"&&a&&a.imageSrcSet?void 0:i,as:e},a),pe.set(l,i),t.querySelector(u)!==null||e==="style"&&t.querySelector(gu(l))||e==="script"&&t.querySelector(Su(l))||(e=t.createElement("link"),Yi(e,"link",i),ji(e),t.head.appendChild(e)))}}function Eg(i,e){Qe.m(i,e);var a=pt;if(a&&i){var t=e&&typeof e.as=="string"?e.as:"script",u='link[rel="modulepreload"][as="'+Se(t)+'"][href="'+Se(i)+'"]',l=u;switch(t){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":l=yt(i)}if(!pe.has(l)&&(i=D({rel:"modulepreload",href:i},e),pe.set(l,i),a.querySelector(u)===null)){switch(t){case"audioworklet":case"paintworklet":case"serviceworker":case"sharedworker":case"worker":case"script":if(a.querySelector(Su(l)))return}t=a.createElement("link"),Yi(t,"link",i),ji(t),a.head.appendChild(t)}}}function Ug(i,e,a){Qe.S(i,e,a);var t=pt;if(t&&i){var u=Za(t).hoistableStyles,l=Vt(i);e=e||"default";var n=u.get(l);if(!n){var r={loading:0,preload:null};if(n=t.querySelector(gu(l)))r.loading=5;else{i=D({rel:"stylesheet",href:i,"data-precedence":e},a),(a=pe.get(l))&&$r(i,a);var c=n=t.createElement("link");ji(c),Yi(c,"link",i),c._p=new Promise(function(S,M){c.onload=S,c.onerror=M}),c.addEventListener("load",function(){r.loading|=1}),c.addEventListener("error",function(){r.loading|=2}),r.loading|=4,Al(n,e,t)}n={type:"stylesheet",instance:n,count:1,state:r},u.set(l,n)}}}function jg(i,e){Qe.X(i,e);var a=pt;if(a&&i){var t=Za(a).hoistableScripts,u=yt(i),l=t.get(u);l||(l=a.querySelector(Su(u)),l||(i=D({src:i,async:!0},e),(e=pe.get(u))&&Wr(i,e),l=a.createElement("script"),ji(l),Yi(l,"link",i),a.head.appendChild(l)),l={type:"script",instance:l,count:1,state:null},t.set(u,l))}}function xg(i,e){Qe.M(i,e);var a=pt;if(a&&i){var t=Za(a).hoistableScripts,u=yt(i),l=t.get(u);l||(l=a.querySelector(Su(u)),l||(i=D({src:i,async:!0,type:"module"},e),(e=pe.get(u))&&Wr(i,e),l=a.createElement("script"),ji(l),Yi(l,"link",i),a.head.appendChild(l)),l={type:"script",instance:l,count:1,state:null},t.set(u,l))}}function Kd(i,e,a,t){var u=(u=W.current)?Gl(u):null;if(!u)throw Error(s(446));switch(i){case"meta":case"title":return null;case"style":return typeof a.precedence=="string"&&typeof a.href=="string"?(e=Vt(a.href),a=Za(u).hoistableStyles,t=a.get(e),t||(t={type:"style",instance:null,count:0,state:null},a.set(e,t)),t):{type:"void",instance:null,count:0,state:null};case"link":if(a.rel==="stylesheet"&&typeof a.href=="string"&&typeof a.precedence=="string"){i=Vt(a.href);var l=Za(u).hoistableStyles,n=l.get(i);if(n||(u=u.ownerDocument||u,n={type:"stylesheet",instance:null,count:0,state:{loading:0,preload:null}},l.set(i,n),(l=u.querySelector(gu(i)))&&!l._p&&(n.instance=l,n.state.loading=5),pe.has(i)||(a={rel:"preload",as:"style",href:a.href,crossOrigin:a.crossOrigin,integrity:a.integrity,media:a.media,hrefLang:a.hrefLang,referrerPolicy:a.referrerPolicy},pe.set(i,a),l||Jg(u,i,a,n.state))),e&&t===null)throw Error(s(528,""));return n}if(e&&t!==null)throw Error(s(529,""));return null;case"script":return e=a.async,a=a.src,typeof a=="string"&&e&&typeof e!="function"&&typeof e!="symbol"?(e=yt(a),a=Za(u).hoistableScripts,t=a.get(e),t||(t={type:"script",instance:null,count:0,state:null},a.set(e,t)),t):{type:"void",instance:null,count:0,state:null};default:throw Error(s(444,i))}}function Vt(i){return'href="'+Se(i)+'"'}function gu(i){return'link[rel="stylesheet"]['+i+"]"}function Id(i){return D({},i,{"data-precedence":i.precedence,precedence:null})}function Jg(i,e,a,t){i.querySelector('link[rel="preload"][as="style"]['+e+"]")?t.loading=1:(e=i.createElement("link"),t.preload=e,e.addEventListener("load",function(){return t.loading|=1}),e.addEventListener("error",function(){return t.loading|=2}),Yi(e,"link",a),ji(e),i.head.appendChild(e))}function yt(i){return'[src="'+Se(i)+'"]'}function Su(i){return"script[async]"+i}function wd(i,e,a){if(e.count++,e.instance===null)switch(e.type){case"style":var t=i.querySelector('style[data-href~="'+Se(a.href)+'"]');if(t)return e.instance=t,ji(t),t;var u=D({},a,{"data-href":a.href,"data-precedence":a.precedence,href:null,precedence:null});return t=(i.ownerDocument||i).createElement("style"),ji(t),Yi(t,"style",u),Al(t,a.precedence,i),e.instance=t;case"stylesheet":u=Vt(a.href);var l=i.querySelector(gu(u));if(l)return e.state.loading|=4,e.instance=l,ji(l),l;t=Id(a),(u=pe.get(u))&&$r(t,u),l=(i.ownerDocument||i).createElement("link"),ji(l);var n=l;return n._p=new Promise(function(r,c){n.onload=r,n.onerror=c}),Yi(l,"link",t),e.state.loading|=4,Al(l,a.precedence,i),e.instance=l;case"script":return l=yt(a.src),(u=i.querySelector(Su(l)))?(e.instance=u,ji(u),u):(t=a,(u=pe.get(l))&&(t=D({},a),Wr(t,u)),i=i.ownerDocument||i,u=i.createElement("script"),ji(u),Yi(u,"link",t),i.head.appendChild(u),e.instance=u);case"void":return null;default:throw Error(s(443,e.type))}else e.type==="stylesheet"&&(e.state.loading&4)===0&&(t=e.instance,e.state.loading|=4,Al(t,a.precedence,i));return e.instance}function Al(i,e,a){for(var t=a.querySelectorAll('link[rel="stylesheet"][data-precedence],style[data-precedence]'),u=t.length?t[t.length-1]:null,l=u,n=0;n<t.length;n++){var r=t[n];if(r.dataset.precedence===e)l=r;else if(l!==u)break}l?l.parentNode.insertBefore(i,l.nextSibling):(e=a.nodeType===9?a.head:a,e.insertBefore(i,e.firstChild))}function $r(i,e){i.crossOrigin==null&&(i.crossOrigin=e.crossOrigin),i.referrerPolicy==null&&(i.referrerPolicy=e.referrerPolicy),i.title==null&&(i.title=e.title)}function Wr(i,e){i.crossOrigin==null&&(i.crossOrigin=e.crossOrigin),i.referrerPolicy==null&&(i.referrerPolicy=e.referrerPolicy),i.integrity==null&&(i.integrity=e.integrity)}var Ol=null;function kd(i,e,a){if(Ol===null){var t=new Map,u=Ol=new Map;u.set(a,t)}else u=Ol,t=u.get(a),t||(t=new Map,u.set(a,t));if(t.has(i))return t;for(t.set(i,null),a=a.getElementsByTagName(i),u=0;u<a.length;u++){var l=a[u];if(!(l[Pt]||l[Xi]||i==="link"&&l.getAttribute("rel")==="stylesheet")&&l.namespaceURI!=="http://www.w3.org/2000/svg"){var n=l.getAttribute(e)||"";n=i+n;var r=t.get(n);r?r.push(l):t.set(n,[l])}}return t}function $d(i,e,a){i=i.ownerDocument||i,i.head.insertBefore(a,e==="title"?i.querySelector("head > title"):null)}function Fg(i,e,a){if(a===1||e.itemProp!=null)return!1;switch(i){case"meta":case"title":return!0;case"style":if(typeof e.precedence!="string"||typeof e.href!="string"||e.href==="")break;return!0;case"link":if(typeof e.rel!="string"||typeof e.href!="string"||e.href===""||e.onLoad||e.onError)break;switch(e.rel){case"stylesheet":return i=e.disabled,typeof e.precedence=="string"&&i==null;default:return!0}case"script":if(e.async&&typeof e.async!="function"&&typeof e.async!="symbol"&&!e.onLoad&&!e.onError&&e.src&&typeof e.src=="string")return!0}return!1}function Wd(i){return!(i.type==="stylesheet"&&(i.state.loading&3)===0)}var Cu=null;function Zg(){}function qg(i,e,a){if(Cu===null)throw Error(s(475));var t=Cu;if(e.type==="stylesheet"&&(typeof a.media!="string"||matchMedia(a.media).matches!==!1)&&(e.state.loading&4)===0){if(e.instance===null){var u=Vt(a.href),l=i.querySelector(gu(u));if(l){i=l._p,i!==null&&typeof i=="object"&&typeof i.then=="function"&&(t.count++,t=Nl.bind(t),i.then(t,t)),e.state.loading|=4,e.instance=l,ji(l);return}l=i.ownerDocument||i,a=Id(a),(u=pe.get(u))&&$r(a,u),l=l.createElement("link"),ji(l);var n=l;n._p=new Promise(function(r,c){n.onload=r,n.onerror=c}),Yi(l,"link",a),e.instance=l}t.stylesheets===null&&(t.stylesheets=new Map),t.stylesheets.set(e,i),(i=e.state.preload)&&(e.state.loading&3)===0&&(t.count++,e=Nl.bind(t),i.addEventListener("load",e),i.addEventListener("error",e))}}function Yg(){if(Cu===null)throw Error(s(475));var i=Cu;return i.stylesheets&&i.count===0&&io(i,i.stylesheets),0<i.count?function(e){var a=setTimeout(function(){if(i.stylesheets&&io(i,i.stylesheets),i.unsuspend){var t=i.unsuspend;i.unsuspend=null,t()}},6e4);return i.unsuspend=e,function(){i.unsuspend=null,clearTimeout(a)}}:null}function Nl(){if(this.count--,this.count===0){if(this.stylesheets)io(this,this.stylesheets);else if(this.unsuspend){var i=this.unsuspend;this.unsuspend=null,i()}}}var _l=null;function io(i,e){i.stylesheets=null,i.unsuspend!==null&&(i.count++,_l=new Map,e.forEach(Xg,i),_l=null,Nl.call(i))}function Xg(i,e){if(!(e.state.loading&4)){var a=_l.get(i);if(a)var t=a.get(null);else{a=new Map,_l.set(i,a);for(var u=i.querySelectorAll("link[data-precedence],style[data-precedence]"),l=0;l<u.length;l++){var n=u[l];(n.nodeName==="LINK"||n.getAttribute("media")!=="not all")&&(a.set(n.dataset.precedence,n),t=n)}t&&a.set(null,t)}u=e.instance,n=u.getAttribute("data-precedence"),l=a.get(n)||t,l===t&&a.set(null,u),a.set(n,u),this.count++,t=Nl.bind(this),u.addEventListener("load",t),u.addEventListener("error",t),l?l.parentNode.insertBefore(u,l.nextSibling):(i=i.nodeType===9?i.head:i,i.insertBefore(u,i.firstChild)),e.state.loading|=4}}var vu={$$typeof:A,Provider:null,Consumer:null,_currentValue:q,_currentValue2:q,_threadCount:0};function Qg(i,e,a,t,u,l,n,r){this.tag=1,this.containerInfo=i,this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=-1,this.callbackNode=this.next=this.pendingContext=this.context=this.cancelPendingCommit=null,this.callbackPriority=0,this.expirationTimes=Il(-1),this.entangledLanes=this.shellSuspendCounter=this.errorRecoveryDisabledLanes=this.expiredLanes=this.warmLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=Il(0),this.hiddenUpdates=Il(null),this.identifierPrefix=t,this.onUncaughtError=u,this.onCaughtError=l,this.onRecoverableError=n,this.pooledCache=null,this.pooledCacheLanes=0,this.formState=r,this.incompleteTransitions=new Map}function ef(i,e,a,t,u,l,n,r,c,S,M,y){return i=new Qg(i,e,a,n,r,c,S,y),e=1,l===!0&&(e|=24),l=re(3,null,null,e),i.current=l,l.stateNode=i,e=Ln(),e.refCount++,i.pooledCache=e,e.refCount++,l.memoizedState={element:t,isDehydrated:a,cache:e},jn(l),i}function af(i){return i?(i=et,i):et}function tf(i,e,a,t,u,l){u=af(u),t.context===null?t.context=u:t.pendingContext=u,t=ea(e),t.payload={element:a},l=l===void 0?null:l,l!==null&&(t.callback=l),a=aa(i,t,e),a!==null&&(fe(a,i,e),Qt(a,i,e))}function uf(i,e){if(i=i.memoizedState,i!==null&&i.dehydrated!==null){var a=i.retryLane;i.retryLane=a!==0&&a<e?a:e}}function eo(i,e){uf(i,e),(i=i.alternate)&&uf(i,e)}function lf(i){if(i.tag===13){var e=it(i,67108864);e!==null&&fe(e,i,67108864),eo(i,67108864)}}var Ll=!0;function Kg(i,e,a,t){var u=b.T;b.T=null;var l=_.p;try{_.p=2,ao(i,e,a,t)}finally{_.p=l,b.T=u}}function Ig(i,e,a,t){var u=b.T;b.T=null;var l=_.p;try{_.p=8,ao(i,e,a,t)}finally{_.p=l,b.T=u}}function ao(i,e,a,t){if(Ll){var u=to(t);if(u===null)Zr(i,e,t,Hl,a),rf(i,t);else if(kg(u,i,e,a,t))t.stopPropagation();else if(rf(i,t),e&4&&-1<wg.indexOf(i)){for(;u!==null;){var l=Fa(u);if(l!==null)switch(l.tag){case 3:if(l=l.stateNode,l.current.memoizedState.isDehydrated){var n=ba(l.pendingLanes);if(n!==0){var r=l;for(r.pendingLanes|=2,r.entangledLanes|=2;n;){var c=1<<31-le(n);r.entanglements[1]|=c,n&=~c}Ae(l),(gi&6)===0&&(Bl=De()+500,su(0))}}break;case 13:r=it(l,2),r!==null&&fe(r,l,2),Ml(),eo(l,2)}if(l=to(t),l===null&&Zr(i,e,t,Hl,a),l===u)break;u=l}u!==null&&t.stopPropagation()}else Zr(i,e,t,null,a)}}function to(i){return i=on(i),uo(i)}var Hl=null;function uo(i){if(Hl=null,i=Ja(i),i!==null){var e=R(i);if(e===null)i=null;else{var a=e.tag;if(a===13){if(i=N(e),i!==null)return i;i=null}else if(a===3){if(e.stateNode.current.memoizedState.isDehydrated)return e.tag===3?e.stateNode.containerInfo:null;i=null}else e!==i&&(i=null)}}return Hl=i,null}function nf(i){switch(i){case"beforetoggle":case"cancel":case"click":case"close":case"contextmenu":case"copy":case"cut":case"auxclick":case"dblclick":case"dragend":case"dragstart":case"drop":case"focusin":case"focusout":case"input":case"invalid":case"keydown":case"keypress":case"keyup":case"mousedown":case"mouseup":case"paste":case"pause":case"play":case"pointercancel":case"pointerdown":case"pointerup":case"ratechange":case"reset":case"resize":case"seeked":case"submit":case"toggle":case"touchcancel":case"touchend":case"touchstart":case"volumechange":case"change":case"selectionchange":case"textInput":case"compositionstart":case"compositionend":case"compositionupdate":case"beforeblur":case"afterblur":case"beforeinput":case"blur":case"fullscreenchange":case"focus":case"hashchange":case"popstate":case"select":case"selectstart":return 2;case"drag":case"dragenter":case"dragexit":case"dragleave":case"dragover":case"mousemove":case"mouseout":case"mouseover":case"pointermove":case"pointerout":case"pointerover":case"scroll":case"touchmove":case"wheel":case"mouseenter":case"mouseleave":case"pointerenter":case"pointerleave":return 8;case"message":switch(Lf()){case Bo:return 2;case bo:return 8;case Pu:case Hf:return 32;case Mo:return 268435456;default:return 32}default:return 32}}var lo=!1,Sa=null,Ca=null,va=null,hu=new Map,Bu=new Map,ha=[],wg="mousedown mouseup touchcancel touchend touchstart auxclick dblclick pointercancel pointerdown pointerup dragend dragstart drop compositionend compositionstart keydown keypress keyup input textInput copy cut paste click change contextmenu reset".split(" ");function rf(i,e){switch(i){case"focusin":case"focusout":Sa=null;break;case"dragenter":case"dragleave":Ca=null;break;case"mouseover":case"mouseout":va=null;break;case"pointerover":case"pointerout":hu.delete(e.pointerId);break;case"gotpointercapture":case"lostpointercapture":Bu.delete(e.pointerId)}}function bu(i,e,a,t,u,l){return i===null||i.nativeEvent!==l?(i={blockedOn:e,domEventName:a,eventSystemFlags:t,nativeEvent:l,targetContainers:[u]},e!==null&&(e=Fa(e),e!==null&&lf(e)),i):(i.eventSystemFlags|=t,e=i.targetContainers,u!==null&&e.indexOf(u)===-1&&e.push(u),i)}function kg(i,e,a,t,u){switch(e){case"focusin":return Sa=bu(Sa,i,e,a,t,u),!0;case"dragenter":return Ca=bu(Ca,i,e,a,t,u),!0;case"mouseover":return va=bu(va,i,e,a,t,u),!0;case"pointerover":var l=u.pointerId;return hu.set(l,bu(hu.get(l)||null,i,e,a,t,u)),!0;case"gotpointercapture":return l=u.pointerId,Bu.set(l,bu(Bu.get(l)||null,i,e,a,t,u)),!0}return!1}function of(i){var e=Ja(i.target);if(e!==null){var a=R(e);if(a!==null){if(e=a.tag,e===13){if(e=N(a),e!==null){i.blockedOn=e,qf(i.priority,function(){if(a.tag===13){var t=de();t=wl(t);var u=it(a,t);u!==null&&fe(u,a,t),eo(a,t)}});return}}else if(e===3&&a.stateNode.current.memoizedState.isDehydrated){i.blockedOn=a.tag===3?a.stateNode.containerInfo:null;return}}}i.blockedOn=null}function El(i){if(i.blockedOn!==null)return!1;for(var e=i.targetContainers;0<e.length;){var a=to(i.nativeEvent);if(a===null){a=i.nativeEvent;var t=new a.constructor(a.type,a);rn=t,a.target.dispatchEvent(t),rn=null}else return e=Fa(a),e!==null&&lf(e),i.blockedOn=a,!1;e.shift()}return!0}function cf(i,e,a){El(i)&&a.delete(e)}function $g(){lo=!1,Sa!==null&&El(Sa)&&(Sa=null),Ca!==null&&El(Ca)&&(Ca=null),va!==null&&El(va)&&(va=null),hu.forEach(cf),Bu.forEach(cf)}function Ul(i,e){i.blockedOn===e&&(i.blockedOn=null,lo||(lo=!0,o.unstable_scheduleCallback(o.unstable_NormalPriority,$g)))}var jl=null;function sf(i){jl!==i&&(jl=i,o.unstable_scheduleCallback(o.unstable_NormalPriority,function(){jl===i&&(jl=null);for(var e=0;e<i.length;e+=3){var a=i[e],t=i[e+1],u=i[e+2];if(typeof t!="function"){if(uo(t||a)===null)continue;break}var l=Fa(a);l!==null&&(i.splice(e,3),e-=3,ur(l,{pending:!0,data:u,method:a.method,action:t},t,u))}}))}function Mu(i){function e(c){return Ul(c,i)}Sa!==null&&Ul(Sa,i),Ca!==null&&Ul(Ca,i),va!==null&&Ul(va,i),hu.forEach(e),Bu.forEach(e);for(var a=0;a<ha.length;a++){var t=ha[a];t.blockedOn===i&&(t.blockedOn=null)}for(;0<ha.length&&(a=ha[0],a.blockedOn===null);)of(a),a.blockedOn===null&&ha.shift();if(a=(i.ownerDocument||i).$$reactFormReplay,a!=null)for(t=0;t<a.length;t+=3){var u=a[t],l=a[t+1],n=u[$i]||null;if(typeof l=="function")n||sf(a);else if(n){var r=null;if(l&&l.hasAttribute("formAction")){if(u=l,n=l[$i]||null)r=n.formAction;else if(uo(u)!==null)continue}else r=n.action;typeof r=="function"?a[t+1]=r:(a.splice(t,3),t-=3),sf(a)}}}function no(i){this._internalRoot=i}xl.prototype.render=no.prototype.render=function(i){var e=this._internalRoot;if(e===null)throw Error(s(409));var a=e.current,t=de();tf(a,t,i,e,null,null)},xl.prototype.unmount=no.prototype.unmount=function(){var i=this._internalRoot;if(i!==null){this._internalRoot=null;var e=i.containerInfo;tf(i.current,2,null,i,null,null),Ml(),e[xa]=null}};function xl(i){this._internalRoot=i}xl.prototype.unstable_scheduleHydration=function(i){if(i){var e=Do();i={blockedOn:null,target:i,priority:e};for(var a=0;a<ha.length&&e!==0&&e<ha[a].priority;a++);ha.splice(a,0,i),a===0&&of(i)}};var df=h.version;if(df!=="19.1.0")throw Error(s(527,df,"19.1.0"));_.findDOMNode=function(i){var e=i._reactInternals;if(e===void 0)throw typeof i.render=="function"?Error(s(188)):(i=Object.keys(i).join(","),Error(s(268,i)));return i=z(e),i=i!==null?B(i):null,i=i===null?null:i.stateNode,i};var Wg={bundleType:0,version:"19.1.0",rendererPackageName:"react-dom",currentDispatcherRef:b,reconcilerVersion:"19.1.0"};if(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__<"u"){var Jl=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(!Jl.isDisabled&&Jl.supportsFiber)try{Tt=Jl.inject(Wg),ue=Jl}catch{}}return Vu.createRoot=function(i,e){if(!P(i))throw Error(s(299));var a=!1,t="",u=Ds,l=zs,n=Ps,r=null;return e!=null&&(e.unstable_strictMode===!0&&(a=!0),e.identifierPrefix!==void 0&&(t=e.identifierPrefix),e.onUncaughtError!==void 0&&(u=e.onUncaughtError),e.onCaughtError!==void 0&&(l=e.onCaughtError),e.onRecoverableError!==void 0&&(n=e.onRecoverableError),e.unstable_transitionCallbacks!==void 0&&(r=e.unstable_transitionCallbacks)),e=ef(i,1,!1,null,null,a,t,u,l,n,r,null),i[xa]=e.current,Fr(i),new no(e)},Vu.hydrateRoot=function(i,e,a){if(!P(i))throw Error(s(299));var t=!1,u="",l=Ds,n=zs,r=Ps,c=null,S=null;return a!=null&&(a.unstable_strictMode===!0&&(t=!0),a.identifierPrefix!==void 0&&(u=a.identifierPrefix),a.onUncaughtError!==void 0&&(l=a.onUncaughtError),a.onCaughtError!==void 0&&(n=a.onCaughtError),a.onRecoverableError!==void 0&&(r=a.onRecoverableError),a.unstable_transitionCallbacks!==void 0&&(c=a.unstable_transitionCallbacks),a.formState!==void 0&&(S=a.formState)),e=ef(i,1,!0,e,a??null,t,u,l,n,r,c,S),e.context=af(null),a=e.current,t=de(),t=wl(t),u=ea(t),u.callback=null,aa(a,u,t),a=t,e.current.lanes=a,zt(e,a),Ae(e),i[xa]=e.current,Fr(i),new xl(e)},Vu.version="19.1.0",Vu}var Mf;function sS(){if(Mf)return co.exports;Mf=1;function o(){if(!(typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u"||typeof __REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE!="function"))try{__REACT_DEVTOOLS_GLOBAL_HOOK__.checkDCE(o)}catch(h){console.error(h)}}return o(),co.exports=cS(),co.exports}var dS=sS();function pf({name:o,id:h,value:V,placeholder:s,onChange:P,options:R,required:N,error:K,disabled:z=!1}){const B=ci.useRef(null),[D,Y]=ci.useState(!1),[J,k]=ci.useState(""),[ti,ii]=ci.useState([...R]);ci.useEffect(()=>{if(J!==""){const j=A=>A.normalize("NFD").replace(/[\u0300-\u036f]/g,"").toLowerCase(),G=R.filter(A=>j(A.label).includes(j(J)));ii(G)}else ii(R)},[J,R]);const Z=j=>{P(j),Y(!1)};return ci.useEffect(()=>{const j=G=>{B.current&&!B.current.contains(G.target)&&Y(!1)};return document.addEventListener("click",j),()=>{document.removeEventListener("click",j)}},[]),E.jsxs("div",{ref:B,children:[E.jsx("button",{className:"autocomplete-trigger",type:"button",onClick:()=>Y(!0),disabled:z,children:E.jsx("input",{type:"text",value:V||s,readOnly:!0})}),D&&E.jsxs("div",{className:"autocomplete-options-container",children:[E.jsxs("div",{className:"autocomplete-search-container",children:[E.jsxs("svg",{xmlns:"http://www.w3.org/2000/svg",viewBox:"0 0 24 24",fill:"none","stroke-width":"3","stroke-linecap":"round","stroke-linejoin":"round",className:"autocomplete-search-icon",children:[E.jsx("path",{d:"m21 21-4.34-4.34"}),E.jsx("circle",{cx:"11",cy:"11",r:"8"})]}),E.jsx("input",{type:"text",className:"autocomplete-search",value:J,onChange:j=>{k(j.target.value)}})]}),E.jsx("div",{className:"autocomplete-options",children:ti.length===0?E.jsx(E.Fragment,{children:E.jsx("p",{children:"Nu există opțiuni"})}):E.jsx(E.Fragment,{children:ti.map((j,G)=>E.jsx("div",{className:"autocomplete-option",children:E.jsx("button",{onClick:Z,type:"button",name:o,value:j.value,children:j.label})},G))})})]})]})}const Vf=JSON.parse('[{"abr":"ab","nume":"Alba","localitati":["Abrud","Abrud-Sat","Achimețești","Acmariu","Aiud","Aiudul de Sus","Alba Iulia","Albac","Alecuș","Almașu de Mijloc","Almașu Mare","Ampoița","Anghelești","Arieșeni","Aronești","Arți","Asinip","Avram Iancu","Avrămești (Arieșeni)","Avrămești (Avram Iancu)","Baba","Băcăinți","Bădăi","Băgău","Băi","Baia de Arieș","Bălcaciu","Bălești","Bălești-Cătun","Bălmoșești","Balomiru de Câmp","Bărăbanț","Bărăști","Bărbești","Bârdești","Bârlești (Bistra)","Bârlești (Mogoș)","Bârlești (Scărișoara)","Bârlești-Cătun","Bârsana","Bârzan","Bârzogani","Băzești","Beldiu","Benic","Berghin","Beța","Bidigești","Biharia","Biia","Bilănești","Bisericani","Bistra","Blaj","Blandiana","Blidești","Bobărești (Sohodol)","Bobărești (Vidra)","Bocești","Bocșitura","Bodești","Bodrești","Bogdănești (Mogoș)","Bogdănești (Vidra)","Boglești","Boldești","Bolovănești","Boncești","Bordeștii Poieni","Borlești","Boțani","Botești (Câmpeni)","Botești (Scărișoara)","Botești (Zlatna)","Boz","Brădeana","Brădești","Brădet","Brăzești","Bubești","Bucerdea Grânoasă","Bucerdea Vinoasă","Bucium","Bucium-Sat","Bucuru","Budăiești","Budeni","Bulbuc","Buninginea","Bunta","Burzești","Burzonești","Butești (Horea)","Butești (Mogoș)","Călene","Câlnic","Călugărești","Câmpeni","Câmpu Goblii","Cândești","Căpâlna","Căpâlna de Jos","Căptălan","Capu Dealului","Căpud","Cârăști","Carpen","Carpenii de Sus","Cărpiniș (Gârbova)","Cărpiniș (Roșia Montană)","Cârțulești","Casa de Piatră","Căsoaia","Cenade","Cerbu","Cergău","Cergău Mare","Cergău Mic","Certege","Ceru-Băcăinți","Cetatea de Baltă","Cetea","Cheia","Cheile Cibului","Cheleteni","Cib","Cicârd","Cicău","Cioara de Sus","Ciocașu","Cionești","Cistei","Cisteiu de Mureș","Ciuculești","Ciugud","Ciugudu de Jos","Ciugudu de Sus","Ciuguzel","Ciuldești","Ciumbrud","Ciuruleasa","Coasta Henții","Coasta Vâscului","Cobleș","Cocești","Cocoșești","Cojocani","Coleșeni","Colibi","Colțești","Copand","Corna","Cornu","Coroiești","Corțești","Coșlariu","Coșlariu Nou","Costești (Albac)","Costești (Poiana Vadului)","Cotorăști","Crăciunelu de Jos","Crăciunelu de Sus","Craiva","Crețești","Cricău","Crișeni","Cristești","Cucuta","Cugir","Culdești","Cunța","Curături","Curmătură","Curpeni","Cut","Daia Română","Dâmbureni","Dănduț","Dârlești","Dăroaia","Deal","Dealu Bajului","Dealu Bistrii","Dealu Capsei","Dealu Caselor","Dealu Crișului","Dealu Doștatului","Dealu Ferului","Dealu Frumos (Gârda de Sus)","Dealu Frumos (Vadu Moților)","Dealu Geoagiului","Dealu Goiești","Dealu Lămășoi","Dealu Muntelui","Dealu Ordâncușii","Dealu Roatei","Decea","Deleni-Obârșie","Deoncești","Deve","Dilimani","Dobra","Dobrești","Dobrot","Dogărești","Dolești","Doptău","Dos","Doștat","Dosu Luncii","Dosu Văsești","Drăgoiești-Luncă","Drâmbar","Drașov","Dric","Duduieni","Dumăcești","Dumbrava (Săsciori)","Dumbrava (Unirea)","Dumbrava (Zlatna)","Dumbrăvița","Dumești","Dumitra","După Deal (Lupșa)","După Deal (Ponor)","După Pleșe","Durăști","Făget","Făgetu de Jos","Făgetu de Sus","Fântânele","Fărău","Fața","Fața Abrudului","Fața Cristesei","Fața Lăpușului","Fața Pietrii","Fața-Lăzești","Feisa","Feneș","Ferești","Fericet","Fețeni","Ficărești","Flitești","Florești (Bucium)","Florești (Câmpeni)","Florești (Râmeț)","Florești (Scărișoara)","Furduiești (Câmpeni)","Furduiești (Sohodol)","Găbud","Galați","Galbena","Galda de Jos","Galda de Sus","Galtiu","Gâmbaș","Gănești","Gârbova","Gârbova de Jos","Gârbova de Sus","Gârbovița","Gârda de Sus","Gârda Seacă","Gârda-Bărbulești","Gârde","Geamăna","Geoagiu de Sus","Geogel","Geomal","Ghedulești","Ghețari","Ghioncani","Ghirbom","Giurgiuț","Gligorești","Glod","Glogoveț","Goașele","Goiești","Gojeiești","Gorgan","Groși","Gura Arieșului","Gura Cornei","Gura Cuțului","Gura Izbitei","Gura Roșiei","Gura Sohodol","Hădărău","Haiducești","Hănășești (Gârda de Sus)","Hănășești (Poiana Vadului)","Haneș Mină","Hăpria","Hărăști","Hațegana","Helerești","Helești","Henig","Heria","Hoancă (Sohodol)","Hoancă (Vidra)","Hodișești","Hodobana","Holobani","Hopârta","Horea","Hudricești","Huzărești","Iacobești","Ibru","Iclod","Ighiel","Ighiu","Ignățești","Iliești","Incești (Avram Iancu)","Incești (Poșaga)","Inoc","Întregalde","Inuri","Isca","Ivăniș","Izbicioara","Izbita","Izlaz","Izvoarele (Blaj)","Izvoarele (Gârda de Sus)","Izvoarele (Livezile)","Izvoru Ampoiului","Jeflești","Jidoștina","Jidvei","Jojei","Joldișești","Jurcuiești","Lancrăm","Laz (Săsciori)","Laz (Vințu de Jos)","Lăzești (Scărișoara)","Lăzești (Vadu Moților)","Lazuri (Lupșa)","Lazuri (Sohodol)","Lehești","Leorinț","Lespezea","Limba","Lipaia","Livezile","Lodroman","Loman","Lopadea Nouă","Lopadea Veche","Luminești","Lunca (Lupșa)","Lunca (Poșaga)","Lunca (Valea Lungă)","Lunca (Vidra)","Lunca Ampoiței","Lunca Bisericii","Lunca de Jos","Lunca Goiești","Lunca Largă (Bistra)","Lunca Largă (Ocoliș)","Lunca Merilor","Lunca Meteșului","Lunca Mureșului","Lunca Târnavei","Lunca Vesești","Lupăiești","Lupșa","Lupșeni","Lupu","Lupulești","Măcărești","Măghierat","Măgina","Măgura (Bucium)","Măgura (Galda de Jos)","Măhăceni","Mămăligani","Mănărade","Mănăstire","Măncești","Mărgaia","Mărgineni","Mărinești","Mărtești","Mărtinie","Mătăcina","Maței","Mătișești (Ciuruleasa)","Mătișești (Horea)","Medrești","Medveș","Mereteu","Meșcreac","Mesentea","Meteș","Micești","Micoșlaca","Mihăiești","Mihalț","Mihoești","Mirăslău","Modolești (Întregalde)","Modolești (Vidra)","Mogoș","Morărești (Ciuruleasa)","Morărești (Sohodol)","Morcănești","Motorăști","Mugești","Muncelu","Munești","Muntari","Munună","Mușca","Nădăștia","Nămaș","Năpăiești","Necrilești","Necșești","Negești","Negrești","Nelegești","Nemeși","Nicorești","Niculești","Noșlac","Novăcești","Oarda","Obreja","Ocna Mureș","Ocnișoara","Ocoale","Ocoliș","Odverem","Ohaba","Oidești","Oiejdea","Olteni","Oncești","Orăști","Orgești","Ormeniș","Pâclișa","Pădure","Pădurea","Păgida","Pănade","Pânca","Păntești","Pârău Gruiului","Pârău lui Mihai","Pârâu-Cărbunări","Păștești","Pătrăhăițești","Pătrângeni","Pătrușești","Pătruțești","Peleș","Perjești","Peste Valea Bistrii","Pețelca","Petelei","Petreasa","Petreni","Petrești","Petrisat","Pianu","Pianu de Jos","Pianu de Sus","Pirita","Pitărcești","Pițiga","Plai (Avram Iancu)","Plai (Gârda de Sus)","Plaiuri","Pleșcuța","Pleșești","Pleși","Pliști","Podu lui Paul","Poduri","Poduri-Bricești","Poiana (Bistra)","Poiana (Bucium)","Poiana (Sohodol)","Poiana Aiudului","Poiana Ampoiului","Poiana Galdei","Poiana Ursului","Poiana Vadului","Poieni (Blandiana)","Poieni (Bucium)","Poieni (Vidra)","Poienile-Mogoș","Poienița (Arieșeni)","Poienița (Vințu de Jos)","Poiu","Ponor","Ponorel","Popești","Popeștii de Jos","Popeștii de Sus","Poșaga","Poșaga de Jos","Poșaga de Sus","Poșogani","Potionci","Preluca","Prelucă","Presaca Ampoiului","Puiulețești","Purcăreți","Pușelești","Răcătău","Rachiș","Răchita","Rădești","Răhău","Răicani","Râmeț","Rătitiș","Ravicești","Războieni-Cetate","Reciu","Remetea","Rimetea","Robești","Rogoz","Roșești","Roșia de Secaș","Roșia Montană","Runc (Ocoliș)","Runc (Scărișoara)","Runc (Vidra)","Runc (Zlatna)","Runcuri","Rusești","Ruși","Săgagea","Sălăgești","Sălciua","Sălciua de Jos","Sălciua de Sus","Săliștea","Săliștea-Deal","Sânbenedic","Sâncel","Sâncrai","Sânmiclăuș","Sântămărie","Sântimbru","Sărăcsău","Șard","Sartăș","Șasa","Săsciori","Scărișoara","Scoarța","Sebeș","Sebeșel","Sebișești","Secășel","Segaj","Șeușa","Sfârcea","Sfoartea","Șibot","Sicoiești","Șilea","Silivaș","Șimocești","Simulești","Snide","Șoal","Soharu","Sohodol","Sohodol (Albac)","Șoicești","Șoimuș","Șona","Sorlița","Șpălnaca","Spătac","Șpring","Stâlnișoara","Stâna de Mureș","Stănești","Stăuini","Ștefanca","Ștei-Arieșeni","Ștertești","Știuleți","Straja","Stremț","Strungari","Sturu","Sub Piatră","Sucești","Șugag","Surdești","Suseni","Tamborești","Țărănești","Țarina","Târsa","Târsa-Plai","Tărtăria","Tătârlaua","Tău","Tău Bistra","Tăuni","Tăuți","Tecșești","Teiu","Teiuș","Teleac","Țelna","Tibru","Țifra","Tiur","Țoci","Tolăcești","Tomești","Tomnatec","Tomușești","Tomuțești","Tonea","Toțești","Totoi","Trâmpoiele","Trâncești","Trifești (Horea)","Trifești (Lupșa)","Trișorești","Turdaș","Uioara de Jos","Uioara de Sus","Ungurei","Unirea","Urdeș","Vadu Moților","Văi","Vâlcăneasa","Vâlcea","Vâlcești","Vale în Jos","Valea Abruzel","Valea Albă","Valea Bârluțești","Valea Barnii","Valea Bistrii","Valea Bucurului","Valea Caselor","Valea Cerbului","Valea Ciuciului","Valea Cocești","Valea Făgetului","Valea Giogești","Valea Goblii","Valea Holhorii","Valea Inzelului","Valea Largă","Valea lui Mihai","Valea Lungă","Valea Lupșii","Valea Maciului","Valea Mănăstirii","Valea Mare","Valea Mică","Valea Mlacii","Valea Morii","Valea Negrilesii","Valea Poienii (Bucium)","Valea Poienii (Râmeț)","Valea Sasului","Valea Șesii (Bucium)","Valea Șesii (Lupșa)","Valea Țupilor","Valea Uțului","Valea Uzei","Valea Verde","Valea Vințului","Văleni (Bucium)","Văleni (Meteș)","Vălișoara","Vâltori (Vadu Moților)","Vâltori (Zlatna)","Vama Seacă","Vanvucești","Vârși","Vârșii Mari","Vârșii Mici","Vârși-Rontu","Vârtănești","Vârtop","Văsești","Verdești","Veseuș","Veza","Vidolm","Vidra","Vidrișoara","Viezuri","Vinerea","Vingard","Vința","Vințu de Jos","Vlădești","Vlădoșești","Vulcan","Vurpăr","Zăgriș","Zânzești","Zărieș","Zlatna"]},{"abr":"ar","nume":"Arad","localitati":["Aciuța","Adea","Agrișu Mare","Agrișu Mic","Aldești","Almaș","Aluniș","Andrei Șaguna","Apateu","Arad","Arăneag","Archiș","Avram Iancu (Cermei)","Avram Iancu (Vârfurile)","Bacău de Mijloc","Baia","Bănești","Barațca","Bârsa","Bârzava","Bârzești","Bata","Bătuța","Beliu","Belotinț","Benești","Berechiu","Berindia","Birchiș","Bochia","Bocsig","Bodești","Bodrogu Nou","Bodrogu Vechi","Bonțești","Botfei","Brazii","Brusturi","Bruznic","Buceava-Șoimuș","Budești","Buhani","Bulci","Buteni","Călugăreni","Camna","Căpălnaș","Caporal Alexa","Căprioara","Căpruța","Cărand","Cermei","Chelmac","Chereluș","Chesinț","Chier","Chisindia","Chișineu-Criș","Chișlaca","Cicir","Cil","Cintei","Ciuntești","Cladova","Clit","Cociuba","Comănești","Conop","Corbești","Coroi","Covăsinț","Craiva","Cristești","Crocna","Cruceni","Cuiaș","Cuied","Curtici","Cuveșdia","Cuvin","Dezna","Dieci","Donceni","Dorgoș","Dorobanți","Drauț","Dud","Dulcele","Dumbrava","Dumbrăvița","Fântânele","Felnac","Feniș","Firiteaz","Fiscut","Frumușeni","Galșa","Ghioroc","Grăniceri","Groșeni","Groși","Groșii Noi","Gura Văii","Gurahonț","Gurba","Hălăliș","Hălmăgel","Hălmagiu","Hășmaș","Hodiș","Honțișor","Horia","Hunedoara Timișană","Iacobini","Iercoșeni","Iermata","Iermata Neagră","Ignești","Ilteu","Ineu","Ionești","Iosaș","Iratoșu","Joia Mare","Julița","Labașinț","Lalașinț","Laz","Lazuri","Leasa","Leștioara","Lipova","Livada","Luguzău","Luncșoara","Lupești","Macea","Măderat","Mădrigești","Măgulicea","Mailat","Mănăștur","Mândruloc","Mânerău","Mărăuș","Mâsca","Mermești","Milova","Minead","Miniș","Minișel","Minișu de Sus","Mișca","Mocrea","Moneasa","Monoroștia","Moroda","Moțiori","Munar","Mustești","Nădab","Nădălbești","Nadăș","Nădlac","Neagra","Nermiș","Neudorf","Nicolae Bălcescu","Obârșia","Odvoș","Olari","Ostrov","Păiușeni","Pâncota","Pârnești","Pătârș","Păulian","Păuliș","Pecica","Peregu Mare","Peregu Mic","Pescari","Petriș","Pilu","Pleșcuța","Poiana","Poienari","Prunișor","Rădești","Radna","Rănușa","Răpsig","Revetiș","Rogoz de Beliu","Roșia","Roșia Nouă","Rostoci","Șagu","Sălăjeni","Sâmbăteni","Sânleani","Sânmartin","Sânpaul","Sânpetru German","Sântana","Sârbi","Satu Mare","Satu Mic","Satu Nou","Săvârșin","Sebiș","Secaci","Secaș","Secusigiu","Sederhat","Șeitin","Seleuș","Seliște","Seliștea","Semlac","Șepreuș","Șiad","Șiclău","Șicula","Șilindia","Șimand","Sintea Mare","Sintea Mică","Șiria","Șiștarovăț","Slatina de Criș","Slatina de Mureș","Socodor","Șofronea","Șoimoș","Șomoșcheș","Stejar","Stoinești","Susag","Susani","Tăgădău","Tălagiu","Tălmaci","Țărmure","Târnăvița","Târnova","Tauț","Țela","Temeșești","Țipar","Tisa","Tisa Nouă","Toc","Țohești","Troaș","Turnu","Urvișu de Beliu","Ususău","Valea Mare (Gurahonț)","Valea Mare (Săvârșin)","Vânători","Vărădia de Mureș","Vârfurile","Variașu Mare","Variașu Mic","Varnița","Vărșand","Vasile Goldiș","Văsoaia","Vidra","Vinga","Virismort","Vladimirescu","Voivodeni","Zăbalț","Zăbrani","Zădăreni","Zărand","Zerind","Zerindu Mic","Zimandcuz","Zimandu Nou","Zimbru"]},{"abr":"ag","nume":"Argeș","localitati":["Adunați","Afrimești","Albești","Albeștii de Argeș","Albeștii de Muscel","Albeștii Pământeni","Albeștii Ungureni","Albota","Albotele","Aluniș","Alunișu (Băiculești)","Alunișu (Brăduleț)","Anghinești","Aninoasa","Arefu","Argeșani","Argeșelu","Băbana","Babaroaga","Băcești","Bădeni","Bădești (Bârla)","Bădești (Pietroșani)","Bădicea","Bădila","Bădislava","Bădulești","Băiculești","Băila","Băjănești","Băjești","Balabani","Bălilești","Bălilești (Tigveni)","Baloteasca","Bălțata","Bălteni","Bănărești","Bănicești","Bântău","Bărănești","Bărăști","Bărbălani","Bărbălătești","Bărbătești","Bârla","Bârlogu","Bârloi","Bârseștii de Jos","Bârseștii de Sus","Bârzești","Bascov","Bascovele","Bătrâni","Beculești","Beleți","Beleți-Negrești","Berevoești","Berindești","Bilcești","Blaju","Blejani","Bogați","Bolculești","Bolovănești","Bordeieni","Borlești","Borobănești","Borovinești","Boțârcani","Boteni","Boțești","Brabeți","Brădetu","Bradu","Brăduleț","Brăileni","Braniștea","Brânzari","Brăteasca","Brătești","Bratia (Berevoești)","Bratia (Ciomăgești)","Broșteni (Aninoasa)","Broșteni (Costești)","Bucov","Bucșenești","Bucșenești-Lotași","Budeasa","Budeasa Mare","Budeasa Mică","Budișteni","Bughea de Jos","Bughea de Sus","Bujoi","Bujoreni","Bumbueni","Bunești (Cotmeana)","Bunești (Mălureni)","Burdea","Burdești","Burețești","Burluși","Burnești","Buta","Buzoești","Căldăraru","Călinești","Calotești","Câmpulung","Cândești","Căpățânenii Pământeni","Căpățânenii Ungureni","Capu Piscului (Godeni)","Capu Piscului (Merișani)","Cârcești","Cârciumărești","Cărpeniș","Cârstieni","Catane","Catanele","Căteasca","Cătunași","Ceaurești","Ceaușești","Cepari","Cepari (Poiana Lacului)","Ceparii Pământeni","Ceparii Ungureni","Cerbu","Cerbureni","Cerșani","Cetățeni","Chilii","Chirițești (Suseni)","Chirițești (Uda)","Chirițești (Vedea)","Chițani","Chițești","Cicănești","Ciești","Ciobănești","Ciobani","Ciocănăi","Ciocănești","Ciocanu","Ciocești","Ciofrângeni","Ciolcești","Ciomăgești","Cireșu","Cișmea","Ciulnița","Ciupa-Mănciulescu","Ciurești","Clucereasa","Cocenești","Cochinești","Cocu","Colibași","Colnic","Colțu","Conțești","Corbeni","Corbi","Corbșori","Cornățel","Cosaci","Coșeri","Coșești","Costești","Costești (Cotmeana)","Costești-Vâlsan","Costiță","Coteasca","Cotenești","Cotești","Cotmeana","Cotmeana (Stolnici)","Cotmenița","Cotu (Cuca)","Cotu (Uda)","Cotu Malului","Crâmpotani","Crintești","Crivățu","Crucișoara","Cuca","Cungrea","Curtea de Argeș","Curteanca","Dâmbovicioara","Dârmănești","Davidești","Deagu de Jos","Deagu de Sus","Dealu","Dealu Bisericii","Dealu Bradului","Dealu Frumos","Dealu Obejdeanului","Dealu Orașului","Dealu Pădurii","Dealu Tolcesii","Dealu Viilor (Moșoaia)","Dealu Viilor (Poiana Lacului)","Dedulești","Diconești","Dincani","Dinculești","Doblea","Dobrești","Dobrogostea","Dobrotu","Dogari","Domnești","Drăganu","Drăganu-Olteni","Drăghescu","Drăghicești","Drăghici","Drăgolești","Dragoslavele","Dumbrava","Dumbrăvești","Dumirești","Enculești","Făcălețești","Făgetu","Fâlfani","Fântânea","Fata","Fedeleșoiu","Florieni","Frătești","Frătici","Furduești","Furești","Furnicoși","Găinușa","Gălășești (Budeasa)","Gălășești (Suseni)","Gâlcești","Galeșu","Gălețeanu","Gămăcești","Gănești","Gărdinești","Găujani","Geamăna","Giuclani","Glâmbocata","Glâmbocata-Deal","Glâmbocel","Glâmbocelu","Glâmbocu","Glavacioc","Gliganu de Jos","Gliganu de Sus","Glodu (Călinești)","Glodu (Leordeni)","Godeni","Goia","Goleasca","Golești (Bălilești)","Golești (Ștefănești)","Gorănești","Gorani","Gorganu","Greabăn","Greabănu","Groșani","Groși","Gruiu (Căteasca)","Gruiu (Nucșoara)","Gura Pravăț","Gura Văii","Hârsești","Hârtiești","Hințești","Huluba","Humele","Ianculești","Ioanicești","Ionești","Izbășești","Izvorani","Izvoru","Izvoru de Jos","Izvoru de Sus","Jgheaburi","Jugur","Jupânești","Lăceni","Lacurile","Lăicăi","Lăngești","Lăpușani","Lăunele de Sus","Lăzărești (Moșoaia)","Lăzărești (Schitu Golești)","Leicești","Lențea","Leordeni","Lerești","Leșile","Lespezi","Lintești","Lipia","Livezeni","Loturi","Lucieni","Luminile","Lunca","Lunca Corbului","Lunca Gârtii","Lungani","Lungulești","Lupueni","Măcăi","Malu (Bârla)","Malu (Godeni)","Malu Vânăt","Mălureni","Măncioiu","Mândra","Mănești","Mănicești","Mărăcineni","Mareș","Mârghia de Jos","Mârghia de Sus","Martalogi","Mârțești","Mățău","Mavrodolu","Merișani","Metofu","Mica","Micești","Miercani","Mihăești","Mioarele","Mioarele (Cicănești)","Mioveni","Miroși","Moara Mocanului","Mogoșești","Morărești","Morăști","Moșoaia","Moșteni-Greci","Mozăceni","Mozăcenii-Vale","Mozacu","Mușătești","Mușcel","Mustățești","Nămăești","Negești","Negrași","Negreni","Negrești","Nejlovelu","Nigrișoara","Noapteș","Nucșoara","Oarja","Odăeni","Oeștii Pământeni","Oeștii Ungureni","Ogrezea","Oprești","Orodel","Oțelu","Păcioiu","Pădureni","Pădureți","Păduroiu din Deal","Păduroiu din Vale","Palanga","Paltenu","Paraschivești","Pârvu Roșu","Pătuleni","Păuleasca (Mălureni)","Păuleasca (Micești)","Păuleni","Păunești","Petrești","Piatra (Brăduleț)","Piatra (Ciofrângeni)","Piatra (Stoenești)","Pielești","Pietroasa","Pietroșani","Piscani","Pitești","Pițigaia","Pitoi","Podeni","Podișoru","Podu Broșteni","Podu Dâmboviței","Poduri","Poiana Lacului","Poienărei","Poienari (Corbeni)","Poienari (Poienarii de Argeș)","Poienari (Poienarii de Muscel)","Poienarii de Argeș","Poienarii de Muscel","Poienița","Pojorâta","Popești","Popești (Cocu)","Popești (Săpata)","Priboaia","Priboieni","Priseaca","Prislopu Mare","Prislopu Mic","Prodani","Prosia","Purcăreni (Micești)","Purcăreni (Popești)","Putina","Râca","Răchițele de Jos","Răchițele de Sus","Racovița","Rădești","Radu Negru","Răduțești","Râjlețu-Govora","Râncăciov","Rătești","Rățoi","Recea","Recea (Căteasca)","Redea","Retevoiești","Robaia","Rociu","Rogojina","Romana","Rotunda","Rucăr","Rudeni (Mihăești)","Rudeni (Șuici)","Ruginoasa","Sălătrucu","Săliștea","Sămăila","Sămara","Săndulești","Săpata","Săpunari","Sătic","Satu Nou","Sboghițești","Schiau","Schitu Golești","Schitu Scoicești","Schitu-Matei","Șelăreasca","Șelari","Șendrulești","Șerbănești (Poienarii de Muscel)","Șerbănești (Rociu)","Șerboeni","Siliștea","Silișteni","Sinești","Slămnești","Slănic","Slatina","Slătioarele","Slobozia","Slobozia (Popești)","Slobozia (Stoenești)","Smei","Smeura","Spiridoni","Stâlpeni","Stănești","Stănicei","Stârci","Ștefan cel Mare","Ștefănești","Ștefănești (Suseni)","Ștefăneștii Noi","Stejari","Stoenești","Stolnici","Strâmbeni (Căldăraru)","Strâmbeni (Suseni)","Stroești","Șuici","Surdulești","Suseni","Suseni (Bogați)","Suslănești","Teiu","Teodorești","Țigănești","Tigveni","Tigveni (Rătești)","Țițești","Tomșanca","Tomulești","Toplița","Topoloveni","Turburea","Turcești","Tutana","Țuțulești","Uda","Udeni-Zăvoi","Uiasca","Uleni","Ulita","Ungheni","Ungureni (Brăduleț)","Ungureni (Valea Iașului)","Urechești","Urlucea","Urlueni","Urluiești","Ursoaia","Văcarea","Vâlcelele","Valea Bădenilor","Valea Bradului","Valea Brazilor","Valea Calului","Valea Cetățuia","Valea Corbului","Valea Cucii","Valea Danului","Valea Faurului","Valea Hotarului","Valea Iașului","Valea Îndărăt","Valea lui Enache","Valea lui Maș","Valea Măgurei","Valea Mănăstirii","Valea Mare","Valea Mare-Bratia","Valea Mare-Podgoria","Valea Mare-Pravăț","Valea Mărului","Valea Muscelului","Valea Nandrii","Valea Nenii","Valea Pechii","Valea Popii (Mihăești)","Valea Popii (Priboieni)","Valea Rizii","Valea Rumâneștilor","Valea Siliștii","Valea Stânii","Valea Uleiului","Valea Ursului","Văleni","Văleni-Podgoria","Vâlsănești","Vârloveni","Vârșești","Vărzăroaia","Vărzaru","Vața","Vedea","Vernești","Vețișoara","Viișoara","Vlădești","Vlădești (Tigveni)","Vlăduța","Vlășcuța","Voinești","Vonigeasa","Voroveni","Vrănești","Vulpești","Vulturești","Zamfirești (Cepari)","Zamfirești (Cotmeana)","Zărnești","Zăvoi","Zgripcești","Zidurile","Zigoneni","Zuvelcați"]},{"abr":"bc","nume":"Bacău","localitati":["Agăș","Albele","Antohești","Apa Asău","Ardeoani","Arini","Asău","Bacău","Băcioiu","Bâclești","Bahna","Băhnășeni","Băimac","Bălaia","Bălăneasa","Bălănești (Dealu Morii)","Bălănești (Podu Turcului)","Bâlca","Balcani","Balotești","Bălțata","Bălușa","Banca","Barați","Bărboasa","Barcana","Barna","Bărnești","Bârsănești","Bărtășești","Bârzulești","Băsăști","Bazga","Belciuneasa","Beleghet","Benești","Berbinceni","Berești","Berești-Bistrița","Berești-Tazlău","Berzunți","Bibirești","Bijghir","Blaga","Blăgești","Blidari","Boanța","Boboș","Bodeasa","Bogata","Bogdan Vodă","Bogdana","Bogdănești","Bogdănești (Scorțeni)","Bogdănești (Traian)","Boiștea","Boiștea de Jos","Bolătău","Bolovăniș","Borșani","Borzești","Bosia","Boșoteni","Bostănești","Bota","Botești","Brad (Berești-Bistrița)","Brad (Filipeni)","Brad (Negri)","Brătești","Brătila","Brusturoasa","Buchila","Buciumi","Bucșa","Bucșești","Buda (Berzunți)","Buda (Blăgești)","Buda (Răchitoasa)","Budești","Buhocel","Buhoci","Buhuși","Burdusaci","Buruieniș","Buruienișu de Sus","Căbești","Cădărești","Căiuți","Calapodești","Călcâi","Călinești","Călini","Călugăreni","Camenca","Câmpeni","Capăta","Căpotești","Caraclău","Cârligi","Cașin","Căuia","Cerdac","Cernu","Cetățuia","Chetreni","Chetriș","Chicerea","Chilia Benei","Chiticeni","Ciobănuș","Cireșoaia","Ciucani","Ciugheș","Ciumași","Ciuturești","Cleja","Climești","Cociu","Colonești","Coman","Comănești","Conțești","Corbasca","Cornățel","Cornățelu","Cornești","Cornet","Cornii de Jos","Cornii de Sus","Coșnea","Costei","Coteni","Coțofănești","Cotu Grosului","Cotumba","Crăiești","Crihan","Cuchiniș","Cucova","Cucuieți (Dofteana)","Cucuieți (Solonț)","Curița","Dădești","Dămienești","Dănăila","Dărmăneasca","Dărmănești","Dealu Mare","Dealu Morii","Dealu Perjului","Deleni","Diaconești","Dieneț","Dofteana","Dorneni (Plopana)","Dorneni (Vultureni)","Dorofei","Dospinești","Drăgești (Dămienești)","Drăgești (Tătărăști)","Dragomir","Drăgugești","Drăgușani","Dumbrava (Gura Văii)","Dumbrava (Itești)","Dumbrava (Răchitoasa)","Enăchești","Făget","Făgețel","Făgetu de Sus","Făghieni","Fântânele (Hemeiuș)","Fântânele (Motoșeni)","Faraoani","Farcașa","Ferestrău-Oituz","Fichitești","Filipeni","Filipești","Filipești (Bogdănești)","Florești (Căiuți)","Florești (Huruiești)","Florești (Scorțeni)","Frumoasa","Frumușelu","Fruntești","Fulgeriș","Fundătura","Fundătura Răchitoasa","Fundeni","Fundoaia","Fundu Răcăciuni","Fundu Tutovei","Fundu Văii","Furnicari","Găiceana","Galbeni (Filipești)","Galbeni (Nicolae Bălcescu)","Galeri","Gârla Anei","Gârleni","Gârlenii de Sus","Gâșteni","Găzărie","Gheorghe Doja","Gherdana","Ghilăvești","Ghimeș","Ghimeș-Făget","Ghionoaia","Gioseni","Giurgeni","Giurgioana","Glăvănești","Glodișoarele","Godineștii de Jos","Godineștii de Sus","Goioasa","Gorghești","Grădești","Grigoreni","Gura Crăiești","Gura Văii","Gura Văii (Racova)","Gutinaș","Hăghiac (Dofteana)","Hăghiac (Răchitoasa)","Hăineala","Hălmăcioaia","Hângănești","Hanța","Hârja","Hârlești","Helegiu","Heltiu","Hemeiuș","Hemieni","Hertioana de Jos","Hertioana-Răzeși","Holt","Horgești","Huruiești","Huțu","Iaz","Ilieși","Ițcani","Itești","Izvoru Berheciului","Lapoș","Larga","Lărguța","Lehancea","Leontinești","Lespezi","Letea Veche","Lichitișeni","Lilieci","Lipova","Livezi","Ludași","Luizi-Călugăra","Lunca Asău","Lunca Dochiei","Luncani","Lupești","Magazia","Măgirești","Mâgla","Măgura","Mâlosu","Mănăstirea Cașin","Mărăscu","Mărăști","Mărcești","Marginea (Buhuși)","Marginea (Oituz)","Mărgineni","Marvila","Mateiești","Medeleni","Mileștii de Jos","Mileștii de Sus","Misihănești","Moinești","Motoc","Motocești","Motoșeni","Movilița","Muncelu","Nadișa","Nănești","Năstăseni","Nazărioaia","Negoiești","Negreni","Negri","Negulești","Negușeni","Nicolae Bălcescu","Nicorești","Obârșia","Ocheni","Odobești","Oituz","Oncești","Onceștii Vechi","Onești","Onișcani","Oprișești","Orășa","Orbeni","Osebiți","Oțelești","Pădureni (Berești-Bistrița)","Pădureni (Dămienești)","Pădureni (Filipeni)","Pădureni (Izvoru Berheciului)","Pădureni (Mărgineni)","Păgubeni","Pajiștea","Palanca","Păltinata","Păltiniș","Pâncești","Păncești (Sascut)","Pârâu Boghii","Parava","Pârgărești","Parincea","Pârjol","Pârvulești","Perchiu","Petrești","Petricica","Plopana","Plopu (Dărmănești)","Plopu (Podu Turcului)","Podei","Podiș","Podu Turcului","Poduri","Pogleț","Poiana (Colonești)","Poiana (Livezi)","Poiana (Mărgineni)","Poiana (Motoșeni)","Poiana (Negri)","Poiana Negustorului","Poiana Sărată","Poieni (Parincea)","Poieni (Roșiori)","Poieni (Târgu Ocna)","Popeni","Popești","Popoiu","Prădaiș","Praja","Prăjești","Prăjești (Măgirești)","Prăjoaia","Pralea","Preluci","Prisaca","Prohozești","Pustiana","Putini","Putredeni","Răcăciuni","Răcătău de Jos","Răcătău-Răzeși","Răcăuți","Răchitiș","Răchitișu","Răchitoasa","Racova","Răcușana","Rădeana","Rădoaia","Radomirești","Răstoaca","Răzeșu","Recea","Reprivăț","Rogoaza","Românești","Roșiori","Rotăria","Runcu","Rusenii de Sus","Rusenii Răzeși","Ruși-Ciutea","Sălătruc","Sănduleni","Sărata (Nicolae Bălcescu)","Sărata (Solonț)","Sârbi","Sascut","Sascut-Sat","Satu Nou (Colonești)","Satu Nou (Lipova)","Satu Nou (Oncești)","Satu Nou (Pârgărești)","Satu Nou (Parincea)","Satu Nou (Urechești)","Săucești","Scăriga","Scărișoara","Schineni (Sascut)","Schineni (Săucești)","Schitu Frumoasa","Scorțeni","Scurta","Scutaru","Seaca","Secuieni","Șendrești","Șerbești","Șerpeni","Șesuri","Siretu (Letea Veche)","Siretu (Săucești)","Slănic-Moldova","Slobozia (Filipeni)","Slobozia (Onești)","Slobozia (Stănișești)","Slobozia (Urechești)","Slobozia Nouă","Soci","Sohodol","Sohodor","Solonț","Somușca","Spria","Stănești","Stănișești","Ștefan cel Mare","Ștefan Vodă","Stejaru","Straja","Străminoasa","Strugari","Stufu","Sulța","Șurina","Țâgâra","Tamași","Tămășoaia","Tărâța","Țârdenii Mari","Târgu Ocna","Târgu Trotuș","Tărhăuși","Tarnița","Tătărăști","Taula","Tăvădărești","Teiuș","Temelia","Țepoaia","Tescani","Țigănești","Tisa","Tisa-Silvestri","Tochilea","Tomozia","Traian","Trebeș","Turluianu","Tuta","Ungureni","Ungureni (Tătărăști)","Urechești","Ursoaia","Vâlcele (Corbasca)","Vâlcele (Târgu Ocna)","Valea Arinilor","Valea Boțului","Valea Budului","Valea Caselor","Valea Fânațului","Valea Hogei","Valea lui Ion","Valea Lupului","Valea Mare (Colonești)","Valea Mare (Roșiori)","Valea Mărului","Valea Merilor","Valea Mică (Cleja)","Valea Mică (Roșiori)","Valea Moșneagului","Valea Nacului","Valea Salciei","Valea Seacă","Valea Seacă (Nicolae Bălcescu)","Valea Șoșii","Văleni (Parincea)","Văleni (Secuieni)","Văleni (Stănișești)","Vermești","Verșești","Viforeni","Viișoara (Ștefan cel Mare)","Viișoara (Târgu Trotuș)","Vladnic","Vrânceni","Vultureni","Zăpodia (Colonești)","Zăpodia (Traian)","Zemeș","Zlătari"]},{"abr":"bh","nume":"Bihor","localitati":["Abram","Abrămuț","Adoni","Albești","Albiș","Aleșd","Almașu Mare","Almașu Mic (Balc)","Almașu Mic (Sârbi)","Alparea","Ant","Apateu","Arpășel","Aștileu","Ateaș","Aușeu","Avram Iancu","Băile 1 Mai","Băile Felix","Băița","Băița-Plai","Bălaia","Balc","Bâlc","Băleni","Bălnaca","Bălnaca-Groși","Baraj Leșu","Batăr","Beiuș","Beiușele","Belejeni","Belfir","Berechiu","Betfia","Beznea","Bicăcel","Bicaci","Biharia","Birtin","Bistra","Bogei","Boianu Mare","Boiu","Borod","Borozel","Borș","Borșa","Borumlaca","Borz","Botean","Brădet","Bratca","Brătești","Briheni","Brusturi","Brusturi (Finiș)","Bucium","Bucuroaia","Budoi","Budureasa","Buduslău","Bulz","Buntești","Burda","Burzuc","Butani","Căbești","Cacuciu Nou","Cacuciu Vechi","Cadea","Călacea","Călătani","Călățea","Calea Mare","Călugări","Câmp","Câmpani","Câmpani de Pomezeu","Câmp-Moți","Căpâlna","Cărăndeni","Cărănzel","Cărăsău","Cărpinet","Cauaceu","Căuașd","Cefa","Ceica","Ceișoara","Cenaloș","Cetariu","Cetea","Cherechiu","Cheresig","Cheriu","Cheșa","Cheșereu","Cheț","Chijic","Chioag","Chiraleu","Chiribiș","Chișcău","Chișirid","Chișlaz","Chistag","Cihei","Ciocaia","Ciuhoi","Ciulești","Ciumeghiu","Ciutelec","Cociuba Mare","Cociuba Mică","Codrișoru","Codru","Cohani","Colești","Copăcel","Copăceni","Corbești","Corboaia","Cordău","Cornișești","Cornițel","Coșdeni","Cotiglet","Crâncești","Crestur","Cresuia","Criștioru de Jos","Criștioru de Sus","Cubulcut","Cucuceni","Cuieșd","Curățele","Curtuișeni","Cusuiuș","Cuzap","Damiș","Delani","Derna","Dernișoara","Dicănești","Dijir","Diosig","Dobrești","Dobricionești","Dolea","Drăgănești","Drăgești","Drăgoteni","Dumbrava","Dumbrăvani","Dumbrăvița","Dumbrăvița de Codru","Dușești","Fânațe","Făncica","Fâșca","Fegernic","Fegernicu Nou","Felcheriu","Feneriș","Ferice","Finiș","Fiziș","Foglaș","Fonău","Forău","Forosig","Fughiu","Gălășeni","Galoșpetreu","Gepiș","Gepiu","Gheghie","Ghenetea","Ghida","Ghighișeni","Ghiorac","Ginta","Girișu de Criș","Girișu Negru","Giulești","Goila","Grădinari","Groși","Gruilung","Gurani","Gurbediu","Gurbești (Căbești)","Gurbești (Spinuș)","Haieu","Hârsești","Hăucești","Hidiș","Hidișel","Hidișelu de Jos","Hidișelu de Sus","Hinchiriș","Hodiș","Hodișel","Hodoș","Holod","Homorog","Hotar","Hotărel","Husasău de Criș","Husasău de Tinca","Huta","Huta Voivozi","Ianca","Ianoșda","Inand","Incești","Ineu","Ioaniș","Iteu","Iteu Nou","Izbuc","Izvoarele","Josani (Căbești)","Josani (Măgești)","Lacu Sărat","Lăzăreni","Lazuri","Lazuri de Beiuș","Leheceni","Lelești","Leș","Livada Beiușului","Livada de Bihor","Loranta","Lorău","Lugașu de Jos","Lugașu de Sus","Lunca","Luncasprie","Luncșoara","Lupoaia","Mădăras","Măgești","Măgura","Marghita","Margine","Marțihaz","Meziad","Mierag","Mierlău","Miersig","Mihai Bravu","Miheleu","Mișca","Mizieș","Moțești","Munteni","Nădar","Nimăiești","Niuved","Nojorid","Nucet","Ogești","Olcea","Olosig","Oradea","Ortiteag","Orvișele","Oșand","Oșorhei","Otomani","Păcălești","Pădurea Neagră","Pădureni","Păgaia","Paleu","Palota","Păntășești","Parhida","Păulești","Păușa","Peștere","Peștiș","Petid","Petrani","Petreasa","Petreu","Petrileni","Picleu","Pietroasa","Pocioveliște","Poclușa de Barcău","Poclușa de Beiuș","Pocola","Poiana (Criștioru de Jos)","Poiana (Tăuteu)","Poiana Tășad","Poienii de Jos","Poienii de Sus","Poietari","Pomezeu","Ponoară","Popești","Poșoloaca","Prisaca","Răbăgani","Răcaș","Râpa","Reghea","Remetea","Remeți","Rieni","Rogoz","Rohani","Roit","Rontău","Roșia","Roșiori","Rotărești","Rugea","Săbolciu","Saca","Săcădat","Sacalasău","Sacalasău Nou","Săcueni","Sălacea","Sălard","Săldăbagiu de Barcău","Săldăbagiu de Munte","Săldăbagiu Mic","Săliște","Săliște de Beiuș","Săliște de Pomezeu","Săliște de Vașcău","Salonta","Sâmbăta","Sâniob","Sânlazăr","Sânmartin","Sânmartin de Beiuș","Sânnicolau de Beiuș","Sânnicolau de Munte","Sânnicolau Român","Sântandrei","Santăul Mare","Santăul Mic","Sântelec","Sântimreu","Sântion","Sărand","Sârbești","Sârbi","Sarcău","Sărsig","Satu Barbă","Satu Nou","Șauaieu","Săucani","Săud","Șebiș","Seghiște","Șerani","Șerghiș","Sfârnaș","Sighiștel","Șilindru","Șimian","Șinteu","Șișterea","Sitani","Sititelec","Socet","Sohodol","Șoimi","Șoimuș","Spinuș","Spinuș de Pomezeu","Stâncești","Ștei","Stracoș","Subpiatră","Sudrigiu","Suiug","Șumugiu","Șuncuiș","Șuncuiuș","Suplacu de Barcău","Suplacu de Tinca","Surduc","Surducel","Șuștiu","Șușturogi","Talpe","Talpoș","Tămașda","Tămășeu","Tărcaia","Tărcăița","Tarcea","Târgușor","Tărian","Tășad","Tăut","Tăutelec","Tăuteu","Teleac","Telechiu","Țețchea","Țigăneștii de Beiuș","Țigăneștii de Criș","Tileagd","Tilecuș","Tinăud","Tinca","Toboliu","Tomnatic","Topa de Criș","Topa de Jos","Topa de Sus","Topești","Totoreni","Tria","Tulca","Ucuriș","Uileacu de Beiuș","Uileacu de Criș","Uileacu de Munte","Ursad","Urvind","Urviș de Beiuș","Vadu Crișului","Vaida","Vălani de Pomezeu","Vălanii de Beiuș","Vâlcelele","Valea Cerului","Valea Crișului","Valea de Jos","Valea de Sus","Valea Iadului","Valea lui Mihai","Valea Mare de Codru","Valea Mare de Criș","Valea Târnei","Varasău","Vărășeni","Vârciorog","Varviz","Vărzari","Vărzarii de Jos","Vărzarii de Sus","Vășad","Vașcău","Viișoara","Vintere","Voivozi (Popești)","Voivozi (Șimian)","Zăvoiu","Zece Hotare"]},{"abr":"bn","nume":"Bistrița-Năsăud","localitati":["Agrieș","Agrieșel","Agrișu de Jos","Agrișu de Sus","Albeștii Bistriței","Alunișul","Anieș","Apatiu","Arcalia","Archiud","Ardan","Arșița","Bârla","Bața","Beclean","Beudiu","Bichigiu","Bidiu","Bistrița","Bistrița Bârgăului","Bistrița Bârgăului Fabrici","Blăjenii de Jos","Blăjenii de Sus","Borleasa","Bozieș","Braniștea","Brăteni","Breaza","Bretea","Budacu de Jos","Budacu de Sus","Budești","Budești-Fânațe","Budurleni","Buduș","Bungard","Buza Cătun","Căianu Mare","Căianu Mic","Caila","Câmp","Cepari","Cetate","Chețiu","Chintelnic","Chiochiș","Chiraleș","Chiuza","Ciceu-Corabia","Ciceu-Giurgești","Ciceu-Mihăiești","Ciceu-Poieni","Ciosa","Cireași","Cireșoaia","Coasta","Cociu","Coldău","Colibița","Comlod","Cormaia","Corvinești","Coșbuc","Coșeriu","Crainimăt","Cristeștii Ciceului","Cristur-Șieu","Cușma","Dealu Ștefăniței","Delureni","Dipșa","Dobric","Dobricel","Domnești","Dorolea","Draga","Dumbrava (Livezile)","Dumbrava (Nușeni)","Dumbrăveni","Dumbrăvița","Dumitra","Dumitrița","După Deal","Enciu","Fânațe","Fânațele Silivașului","Fântânele","Fântânița","Feldru","Feleac","Fiad","Figa","Florești","Galații Bistriței","Gersa I","Gersa II","Ghemeș","Ghinda","Gledin","Hălmăsău","Hășmașu Ciceului","Herina","Hirean","Ilișua","Ilva Mare","Ilva Mică","Ivăneasa","Jeica","Jelna","Jimbor","Josenii Bârgăului","La Curte","Lechința","Lelești","Leșu","Livezile","Liviu Rebreanu","Lunca","Lunca Borlesei","Lunca Ilvei","Lunca Leșului","Lunca Sătească","Lușca","Măgura Ilvei","Măgurele","Maieru","Malin","Măluț","Manic","Mărișelu","Matei","Miceștii de Câmpie","Mijlocenii Bârgăului","Milaș","Mintiu","Mireș","Mititei","Mocod","Mogoșeni","Molișet","Monariu","Monor","Moruț","Mureșenii Bârgăului","Năsăud","Negrilești","Nepos","Nețeni","Nimigea","Nimigea de Jos","Nimigea de Sus","Nușeni","Oarzina","Ocnița","Orheiu Bistriței","Orosfaia","Păltineasa","Parva","Perișor","Petriș","Petru Rareș","Piatra","Piatra Fântânele","Pinticu","Podenii","Poderei","Podirei","Poiana Ilvei","Poienile Zagrei","Porumbenii","Posmuș","Prundu Bârgăului","Purcărete","Răcăteșu","Ragla","Rebra","Rebrișoara","Reteag","Rodna","Romuli","Runcu Salvei","Ruștior","Rusu Bârgăului","Rusu de Jos","Rusu de Sus","Sălcuța","Salva","Sângeorz-Băi","Sângeorzu Nou","Sâniacob","Sânmihaiu de Câmpie","Sânnicoară","Șanț","Sântioana","Sărata","Sărățel","Săsarm","Satu Nou","Scoabe","Sebiș","Șendroaia","Șesuri Spermezeu-Vale","Șieu","Șieu-Măgheruș","Șieu-Odorhei","Șieu-Sfântu","Șieuț","Sigmir","Silivașu de Câmpie","Simionești","Șintereag","Șintereag-Gară","Șirioara","Sita","Slătinița","Șoimuș","Șopteriu","Spermezeu","Strâmba","Strugureni","Stupini","Suplai","Susenii Bârgăului","Țăgșoru","Țagu","Târlișua","Tărpiu","Tăure","Teaca","Telcișor","Telciu","Țentea","Țigău","Tiha Bârgăului","Tonciu","Tureac","Unirea","Uriu","Urmeniș","Valea","Valea Borcutului","Valea Măgherușului","Valea Mare (Șanț)","Valea Mare (Urmeniș)","Valea Poenii","Valea Vinului","Vermeș","Viile Tecii","Viișoara","Visuia","Vița","Zagra","Zoreni"]},{"abr":"bt","nume":"Botoșani","localitati":["Adășeni","Agafton","Alba","Albești","Arborea","Aurel Vlaicu","Avram Iancu","Avrămeni","Băbiceni","Bădărăi","Bădiuți","Băiceni","Baisa","Bajura","Balinți","Balta Arsă","Bălușeni","Bălușenii Noi","Baranca (Cristinești)","Baranca (Hudești)","Bârsănești","Bașeu","Bătrânești","Belcea","Berza","Bivolari","Blândești","Bobulești","Bodeasa","Bogdănești","Bohoghina","Bold","Borolea","Borzești","Boscoteni","Botoșani","Bozieni","Brăești","Brăteni","Brehuiești","Broscăuți","Broșteni","Bucecea","Buda","Buhăceni","Buimăceni","Burla","Burlești","Buzeni","Călărași","Călinești (Bucecea)","Călinești (Cândești)","Călugăreni","Călugărenii Noi","Câmpeni","Cândești","Caraiman","Carasa","Cătămărești","Cătămărești-Deal","Cerbu","Cerchejeni","Cernești","Cervicești","Cervicești-Deal","Cheliș","Chișcăreni","Chițoveni","Cinghiniia","Ciritei","Cișmănești","Cișmea","Codreni","Concești","Copălău","Cordăreni","Corjăuți","Corlăteni","Corni","Costești","Costinești","Coștiugeni","Coșula","Coșuleni","Cotârgaci","Cotu","Cotu Miculinți","Coțușca","Crasnaleuca","Cristești","Cristinești","Cucorăni","Cucuteni","Curtești","Cuza Vodă","Cuzlău","Dacia","Dămideni","Dămileni","Dângeni","Darabani","Davidoaia","Dealu Crucii","Dealu Mare","Dersca","Dimăcheni","Dimitrie Cantemir","Dobârceni","Dobrinăuți-Hapăi","Doina","Dolina","Dorobanți","Dorohoi","Dracșani","Dragalina (Cristinești)","Dragalina (Hlipiceni)","Drăgușeni","Draxini","Drislea","Dumbrăvița","Dumeni","Durnești","Durnești (Santa Mare)","Durnești (Ungureni)","Eșanca","Flămânzi","Flondora","Florești","Frumușica","Fundu Herții","Galbeni","Gârbeni","Gârbești","George Coșbuc","George Enescu","Ghireni","Gorbănești","Gorovei","Grivița","Guranda","Hănești","Havârna","Hilișeu-Cloșca","Hilișeu-Crișan","Hilișeu-Horia","Hlipiceni","Horia","Horlăceni","Horodiștea","Hrișcani","Hudești","Hudum","Hulub","Hulubești","Huțani","Iacobeni","Ibăneasa","Ibănești","Ichimeni","Icușeni","Iezer","Ilișeni","Ionășeni (Trușești)","Ionășeni (Vârfu Câmpului)","Iorga","Ipotești","Iurești","Izvoare","Jijia","Joldești","Lehnești","Leorda","Libertatea","Lișmănița","Lișna","Livada","Liveni","Loturi","Loturi Enescu","Lozna","Lunca","Lunca (Vârfu Câmpului)","Lupăria","Maghera","Mănăstirea Doamnei","Mânăstireni","Mândrești (Ungureni)","Mândrești (Vlădeni)","Manoleasa","Manoleasa-Prut","Manolești","Mășcăteni","Mateieni","Mesteacăn","Mihai Eminescu","Mihai Eminescu (Gorbănești)","Mihai Viteazu","Mihail Kogălniceanu","Mihăileni","Mihălășeni","Mileanca","Miletin","Miorcani","Miron Costin","Mitoc","Mitoc (Leorda)","Mlenăuți","Moara Jorii","Movila Ruptă","Movileni","Murguța","Năstase","Negreni","Negrești","Nichiteni","Nicolae Bălcescu (Coțușca)","Nicolae Bălcescu (Flămânzi)","Nicșeni","Niculcea","Oneaga","Orășeni-Deal","Orășeni-Vale","Oroftiana","Pădureni (Coșula)","Pădureni (Șendriceni)","Păltiniș","Panaitoaia","Pârâu Negru","Păsăteni","Păun","Petricani","Pleșani","Plevna","Plopenii Mari","Plopenii Mici","Podeni","Podriga","Pogorăști","Poiana (Brăești)","Poiana (Cristinești)","Poiana (Flămânzi)","Poiana (Vorona)","Pomârla","Popeni (Brăești)","Popeni (George Enescu)","Popoaia","Prăjeni","Prisăcani","Progresul","Pustoaia","Puțureni","Răchiți","Racovăț","Rădăuți-Prut","Rădeni","Rânghilești","Rânghilești-Deal","Râșca","Răuseni","Recia-Verbia","Rediu (Rădăuți-Prut)","Rediu (Răuseni)","Ripiceni","Ripicenii Vechi","Rogojești","Roma","Românești","Românești-Vale","Roșiori","Sadoveni","Santa Mare","Sarafinești","Sarata","Sărata","Sarata-Basarab","Sarata-Drăgușeni","Sârbi","Sat Nou","Saucenița","Săveni","Schit-Orășeni","Scutari","Seliștea","Șendreni","Șendriceni","Șerpenița","Silișcani","Siliștea","Slobozia (Broscăuți)","Slobozia (Cordăreni)","Slobozia (Păltiniș)","Slobozia Hănești","Slobozia Silișcani","Smârdan","Socrujeni","Șoldănești","Soroceni","Stânca (George Enescu)","Stânca (Ștefănești)","Stâncești","Stăuceni","Ștefănești","Ștefănești-Sat","Știubieni","Stolniceni","Storești","Strahotin","Străteni","Stroiești","Suharău","Sulița","Șupitca","Talpa","Tătărășeni","Tăutești","Timuș","Tocileni","Todireni","Trușești","Tudor Vladimirescu (Albești)","Tudor Vladimirescu (Avrămeni)","Tudora","Ungureni","Unguroaia","Unțeni","Văculești","Vâlcelele","Valea Grajdului","Vânători","Vârfu Câmpului","Vatra","Vicoleni","Victoria (Hlipiceni)","Victoria (Stăuceni)","Viforeni","Viișoara","Viișoara Mică","Vițcani","Vlădeni","Vlădeni (Corlăteni)","Vlădeni-Deal","Vlăsinești","Vorniceni","Vorona","Vorona Mare","Vorona-Teodoru","Vultureni","Zahoreni","Zăicești","Zlătunoaia","Zoițani"]},{"abr":"br","nume":"Brăila","localitati":["Agaua","Albina","Ariciu","Baldovineşti","Băndoiu","Bărăganul","Batogu","Berleşti","Berteştii de Jos","Berteştii de Sus","Boarca","Bordei Verde","Brădeanca","Brăila","Brateşu Vechi","Bumbăcari","Câineni-Băi","Căldăruşa","Cazasu","Chichineţu","Chioibăşeşti","Chiscani","Ciocile","Cireşu","Cistia","Colţea","Comăneasca","Constantin Gabrielescu","Constantineşti","Corbeni","Corbu Nou","Corbu Vechi","Cotu Lung","Cotu Mihalea","Custura","Cuza Vodă (Salcia Tudor)","Cuza Vodă (Stăncuţa)","Deduleşti","Deşiraţi","Drogu","Dudescu","Dudeşti","Esna","Făurei","Făurei-Sat","Filipeşti","Filiu","Florica","Frecăţei","Galbenu","Gara Ianca","Găvani","Gemenele","Grădiştea","Gropeni","Gulianca","Gura Călmăţui","Gura Gârluţei","Gurguieţi","Horia","Ianca","Ibrianu","Însurăţei","Ioneşti","Jirlău","Jugureanu","Lacu Rezii","Lacu Sărat","Lanurile","Latinu","Lişcoteanca","Măgureni","Maraloiu","Măraşu","Mărtăceşti","Măru Roşu","Măxineni","Mihai Bravu","Mihail Kogălniceanu (Râmnicelu)","Mihail Kogălniceanu (Şuţeşti)","Mircea Vodă","Moroteşti","Movila Miresii","Muchea","Nedelcu","Nicolae Bălcescu","Nicoleşti","Oancea","Odăieni","Olăneasca","Oprişeneşti","Pântecani","Perişoru","Pietroiu","Pitulaţi","Plăsoiu","Plopi","Plopu","Polizeşti","Pribeagu","Racoviţa","Râmnicelu","Romanu","Roşiori","Salcia","Salcia Tudor","Sătuc","Scărlăteşti","Scorţaru Nou","Scorţaru Vechi","Sihleanu","Siliştea","Silistraru","Spiru Haret","Stanca","Stăncuţa","Stoieneşti","Surdila-Găiseanca","Surdila-Greci","Şuţeşti","Ţăcău","Târlele Filiu","Tătaru","Ţepeş Vodă","Tichileşti","Titcov","Traian","Tudor Vladimirescu","Tufeşti","Ulmu","Unirea","Urleasca","Vădeni","Valea Călmăţuiului","Valea Cânepii","Vameşu","Vărsătura","Victoria","Vişani","Viziru","Voineşti","Vultureni","Zamfireşti","Zăvoaia"]},{"abr":"bv","nume":"Brașov","localitati":["Acriș","Apața","Arini","Augustin","Bărcut","Beclean","Beia","Berivoi","Bod","Bogata Olteană","Boholț","Bran","Brașov","Breaza","Bucium","Budila","Bunești","Buzăiel","Calbor","Cărpiniș","Cața","Cheia","Cincșor","Cincu","Cobor","Codlea","Colonia 1 Mai","Colonia Bod","Colonia Reconstrucția","Comana","Comana de Jos","Comana de Sus","Copăcel","Corbi","Crihalma","Cristian","Criț","Crizbav","Cuciulata","Cutuș","Dacia","Dăișoara","Dălghiu","Dejani","Dopca","Drăguș","Drăușeni","Dridif","Drumul Carului","Dumbrăvița","Făgăraș","Fântâna","Feldioara","Feldioara (Ucea)","Felmer","Fișer","Fundata","Fundățica","Ghimbav","Grânari","Grid","Gura Văii","Hălchiu","Hălmeag","Hărman","Hârseni","Hoghiz","Holbav","Homorod","Hurez","Iași","Ileni","Ionești","Jibert","Jimbor","Lisa","Lovnic","Ludișor","Lunca Calnicului","Lupșa","Luța","Măgura","Măieruș","Măliniș","Mândra","Mărgineni","Mateiaș","Mercheașa","Meșendorf","Moieciu","Moieciu de Jos","Moieciu de Sus","Ohaba","Olteț","Ormeniș","Paloș","Paltin","Părău","Pârâul Rece","Perșani","Peștera","Podu Oltului","Poiana Brașov","Poiana Mărului","Pojorta","Predeal","Predeluț","Prejmer","Purcăreni","Racoș","Râșnov","Râșnov Romacril","Râușor","Recea","Roadeș","Rodbav","Rotbav","Rucăr","Rupea","Săcele","Sâmbăta de Jos","Sâmbăta de Sus","Sânpetru","Săsciori","Satu Nou","Săvăstreni","Sebeș","Seliștat","Șercaia","Șercăița","Șimon","Șinca","Șinca Nouă","Șinca Veche","Șirnea","Șoarș","Sohodol","Șona","Stațiunea Climaterică Sâmbăta","Stupinii Prejmerului","Tărlungeni","Teliu","Ticușu","Ticușu Nou","Ticușu Vechi","Timișu de Jos","Timișu de Sus","Toarcla","Toderița","Tohanu Nou","Ucea","Ucea de Jos","Ucea de Sus","Ungra","Vad","Vâlcea","Văleni","Vama Buzăului","Veneția de Jos","Veneția de Sus","Victoria","Viscri","Viștea","Viștea de Jos","Viștea de Sus","Viștișoara","Vlădeni","Voila","Voivodeni","Vulcan","Zărnești","Zizin"]},{"abr":"b","nume":"București","localitati":["Sector 1","Sector 2","Sector 3","Sector 4","Sector 5","Sector 6"]},{"abr":"bz","nume":"Buzău","localitati":["Albești","Aldeni","Alexandru Odobescu","Aliceni","Aluniș","Amara","Amaru","Anini","Arbănași","Arcanu","Băbeni","Băceni","Bădeni","Bădila","Băești","Băile","Băjani","Bălăceanu","Bălaia","Bălănești","Bâlhacu","Balta Albă","Balta Tocila","Băltăgari","Băltăreți","Bălteni","Banița","Bărăști","Bărbuncești","Bâsca Chiojdului","Bâsca Rozilei","Bâscenii de Jos","Bâscenii de Sus","Batogu","Beceni","Beciu","Begu","Beilic","Bentu","Berca","Bercești","Beșlii","Bisoca","Blăjani","Boboc","Bodinești","Boldu","Bordușani","Bozioru","Brădeanca","Brădeanu","Brăești","Brăgăreasa","Brătilești","Breaza","Brebu","Buda","Buda Crăciunești","Budești","Budișteni","Budrea","Buduile","Buștea","Buzău","C.A. Rosetti","Căldărăști","Căldărușa","Căldărușeanca","Calea Chiojdului","Câlțești","Călțuna","Calvini","Câmpeni","Câmpulungeanca","Cândești","Cănești","Căpățânești","Capu Satului","Caragele","Cărătnău de Jos","Cărătnău de Sus","Cârligu Mare","Cârligu Mic","Cârlomănești","Cărpiniștea","Cașoca","Casota","Cătiașu","Cătina","Ceairu","Cernătești","Chiliile","Chiojdu","Chiperu","Chirlești","Cilibia","Ciobănoaia","Ciocănești","Cioranca","Cireșu","Cislău","Ciuta","Clondiru","Clondiru de Sus","Coca-Antimirești","Coca-Niculești","Cocârceni","Cochirleanca","Coconari","Cojanu","Colibași","Colțăneni","Colțeni","Colți","Colții de Jos","Colțu Pietrii","Comisoaia","Corbu (Cătina)","Corbu (Glodeanu-Siliștea)","Corneanu","Costești","Costieni","Costomiru","Coțatcu","Cotorca","Cotu Ciorii","Cozieni","Crâng","Crevelești","Cuculeasa","Curcănești","Curmătura","Dâlma","Dâmbroca","Dănulești","Dara","Dăscălești","Dealu Viei","Dedulești","Deleni","Dobrilești","Dogari","Dulbanu","Fântânele (Mărgăritești)","Fântânele (Năeni)","Fața lui Nan","Fințești","Fișici","Florești","Florica","Focșănei","Fotin","Frăsinet","Fulga","Fundata","Fundăturile","Fundeni","Furtunești","Găgeni","Gălbinași","Gara Bobocu","Gara Cilibia","Găvanele","Găvănești","Gherăseni","Ghergheasa","Ghiocari","Ghizdita","Glodeanu Sărat","Glodeanu-Siliștea","Glodu-Petcari","Glodurile","Goicelu","Goidești","Golu Grabicina","Gomoești","Gonțești","Gorâni","Gornet","Grabicina de Jos","Grabicina de Sus","Grăjdana","Grebănu","Greceanca","Gresia","Groșani","Gura Bădicului","Gura Bâscei","Gura Câlnăului","Gura Dimienii","Gura Făgetului","Gura Sărății","Gura Siriului","Gura Teghii","Gura Văii","Haleș","Heliade Rădulescu","Homești","Ileana","Istrița de Jos","Ivănețu","Izvoarele","Izvoranu","Izvoru (Cozieni)","Izvoru (Tisău)","Izvoru Dulce (Beceni)","Izvoru Dulce (Merei)","Jghiab","Joseni","Lacu","Lacu cu Anini","Lacu Sinaia","Lacurile","Lanurile","Largu","Leiculești","Lera","Limpeziș","Lipănescu","Lipia","Livada","Livada Mică","Lopătăreasa","Lopătari","Luciu","Lunca (Amaru)","Lunca (C.A. Rosetti)","Lunca (Pătârlagele)","Lunca (Puiești)","Lunca Frumoasă","Lunca Jariștei","Lunca Priporului","Luncile","Lungești","Măcrina","Măgura","Măguricea","Manasia","Mănăstirea","Mânăstirea Rătești","Mânzălești","Mânzu","Mărăcineni","Mărgăritești","Mărgăriți","Mărgineanu","Mărunțișu","Mătești","Maxenu","Merei","Mierea","Mihăilești","Mitropolia","Mlăjet","Modreni","Moisica","Moșești","Movila Banului","Movila Oii","Movilița","Mucești-Dănulești","Murgești","Muscel","Mușcel","Muscelu Cărămănești","Mușcelușa","Năeni","Negoșina","Nehoiașu","Nehoiu","Nemertea","Nenciu","Nenciulești","Nicolești","Niculești","Nișcov","Nistorești","Nucu","Odaia Banului","Odăile","Ogrăzile","Ojasca","Olari","Oleșești","Oratia","Oreavul","Pâclele","Păcurile","Padina","Pădurenii","Pălici","Păltineni","Păltiniș","Pănătău","Pardoși","Pârjolești","Pârscov","Pârscovelu","Pătârlagele","Pestrițu","Petrăchești","Petrișoru","Piatra Albă","Pietraru","Pietroasa Mică","Pietroasele","Pietrosu","Pinu","Pitulicea","Plăișor","Plaiu Nucului","Plavățu","Plescioara","Pleșcoi","Pleșești (Berca)","Pleșești (Podgoria)","Pleși","Plevna","Plopeasa","Plopi","Ploștina","Podgoria","Podu Muncii","Poenițele","Pogoanele","Pogonele","Poiana Pletari","Poiana Vâlcului","Poienile","Policiori","Posobești","Poșta (Cilibia)","Poșta (Topliceni)","Poșta Câlnău","Potârnichești","Potecu","Potoceni","Proșca","Pruneni","Puiești","Puieștii de Jos","Puieștii de Sus","Punga","Racovițeni","Răducești","Râmnicelu","Râmnicu Sărat","Râpile","Rătești","Recea","Robeasca","Robești","Roșioru","Rubla","Ruginoasa","Runcu","Rușavăț","Rușețu","Săgeata","Săhăteni","Salcia","Sălcioara","Săpoca","Șarânga","Sărata","Sărata-Monteoru","Sârbești","Săreni","Sările","Sările-Cătun","Sărulești","Săsenii Noi","Săsenii pe Vale","Săsenii Vechi","Satu Nou (Glodeanu-Siliștea)","Satu Nou (Mihăilești)","Satu Vechi","Sătuc","Scăeni","Scărișoara","Scărlătești","Scoroșești","Scorțeanca","Scorțoasa","Scurtești","Scutelnici","Secuiu","Sergent Ionel Ștefan","Sibiciu de Jos","Sibiciu de Sus","Șindrila","Siriu","Slobozia","Smârdan","Smeeni","Smeești","Sorești","Spătaru","Spidele","Stâlpu","Stăncești","Stănila","Stăvărăști","Știubei","Strezeni","Stroești","Șuchea","Sudiți (Gherăseni)","Sudiți (Poșta Câlnău)","Tăbăcari","Tăbărăști","Târcov","Târlele","Tâțârligu","Tătulești","Tega","Teișu","Terca","Țintești","Tisău","Tocileni","Topliceni","Toropălești","Trestia","Trestieni","Trestioara (Chiliile)","Trestioara (Mânzălești)","Tronari","Tulburea","Udați-Lucieni","Udați-Mânzu","Ulmeni","Ulmet","Unguriu","Ursoaia","Văcăreasca","Vadu Oii","Vadu Pașii","Vadu Sorești","Vâlcele","Vâlcelele","Valea Banului","Valea Cătinei","Valea Cotoarei","Valea Fântânei","Valea Largă","Valea Largă-Sărulești","Valea lui Lalu","Valea Lupului","Valea Nucului","Valea Părului","Valea Purcarului","Valea Puțului Merei","Valea Râmnicului","Valea Ratei","Valea Roatei","Valea Salciei","Valea Salciei-Cătun","Valea Sălciilor","Valea Șchiopului","Valea Sibiciului","Valea Stânei","Valea Ștefanului","Valea Ursului","Valea Verzei","Valea Viei","Văleanca-Vilănești","Vârf","Varlaam","Vârteju","Văvălucile","Vernești","Viforâta","Vinețisu","Vintilă Vodă","Vintileanca","Viperești","Vispești","Vizireni","Vlădeni","Zaharești","Zăplazi","Zăpodia","Zărnești","Zărneștii de Slănic","Zeletin","Ziduri","Zilișteanca","Zoița","Zorești"]},{"abr":"cl","nume":"Călărași","localitati":["Alexandru I. Cuza","Alexandru Odobescu","Aprozi","Arțari","Belciugatele","Bogata","Bogdana","Borcea","Boșneagu","Buciumeni","Budești","Buzoeni","Călărași","Călărașii Vechi","Călăreți","Cândeasca","Căscioarele","Ceacu","Cetatea Veche","Chirnogi","Chirnogi (Ulmu)","Chiselet","Ciocănești","Ciulnița-Gară","Clătești","Coconi","Codreni","Cojești","Constantin Brâncoveanu","Coslogeni","Coțofanca","Crivăț","Cucuieți","Cunești","Curătești","Curcani","Cuza Vodă","Dâlga","Dâlga-Gară","Dănești","Dârvari","Dichiseni","Dor Mărunt","Dorobanțu","Dorobanțu (Plătărești)","Dragalina","Dragoș Vodă","Drajna Nouă","Fântâna Doamnei","Făurei","Florica","Floroaica","Frăsinet","Frăsinetu de Jos","Frumușani","Fundeni","Fundulea","Gălățui","Gălbinași","Gâldău","Gostilele","Grădiștea","Gruiu","Gurbănești","Iezeru","Ileana","Independența","Înfrățirea","Jegălia","Lehliu","Lehliu-Gară","Libertatea","Luica","Lunca","Lupșanu","Luptători","Măgureni","Mânăstirea","Mărculești-Gară","Măriuța","Mataraua","Mihai Viteazu","Mitreni","Modelu","Nana","Negoești","Nicolae Bălcescu","Nicolae Bălcescu (Alexandru Odobescu)","Nucetu","Nuci","Ogoru","Oltenița","Oltina","Orăști","Ostrovu","Pădurișu","Paicu","Pasărea","Pelinu","Perișoru","Pițigaia","Plătărești","Plevna","Plumbuita","Podari","Podu Pitarului","Polcești","Popești","Postăvari","Potcoava","Preasna","Preasna Veche","Progresu","Radovanu","Radu Negru","Radu Vodă","Rasa","Răsurile","Răzoarele","Răzvani","Roseți","Săcele","Sălcioara","Săndulița","Săpunari","Sărulești","Sărulești-Gară","Satnoeni","Satu Nou","Sătucu","Șeinoiu","Siliștea","Socoalele","Sohatu","Solacolu","Șoldanu","Spanțov","Stancea","Ștefan cel Mare","Ștefan Vodă","Ștefănești","Stoenești","Sultana","Tămădău Mare","Tămădău Mic","Tăriceni","Tonea","Tudor Vladimirescu","Ulmeni","Ulmu","Unirea","Vâlcelele","Valea Argovei","Valea Popii","Valea Presnei","Valea Roșie","Valea Rusului","Valea Seacă","Valea Stânii","Vărăști","Vasilați","Vișinii","Vlad Țepeș","Vlădiceasca","Vlăiculești","Zimbru"]},{"abr":"cs","nume":"Caraș-Severin","localitati":["23 August","Agadici","Anina","Apadia","Armeniș","Arsuri","Băile Herculane","Bănia","Bărbosu","Bârz","Bârza","Băuțar","Baziaș","Belobreșca","Berliște","Berzasca","Berzovia","Bigăr","Biniș","Bocșa","Bogâltin","Bogodinț","Boina","Boinița","Bojia","Bolvașnița","Borlova","Borlovenii Noi","Borlovenii Vechi","Borugi","Bozovici","Brădișoru de Jos","Bratova","Brebu","Brebu Nou","Brestelnic","Brezon","Broșteni","Buchin","Bucoșnița","Bucova","Calina","Câlnic","Camena","Camenița","Câmpia","Cănicea","Caransebeș","Carașova","Cărbunari","Cârnecea","Cârșa Roșie","Cârșie","Căvăran","Cicleni","Ciclova Montană","Ciclova Română","Ciortea","Cireșa","Cireșel","Ciuchici","Ciudanovița","Ciuta","Clocotici","Comorâște","Constantin Daicoviciu","Copăcele","Cornea","Cornereva","Cornișoru","Cornuțel","Coronini","Costiș","Cozia","Cozla","Cracu Almăj","Cracu Mare","Cracu Teiului","Crușovăț","Crușovița","Cuptoare (Cornea)","Cuptoare (Reșița)","Curmătura","Dalboșeț","Dalci","Delinești","Dezești","Divici","Dobraia","Doclin","Dognecea","Dolina","Doman","Domașnea","Drencova","Driștie","Duleu","Eftimie Murgu","Ersig","Ezeriș","Fârliug","Feneș","Fizeș","Forotic","Frăsiniș","Gărâna","Gârbovăț","Gârliște","Gârnic","Gherteniș","Giurgiova","Glimboca","Globu Craiovei","Globurău","Goleț","Gornea","Goruia","Grădinari","Greoni","Gruni","Hora Mare","Hora Mică","Iabalcea","Iablanița","Iam","Iaz","Iertof","Ilidia","Ilova","Ineleț","Izgar","Izvor","Jitin","Jupa","Lăpușnicel","Lăpușnicu Mare","Lescovița","Liborajdea","Lindenfeld","Liubcova","Lucacevăț","Lunca Florii","Lunca Zaicii","Luncavița","Lupac","Măcești","Maciova","Macoviște (Ciuchici)","Macoviște (Cornea)","Măgura","Mal","Marga","Marila","Martinovăț","Măru","Mâtnicu Mare","Măureni","Mehadia","Mehadica","Mercina","Mesteacăn","Milcoveni","Moceriș","Moldova Nouă","Moldova Veche","Moldovița","Moniom","Naidăș","Negiudin","Nermed","Nicolinț","Obița","Obreja","Ocna de Fier","Ogașu Podului","Ohaba-Mâtnic","Ohabița","Oravița","Oțelu Roșu","Padina Matei","Păltiniș","Pârneaura","Pârvova","Pătaș","Pecinișca","Peștere","Petnic","Petrilova","Petroșnița","Plopu","Plugova","Pogara","Pogara de Sus","Poiana","Poiana Lungă","Poiana Mărului","Poienile Boinei","Pojejena","Poneasca","Potoc","Preveciori","Prigor","Prilipeț","Prisaca","Prisacina","Prisian","Prislop (Cornereva)","Prislop (Dalboșeț)","Putna","Răcășdia","Răchita","Răchitova","Radimna","Rafnic","Ramna","Ravensca","Remetea-Pogănici","Reșița","Reșița Mică","Rugi","Ruginosu","Rusca","Rusca Montană","Ruschița","Rusova Nouă","Rusova Veche","Ruștin","Sacu","Sadova Nouă","Sadova Veche","Sălbăgelu Nou","Sasca Montană","Sasca Română","Sat Bătrân","Scăiuș","Scărișoara","Secășeni","Secu","Sfânta Elena","Sichevița","Slatina-Nera","Slatina-Timiș","Soceni","Socol","Socolari","Șopotu Nou","Șopotu Vechi","Șoșdea","Stăncilova","Steierdorf","Știnăpari","Streneac","Strugasca","Studena","Sub Crâng","Sub Margine","Sub Plai","Șumița","Surducu Mare","Șușca","Târnova","Țațu","Teregova","Țerova","Ticvaniu Mare","Ticvaniu Mic","Tincova","Tirol","Topla","Topleț","Turnu Ruieni","Urcu","Valea Bistrei","Valea Bolvașnița","Valea Mare","Valea Minișului","Valea Orevița","Valea Răchitei","Valea Ravensca","Valea Roșie","Valea Sicheviței","Valea Timișului","Valeadeni","Valeapai","Vălișoara","Văliug","Vama Marga","Var","Vărădia","Vârciorova","Verendin","Vermeș","Vodnic","Voislova","Vrani","Vrăniuț","Zăgujeni","Zănogi","Zănou","Zăsloane","Zăvoi","Zbegu","Zervești","Zlagna","Zlatița","Zmogotin","Zoina","Zorile","Zorlencior","Zorlențu Mare"]},{"abr":"cj","nume":"Cluj","localitati":["Agârbiciu","Aghireșu","Aghireșu-Fabrici","Agriș","Aiton","Aluniș","Alunișu","Andici","Antăș","Apahida","Ardeova","Arghișu","Aruncuta","Așchileu","Așchileu Mare","Așchileu Mic","Băbdiu","Băbuțiu","Baciu","Bădeni","Bădești","Băgaciu","Băgara","Băișoara","Băița","Bălcești (Beliș)","Bălcești (Căpușu Mare)","Bărăi","Bârlea","Batin","Bedeciu","Beliș","Berchieșu","Berindu","Bica","Bicălatu","Blidărești","Bobâlna","Bociu","Bodrog","Bogata","Bogata de Jos","Bogata de Sus","Boian","Boj-Cătun","Boju","Bolduț","Bologa","Bonț","Bonțida","Borșa","Borșa-Cătun","Borșa-Crestaia","Borzești","Boteni","Brăișoru","Bucea","Bunești","Buru","Buteni","Buza","Cacova Ierii","Căianu","Căianu Mic","Căianu-Vamă","Călărași","Călărași-Gară","Călata","Călățele","Calna","Cămărașu","Câmpenești","Câmpia Turzii","Căprioara","Căpușu Mare","Căpușu Mic","Cara","Cășeiu","Casele Micești","Cătălina","Câțcău","Cătina","Ceaba","Ceanu Mare","Ceanu Mic","Cerbești","Cerc","Cetan","Cheia","Chesău","Chidea","Chinteni","Chiriș","Chiuiești","Ciubanca","Ciubăncuța","Ciucea","Ciuleni","Ciumăfaia","Ciurgău","Ciurila","Clapa","Cluj-Napoca","Cluj-Napoca ","Coasta","Codor","Cojocna","Colonia","Comorâța","Comșești","Copăceni","Coplean","Copru","Corneni","Cornești","Cornești (Gârbău)","Cornești (Mihai Viteazu)","Corpadea","Corușu","Crăești","Crairât","Cremenea","Crișeni","Cristorel","Cubleșu Someșan","Curtuiușu Dejului","Custura","Cutca","Cuzdrioara","Dăbâca","Dâmbu Mare","Dâmburile","Dâncu","Dângău Mare","Dângău Mic","Dârja","Daroț","Dealu Botii","Dealu Mare","Dealu Negru","Dej","Deleni","Deușu","Dezmir","Diviciorii Mari","Diviciorii Mici","Domoșu","Dorna","Dorolțu","Dosu Bricii","Dosu Napului","Dretea","Dumbrava","Elciu","Escu","Făgetu Ierii","Falca","Fânațe","Făureni","Feiurdeni","Feldioara","Feleacu","Filea de Jos","Filea de Sus","Finciu","Finișel","Fizeșu Gherlii","Florești","Fodora","Frăsinet","Frata","Fundătura","Gădălin","Gârbău","Gârbău Dejului","Geaca","Gheorghieni","Gherla","Ghirișu Român","Ghirolt","Gilău","Giula","Giurcuța de Jos","Giurcuța de Sus","Gligorești","Guga","Hagău","Hășdate (Gherla)","Hășdate (Săvădisla)","Hodăi-Boian","Hodaie","Hodișu","Horlacea","Huci","Huedin","Huta","Iacobeni","Iara","Iclod","Iclozel","Igriția","Inucu","Iuriu de Câmpie","Izvoru Crișului","Jichișu de Jos","Jichișu de Sus","Juc-Herghelie","Jucu","Jucu de Mijloc","Jucu de Sus","Jurca","Lacu","Lăpuștești","Leghia","Legii","Leurda","Lita","Liteni","Livada (Iclod)","Livada (Petreștii de Jos)","Lobodaș","Lujerdiu","Luna","Luna de Jos","Luna de Sus","Lunca Bonțului","Lunca Vișagului","Luncani","Lungești","Macău","Măcicașu","Măgoaja","Măgura Ierii","Măguri","Măguri-Răcătău","Măhal","Maia","Mănăstirea","Mănăstireni","Mănășturel","Mănășturu Românesc","Mărcești","Mărgău","Mărișel","Mărtinești","Mașca","Mera","Mica","Micești","Mihai Viteazu","Mihăiești","Mintiu Gherlii","Moara de Pădure","Mociu","Moldovenești","Morău","Moriști","Morlaca","Morțești","Muncel","Muntele Băișorii","Muntele Bocului","Muntele Cacovei","Muntele Filii","Muntele Rece","Muntele Săcelului","Mureșenii de Câmpie","Nădășelu","Nadășu","Năoiu","Năsal","Nearșova","Negreni","Nicula","Nima","Nireș","Oaș","Ocna Dejului","Ocolișel","Olariu","Orman","Osoi","Oșorhel","Pădurea Iacobeni","Pădureni (Chinteni)","Pădureni (Ciurila)","Pădurenii (Mintiu Gherlii)","Pădurenii (Tritenii de Jos)","Pâglișa","Pălatca","Păniceni","Panticeu","Pata","Peștera","Petea","Petrești","Petreștii de Jos","Petreștii de Mijloc","Petreștii de Sus","Pietroasa","Pintic","Plăiești","Plaiuri","Plopi","Ploscoș","Podeni","Poiana Frății","Poiana Horea","Poieni","Popești","Prelucele","Pruneni","Pruni","Pruniș","Puini","Pustuța","Răchițele","Rădaia","Râșca","Răscruci","Răzbuneni","Răzoare","Recea-Cristur","Rediu","Rogojel","Roșieni","Rotunda","Rugășești","Săcălaia","Săcel","Săcuieu","Salatiu","Sălătruc","Sălicea","Sălișca","Săliște","Săliștea Nouă","Săliștea Veche","Sâmboieni","Sâmboleni","Sâncraiu","Săndulești","Sânmărghita","Sânmărtin","Sânmărtin (Chinteni)","Sânnicoară","Sânpaul","Sântejude","Sântejude-Vale","Sântioana","Sărădiș","Sărata","Șardu","Satu Lung","Șaula","Sava","Săvădisla","Scrind-Frăsinet","Sic","Sicfa","Șigău","Silivaș","Smida","Șoimeni","Șomcutu Mic","Someșu Cald","Someșu Rece","Soporu de Câmpie","Stârcu","Stejeriș","Stoiana","Stolna","Straja (Căpușu Mare)","Straja (Cojocna)","Strâmbu","Strucut","Suarăș","Suatu","Sub Coastă","Suceagu","Sucutard","Sumurducu","Surduc","Șutu","Țaga","Târgușor","Tarnița","Tărpiu","Tăușeni","Tăuți","Ticu","Ticu-Colonie","Tiocu de Jos","Tiocu de Sus","Tioltiur","Topa Mică","Tranișu","Tritenii de Jos","Tritenii de Sus","Tritenii-Hotar","Turda","Turea","Tureni","Turmași","Unguraș","Urca","Urișor","Vad","Vaida-Cămăraș","Vâlcele","Vâlcelele","Vale","Valea Agrișului","Valea Caldă","Valea Cășeielului","Valea Cireșoii","Valea Drăganului","Valea Florilor","Valea Gârboului","Valea Groșilor","Valea Ierii","Valea lui Cati","Valea lui Opriș","Valea Luncii","Valea Ungurașului","Valea Vadului","Văleni (Căianu)","Văleni (Călățele)","Vălișoara","Vânători","Vechea","Viișoara","Vișagu","Vișea","Viștea","Vlaha","Vultureni","Zorenii de Vale"]},{"abr":"ct","nume":"Constanța","localitati":["23 August","2 Mai","Abrud","Adamclisi","Agigea","Albești","Aliman","Almălău","Amzacea","Arsa","Aurora","Băltăgești","Băneasa","Bărăganu","Biruința","Brebeni","Bugeac","Călugăreni","Canlia","Capidava","Carvăn","Căscioarele","Casian","Casicea","Castelu","Cerchezu","Cernavodă","Cetatea","Cheia","Chirnogeni","Ciobănița","Ciobanu","Ciocârlia","Ciocârlia de Sus","Cloșca","Cobadin","Cochirleni","Cogealac","Comana","Conacu","Constanța","Corbu","Coroana","Coslugea","Costinești","Cotu Văii","Crângu","Credința","Crișan","Crucea","Cuiugiuc","Culmea","Cumpăna","Curcani","Cuza Vodă","Darabani","Deleni","Dobromir","Dobromiru din Deal","Dorobanțu","Dropia","Dulcești","Dulgheru","Dumbrăveni","Dunărea","Dunăreni","Eforie","Eforie Nord","Eforie Sud","Esechioi","Făclia","Fântâna Mare","Fântânele","Făurei","Floriile","Furnica","Gălbiori","Galița","Gârliciu","Gârlița","General Scărișoreanu","Gherghina","Ghindărești","Goruni","Grădina","Grăniceru","Gura Dobrogei","Hagieni","Hârșova","Hațeg","Horia","Independența","Ion Corvin","Istria","Ivrinezu Mare","Ivrinezu Mic","Izvoarele","Izvoru Mare","Jupiter","Lanurile","Lazu","Lespezi","Limanu","Lipnița","Lumina","Luminița","Măgura","Mamaia","Mamaia-Sat","Mangalia","Medgidia","Mereni","Mihai Viteazu","Mihail Kogălniceanu","Miorița","Mircea Vodă","Mireasa","Miriștea","Moșneni","Movila Verde","Movilița","Murfatlar","Năvodari","Nazarcea","Negrești","Negru Vodă","Negureni","Neptun","Nicolae Bălcescu","Nisipari","Nistorești","Nuntași","Oituz","Olimp","Olteni","Oltina","Osmancea","Ostrov","Ovidiu","Pădureni","Palazu Mare","Palazu Mic","Pantelimon","Pantelimon de Jos","Pecineaga","Pelinu","Peștera","Petroșani","Piatra","Pietreni","Plopeni","Poarta Albă","Poiana","Potârnichea","Râmnicu de Jos","Râmnicu de Sus","Rariștea","Rasova","Răzoarele","Remus Opreanu","Runcu","Săcele","Saligny","Sanatoriul Agigea","Saraiu","Satu Nou (Mircea Vodă)","Satu Nou (Oltina)","Saturn","Schitu","Seimeni","Seimenii Mici","Sibioara","Siliștea","Siminoc","Sinoie","Șipotele","Șiriu","Stațiunea Zoologică Marină Agigea","Ștefan cel Mare","Stejaru","Straja","Strunga","Stupina","Târgușor","Tariverde","Tătaru","Techirghiol","Țepeș Vodă","Țibrinu","Tichilești","Topalu","Topraisar","Tortoman","Traian","Tudor Vladimirescu","Tufani","Tuzla","Urluia","Vadu","Vadu Oii","Vâlcelele","Valea Dacilor","Văleni","Valu lui Traian","Vama Veche","Vânători","Vârtop","Venus","Veteranu","Viile","Viișoara","Viroaga","Vlahii","Vulturu","Zorile"]},{"abr":"cv","nume":"Covasna","localitati":["Aita Mare","Aita Medie","Aita Seacă","Albiș","Alungeni","Angheluș","Aninoasa","Araci","Arcuș","Ariușd","Băcel","Baraolt","Barcani","Bățani","Bățanii Mari","Bățanii Mici","Belani","Belin","Belin-Vale","Biborțeni","Bicfalău","Bita","Bixad","Bodoc","Bodoș","Boroșneu Mare","Boroșneu Mic","Brădet","Brăduț","Brateș","Brețcu","Calnic","Căpeni","Cărpinenii","Cașinu Mic","Catalina","Cernat","Chichiș","Chilieni","Chiuruș","Comandău","Coșeni","Covasna","Crasna","Dalnic","Dobârlău","Dobolii de Jos","Dobolii de Sus","Doboșeni","Estelnic","Filia","Floroaia","Fotoș","Ghelința","Ghidfalău","Hăghig","Harale","Hătuica","Herculian","Hetea","Hilib","Iarăș","Icafalău","Ilieni","Imeni","Întorsura Buzăului","Lădăuți","Lemnia","Leț","Lisnău","Lisnău-Vale","Lunca Mărcușului","Lunca Ozunului","Lunga","Lutoasa","Măgheruș","Malnaș","Malnaș-Băi","Mărcuș","Mărcușa","Mărtănuș","Mărtineni","Mereni","Merișor","Micfalău","Micloșoara","Moacșa","Oituz","Ojdula","Olteni","Ozun","Ozunca-Băi","Pachia","Pădureni","Păpăuți","Peteni","Petriceni","Poian","Racoșul de Sus","Reci","Saciova","Sâncraiu","Sântionlunca","Sânzieni","Sărămaș","Scrădoasa","Sfântu Gheorghe","Sita Buzăului","Surcea","Tălișoara","Tamașfalău","Târgu Secuiesc","Telechia","Țufalău","Turia","Vâlcele","Valea Crișului","Valea Dobârlăului","Valea Mare","Valea Mică","Valea Scurtă","Valea Seacă","Valea Zălanului","Vârghiș","Zăbala","Zăbrătău","Zagon","Zălan","Zoltan"]},{"abr":"db","nume":"Dâmbovița","localitati":["Adânca","Aluniș","Alunișu","Aninoasa","Aninoșani","Băcești","Bădeni","Bădulești","Bălănești","Bâldana","Băleni","Băleni-Români","Băleni-Sârbi","Bălteni","Bănești","Bărăceni","Bărbuceanu","Bărbulețu","Bechinești","Bela","Berevoești","Bezdead","Bilciurești","Blidari","Boboci","Bolovani","Boteni","Brădățel","Brâncoveanu","Brănești","Braniștea","Brăteștii de Jos","Brebu","Brezoaele","Brezoaia","Broșteni (Bezdead)","Broșteni (Produlești)","Broșteni (Vișina)","Buciumeni","Bucșani","Bujoreanca","Bumbuia","Bungetu","Burduca","Butimanu","Butoiu de Jos","Butoiu de Sus","Călugăreni (Cobia)","Călugăreni (Conțești)","Cândești","Cândești-Deal","Cândești-Vale","Căprioru","Căpșuna","Capu Coastei","Cârlănești","Catanele","Cătunu (Cornești)","Cătunu (Sălcioara)","Cazaci","Cetățuia","Chirca","Ciocănari","Ciocănești","Coada Izvorului","Cobia","Cobiuța","Cocani","Cojasca","Cojocaru","Cojoiu","Colacu","Colanu","Colibași","Comișani","Conțești","Copăceni","Corbii Mari","Cornățelu","Cornești","Corni","Costești","Costeștii din Deal","Costeștii din Vale","Costișata","Crăciunești","Crângași","Crângurile","Crângurile de Jos","Crângurile de Sus","Crețu","Crețulești","Crevedia","Cricovu Dulce","Cristeasca","Crivățu","Croitori","Crovu","Cucuteni","Cuparu","Cuza Vodă","Dâmbovicioara","Dărmănești","Dârza","Dealu Frumos","Dealu Mare","Decindea","Decindeni","Diaconești","Dimoiu","Dobra","Dobrești","Doicești","Dospinești","Drăgăești-Pământeni","Drăgăești-Ungureni","Dragodana","Dragodănești","Dragomirești","Dumbrava","După Deal","Făgetu","Fântânele","Ferestre","Fețeni","Fieni","Fierbinți","Finta","Finta Mare","Finta Veche","Frasin-Deal","Frasinu","Frasin-Vale","Fusea","Găești","Gămănești","Gârleni","Geangoești","Gemenea-Brătulești","Gheboaia","Gheboieni","Ghergani","Gherghești","Gherghițești","Ghimpați","Ghinești","Ghirdoveni","Glod","Glodeni","Glodeni (Pucioasa)","Glogoveanu","Gorgota","Greci","Grozăvești","Gulia","Gura Bărbulețului","Gura Foii","Gura Ocniței","Gura Șuții","Gura Vulcanei","Gușoiu","Hăbeni","Hagioaica","Hanu lui Pală","Heleșteu","Hodărăști","Hulubești","I. L. Caragiale","Iazu","Ibrianu","Iedera","Iedera de Jos","Iedera de Sus","Ilfoveni","Ionești","Izvoarele","Izvoru (Valea Lungă)","Izvoru (Vișina)","Jugureni","Lăculețe","Lăculețe-Gară","Lazuri","Livezile (Glodeni)","Livezile (Valea Mare)","Lucianca","Lucieni","Ludești","Lunca (Moroeni)","Lunca (Voinești)","Lungulețu","Măgura (Bezdead)","Măgura (Hulubești)","Malu cu Flori","Malu Mierii","Malurile","Mânăstioara","Mânăstirea","Mănăstirea","Mănești","Manga","Mânjina","Mărcești","Mărginenii de Sus","Mărunțișu","Mătăsaru","Matraca","Mavrodin","Meișoare","Mereni (Conțești)","Mereni (Titu)","Merii","Merișoru","Mesteacăn","Micloșanii Mari","Micloșanii Mici","Miculești","Mija","Miloșari","Mircea Vodă","Mislea","Miulești","Moara din Groapă","Moara Nouă","Mogoșani","Mogoșești","Moreni","Moroeni","Morteni","Moșia Mică","Moțăieni","Movila (Niculești)","Movila (Sălcioara)","Mușcel","Neajlovu","Nicolaești","Niculești","Nisipurile","Nucet","Ochiuri","Ocnița","Odaia Turcului","Odobești","Olteni (Lucieni)","Olteni (Uliești)","Oncești","Oreasca","Pădureni","Pătroaia-Deal","Pătroaia-Vale","Perșinari","Petrești","Petrești (Corbii Mari)","Piatra","Picior de Munte","Pietrari","Pietroșița","Pitaru","Plopu","Podu Corbencii","Podu Cristinii","Podu Rizii","Poiana","Poienița","Poroinica","Postârnacu","Potlogeni-Deal","Potlogeni-Vale","Potlogi","Potocelu","Priboiu (Brănești)","Priboiu (Tătărani)","Priseaca","Produlești","Pucheni","Pucheni (Moroeni)","Pucioasa","Pucioasa-Sat","Puntea de Greci","Puțu cu Salcie","Răcari","Raciu","Racovița","Ragu","Râncăciov","Răscăeți","Rățești","Rățoaia","Râu Alb","Râu Alb de Jos","Râu Alb de Sus","Răzvad","Românești","Runcu","Săbiești","Săcueni","Sălcioara","Sălcioara (Mătăsaru)","Sălcuța","Samurcași","Saru","Săteni","Satu Nou","Săvești","Scheiu de Jos","Scheiu de Sus","Schela","Șelaru","Șerbăneasa","Serdanu","Siliștea (Raciu)","Siliștea (Runcu)","Șipot","Slobozia","Slobozia Moară","Șotânga","Speriețeni","Stănești","Stătești","Stavropolia","Străoști","Stratonești","Ștubeie Tisa","Suduleni","Sultanu","Suseni-Socetu","Șuța Seacă","Șuvița","Târgoviște","Tărtășești","Tătărani","Teiș","Telești","Tețcoiu","Titu","Toculești","Tomșani","Tunari","Udrești","Uliești","Ulmetu","Ulmi","Ungureni (Butimanu)","Ungureni (Corbii Mari)","Ungureni (Cornești)","Ungureni (Dragomirești)","Urseiu","Urziceanca","Văcărești","Vadu Stanchii","Valea","Valea Caselor","Valea Dadei","Valea Largă","Valea Leurzii","Valea lui Dan","Valea Lungă","Valea Lungă-Cricov","Valea Lungă-Gorgota","Valea Lungă-Ogrea","Valea Mare","Valea Mare (Cândești)","Valea Mare (Valea Lungă)","Valea Morii","Valea Voievozilor","Văleni-Dâmbovița","Vârfureni","Vârfuri","Viforâta","Viișoara","Vișina","Vișinești","Vizurești","Vlădeni","Vlăsceni","Voia","Voinești","Vulcana de Sus","Vulcana-Băi","Vulcana-Pandele","Vultureanca","Zăvoiu","Zidurile"]},{"abr":"dj","nume":"Dolj","localitati":["Adâncata","Afumați","Albești","Almăj","Almăjel","Amărăști","Amărăștii de Jos","Amărăștii de Sus","Apele Vii","Argetoaia","Bădoși","Băilești","Balasan","Balota de Jos","Balota de Sus","Bâlta","Balta Verde","Băranu","Bărboi","Bârca","Basarabi","Bașcov","Bâzdâna","Bechet","Bechet (Orodel)","Beharca","Belcinu","Beloț","Benești","Berbeșu","Bistreț","Bistrețu Nou","Bobeanu","Bodăiești","Bodăieștii de Sus","Bogea","Bojoiu","Booveni","Botoșești-Paia","Boureni","Brabeți","Brabova","Brădești","Brădeștii Bătrâni","Braloștița","Brândușa","Braniște (Daneți)","Braniște (Filiași)","Braniște (Podari)","Bratovoești","Breasta","Bucicani","Bucovăț","Bucovicior","Bujor","Bulzești","Bușteni","Busu","Busulețu","Buzduc","Căciulătești","Căciulatu","Calafat","Călărași","Călinești","Calopăr","Călugărei","Câmpeni","Caraiman","Caraula","Cârcea","Cârligei","Cârna","Carpen","Cârstovani","Căruia","Castranova","Castrele Traiane","Catane","Catanele Noi","Celaru","Cerăt","Cernat","Cernătești","Cetate","Cetățuia (Cioroiași)","Cetățuia (Vela)","Chiașu","Ciocanele","Ciocănești","Cioroiași","Cioroiu Nou","Ciupercenii Noi","Ciupercenii Vechi","Ciutura","Cleanov","Comănicea","Comoșteni","Corlate","Cornetu","Cornița","Cornu","Coșereni","Coșoveni","Coțofenii din Dos","Coțofenii din Față","Cotu","Covei","Craiova","Criva","Crovna","Curmătura","Dăbuleni","Daneți","Deleni","Desa","Desnățui","Dioști","Dobrești","Dobridor","Dobromira","Dobrotești","Domnu Tudor","Drăgoaia","Drăgotești","Drănic","Dudovicești","Duțulești","Făcăi","Făget","Fântânele (Radovan)","Fântânele (Teslui)","Fântâni","Fărcaș","Filaret","Filiași","Floran","Florești","Foișor","Frasin","Frățila","Fratoștița","Gabru","Gaia","Galicea Mare","Galiciuica","Gângiova","Gârlești","Geblești","Georocel","Georocu Mare","Ghercești","Ghidici","Ghindeni","Ghizdăvești","Gighera","Giubega","Giurgița","Godeni","Gogoșești","Gogoșița","Gogoșu","Goicea","Goiești","Golenți","Golfin","Golumbelu","Golumbu","Grădiștea","Grecești","Gropanele","Gruița","Gubaucea","Gura Racului","Gura Văii","Horezu-Poenari","Hunia","Înfrățirea","Întorsura","Iordăchești","Ișalnița","Italieni","Izvoare","Izvor","Jieni","Jiul","Lăcrița Mare","Lăcrița Mică","Lânga","Lazu","Leamna de Jos","Leamna de Sus","Leordoasa","Leșile","Leu","Lipovu","Lipovu de Sus","Lișteava","Livezi","Locusteni","Luncșoru","Măceșu de Jos","Măceșu de Sus","Maglavit","Mălăești","Malaica","Malu Mare","Malumnic","Mărăcinele","Marotinu de Jos","Marotinu de Sus","Mârșani","Mârza","Melinești","Meteu","Mihăița","Milești","Milovan","Mischii","Mlecănești","Mofleni","Moflești","Mogoșești","Moreni","Mosna","Moșneni","Moțăței","Moțăței-Gară","Motoci","Muereni","Muierușu","Murgași","Murta","Nedeia","Negoi","Negoiești","Nisipuri","Nistoi","Novac","Obedin","Ocolna","Odoleni","Ohaba","Orodel","Ostroveni","Padea","Palilula","Panaghia","Pereni","Perișor","Picăturile","Pielești","Pietroaia","Piorești","Piria","Piscani","Piscu Lung","Piscu Nou","Piscu Sadovei","Piscu Vechi","Pisculeț","Plenița","Pleșoi","Plopșor","Plopu-Amărăști","Plosca","Ploștina","Podari","Poiana Fântânii","Poiana Mare","Poienile","Pometești","Popânzălești","Popeasa","Popești","Popoveni","Potmelțu","Prapor","Preajba","Preajba de Jos","Preajba de Pădure","Predești","Predeștii Mici","Prejoi","Prunet","Puținei","Puțuri","Răcarii de Jos","Răcarii de Sus","Răchita de Jos","Răchita de Sus","Racovița","Radomir","Radovan","Rasnicu Bătrân","Rasnicu Oghian","Rast","Robănești","Robăneștii de Jos","Robăneștii de Sus","Rojiște","Românești","Roșieni","Rupturile","Sadova","Salcia","Sălcuța","Sălcuța (Calopăr)","Săliște","Săpata","Sărata","Sărbătoarea","Sârsca","Scăești","Schitu","Seaca de Câmp","Seaca de Pădure","Secu","Secui","Seculești","Segarcea","Segleț","Sfircea","Siliștea Crucii","Șimnicu de Jos","Șimnicu de Sus","Șitoaia","Smadovicioara de Secu","Smârdan","Soceni","Sopot","Soreni","Spineni","Ștefănel","Știubei","Stoicești","Suharu","Șumandra","Tălpaș","Tâmburești","Țandăra","Târnava","Țărțăl","Tatomirești","Teasc","Teascu din Deal","Teiu","Tencănău","Terpezița","Teslui","Țiu","Toceni","Țuglui","Tunarii Noi","Tunarii Vechi","Ungureni","Ungurenii Mici","Unirea","Urdinița","Urechești","Urieni","Ursoaia","Urzica Mare","Urzicuța","Uscăci","Valea Fântânilor","Valea lui Pătru","Valea Lungului","Valea Mare","Valea Muierii de Jos","Valea Stanciului","Vârtop","Vârvor","Vârvoru de Jos","Vela","Veleni","Velești","Verbicioara","Verbița","Viișoara","Viișoara-Moșneni","Vladimir","Voita","Zănoaga","Zăval","Zlătari","Zvorsca"]},{"abr":"gl","nume":"Galați","localitati":["Adam","Aldești","Bălăbănești","Bălășești","Băleni","Balintești","Băltăreți","Băneasa","Barcea","Berești","Berești-Meria","Blânzi","Brăhășești","Brănești","Braniștea","Braniștea (Nicorești)","Brătulești","Bucești","Buciumeni","Bursucani","Călmățui","Cărăpcești","Cârlomănești","Căuiești","Cavadinești","Cerțești","Chiraftei","Ciorăști","Cișmele","Ciurești","Ciureștii Noi","Coasta Lupei","Comănești","Condrea","Corcioveni","Corni","Corod","Cosițeni","Cosmești","Cosmeștii-Vale","Costache Negri","Costi","Cotoroaia","Crăiești","Crângeni","Cruceanu","Cuca","Cudalbi","Cuza Vodă","Dobrinești","Drăgănești","Drăgușeni","Fântânele","Fântâni","Fârțănești","Foltești","Frumușița","Frunzeasca","Fundeanu","Fundeni","Fundenii Noi","Furcenii Noi","Furcenii Vechi","Galați","Gănești","Gara Berheci","Gara Ghidigeni","Gârbovăț","Gefu","Ghidigeni","Ghinghești","Gohor","Grivița","Grozăvești","Gura Gârbovățului","Hănțești","Hanu Conachi","Huștiu","Ijdileni","Independența","Ionășești","Ireasca","Ivești","Izvoarele","Jorăști","Liești","Liești (Priponești)","Lozova","Lunca","Lungești","Lungoci","Lupele","Măcișeni","Malu Alb","Mălureni","Mândrești","Măstăcani","Matca","Mihail Kogălniceanu","Moscu","Movileni","Movileni (Șendreni)","Munteni","Nămoloasa","Nămoloasa-Sat","Nărtești","Negrea","Negrilești","Nicopole","Nicorești","Oancea","Odaia Manolache","Onciu","Pechea","Piscu","Piscu Corbului","Pleșa","Plevna","Podoleni","Poiana","Poșta","Priponești","Priponeștii de Jos","Prodănești","Pupezeni","Puricani","Rădești","Rediu","Rogojeni","Roșcani","Salcia","Sârbi","Săseni","Satu Nou","Scânteiești","Schela","Șendreni","Șerbeștii Vechi","Siliștea","Șipote","Șivița","Slivna","Slobozia Blăneasa","Slobozia Conachi","Slobozia Corni","Slobozia Oancea","Smârdan","Smulți","Știețești","Stoicani","Suceveni","Suhurlui","Tălpigi","Tămăoani","Tăplău","Târgu Bujor","Tătarca","Tecucelu Sec","Tecuci","Țepu","Țepu de Sus","Țigănești","Toflea","Torcești","Traian","Tudor Vladimirescu","Tulucești","Umbrărești","Umbrărești (Târgu Bujor)","Umbrărești-Deal","Ungureni","Urlești","Vădeni","Valea Mărului","Vameș","Vânători","Vârlezi","Vasile Alecsandri","Viile","Vișina","Vizurești","Vlădești","Zărnești","Zimbru"]},{"abr":"gr","nume":"Giurgiu","localitati":["Adunații-Copăceni","Anghelești","Bâcu","Bălanu","Băneasa","Bănești","Bila","Bolintin-Deal","Bolintin-Vale","Brăniștari","Braniștea","Bucșani","Budeni","Bulbucata","Buturugeni","Călugăreni","Cămineasca","Câmpurelu","Carapancea","Cărpenișu","Cartojani","Căscioarele (Găiseni)","Căscioarele (Ulmi)","Cetatea","Cetățuia","Chirculești","Chiriacu","Clejani","Colibași","Comana","Comasca","Copaciu","Corbeanca","Cosoba","Coteni","Crânguri","Crevedia Mare","Crevedia Mică","Crivina","Crucea de Piatră","Cucuruzu","Cupele","Daia","Dărăști-Vlașca","Dealu","Dimitrie Cantemir","Dobreni","Drăgăneasca","Drăgănescu","Drăghiceanu","Făcău","Falaștoaca","Florești","Florești-Stoenești","Frasinu","Frătești","Găiseanca","Găiseni","Găujani","Ghimpați","Ghionea","Ghizdaru","Giurgiu","Gogoșari","Goleasca","Gorneni","Gostinari","Gostinu","Grădinari","Grădiștea","Greaca","Herăști","Hobaia","Hodivoaia","Hotarele","Hulubești","Ianculești","Icoana","Iepurești","Isvoarele","Izvoarele","Izvoru (Gogoșari)","Izvoru (Vânătorii Mici)","Joița","Letca Nouă","Letca Veche","Malu","Malu Spart","Mârșa","Mihai Bravu","Mihai Vodă","Mihăilești","Milcovățu","Miloșești","Mirău","Mironești","Mogoșești","Moșteni","Naipu","Neajlovu","Novaci","Obedeni","Ogrezeni","Oinacu","Oncești","Pădureni","Palanca","Petru Rareș","Pietrele","Pietrișu","Plopșoru","Podișor","Podu Doamnei","Podu Ilfovățului","Podu Popa Nae","Poenari","Poiana lui Stângă","Popești","Poșta","Priboiu","Prundu","Puieni","Putineiu","Puțu Greci","Radu Vodă","Rălești","Răsuceni","Remuș","Roata de Jos","Roata Mică","Săbăreni","Sadina","Satu Nou","Schitu","Sfântu Gheorghe (Băneasa)","Sfântu Gheorghe (Crevedia Mare)","Singureni","Slobozia","Stâlpu","Stănești","Stejaru","Sterea","Stoenești","Stoenești (Florești-Stoenești)","Suseni","Tântava","Teișori","Teiușu","Tomulești","Toporu","Trestieni","Uiești","Ulmi","Uzunu","Vadu Lat","Vâlcelele","Valea Bujorului","Valea Dragului","Valea Plopilor","Valter Mărăcineanu","Vânătorii Mari","Vânătorii Mici","Vărăști","Varlaam","Vedea","Vieru","Vlad Țepeș","Vlașin","Zădăriciu","Zboiu","Zorile"]},{"abr":"gj","nume":"Gorj","localitati":["Albeni","Alexeni","Alimpești","Aluniș","Andreești","Aninișu din Deal","Aninișu din Vale","Aninoasa","Apa Neagră","Arcani","Arjoci","Arpadia","Arșeni","Arsuri","Artanu","Băcești","Bădești","Baia de Fier","Bălăcești","Bălănești","Bălani","Bălcești","Bălești","Baloșani","Bâlta","Bâlteni","Bâltișoara","Baniu","Bărbătești","Bârcaciu","Bârsești","Barza","Bârzeiu","Bârzeiu de Gilort","Băzăvani","Becheni","Bengești","Bengești-Ciocadia","Bercești","Berlești","Bibești","Bibulești","Bircii","Blahnița de Jos","Blahnița de Sus","Blidari","Bobaia","Boboiești","Bobu","Boca","Bohorel","Boia","Bojinu","Bolboasa","Bolbocești","Bolboși","Borăscu","Boroșteni","Botorogi","Brădet","Brădețel","Brădiceni","Brănești","Brătești","Brătuia","Brebenei","Broșteni","Broștenii de Sus","Bucșana","Bucureasa","Budieni","Buduhala","Bulbuceni","Bumbești-Jiu","Bumbești-Pițic","Burlani","Bustuchin","Busuioci","Buzești","Calapăru","Câlcești","Călești","Câlnic","Câlnicu de Sus","Călugăreasa","Călugăreni","Câmpofeni","Câmpu Mare","Cămuiești","Cânepești","Căpreni","Capu Dealului","Cârbești","Cărbunești-Sat","Cârciu","Cârligei","Cărpiniș","Cartiu","Cătunele","Ceauru","Celei","Ceplea","Cerătu de Copăcioasa","Cernădia","Cerna-Sat","Cetatea","Chiciora","Chiliu","Ciocadia","Cionți","Ciorari","Ciuperceni","Ciupercenii de Olteț","Cleșnești","Cloșani","Cocoreni","Cocorova","Cojani","Cojmănești","Colibași","Colțești","Condeiești","Copăcioasa","Cornești","Cornetu","Corobăi","Corșoru","Costeni","Costești","Covrigi","Crasna","Crasna din Deal","Crețești","Croici","Crușeț","Curpen","Cursaru","Curteana","Curtișoara","Dâmbova","Dănciulești","Dănești","Dealu Leului","Dealu Pomilor","Dealu Spirei","Dealu Viei","Dealu Viilor","Deleni","Didilești","Dobrana","Dobrița","Dolcești","Doseni","Drăgoeni","Drăgoiești","Drăgotești","Drăguțești","Duculești","Dumbrăveni","Fântânele","Fărcășești","Fărcășești-Moșneni","Floreșteni","Florești","Frâncești","Frasin","Frătești","Frumușei","Frunza","Gâlcești","Găleșoaia","Gămani","Gârbovu","Găvănești","Gilortu","Glodeni","Glogova","Godinești","Gornăcel","Gornovița","Groșerea","Grui","Gura Șușiței","Gura-Menți","Gureni","Hăiești","Hălăngești","Hirișești","Hobița","Hodoreasca","Horăști","Horezu","Hotăroasa","Hurezani","Iași-Gorj","Iezureni","Igirosu","Iliești","Însurăței","Ionești","Iormănești","Isvarna","Izvoarele","Jeriștea","Jilțu","Jupânești","Larga","Lăzărești","Lazuri","Lelești","Leurda","Licurici","Lihulești","Lintea","Logrești","Logrești-Moșteni","Lupoaia","Lupoița","Măceșu","Magherești","Măiag","Marinești","Măru","Mătăsari","Măzăroi","Menții din Dos","Merfulești","Miclosu","Miculești","Mielușei","Mierea","Miericeaua","Miluta","Mirosloveni","Mogoșani","Moi","Motorgi","Motru","Motru Sec","Murgești","Murgilești","Musculești","Mușetești","Nămete","Negoiești","Negomir","Negreni","Nistorești","Novaci","Nucetu","Obârșia","Obreja","Ohaba","Ohaba-Jiu","Olari","Olteanu","Orzești","Orzu","Padeș","Păișani","Păjiștele","Paltinu","Pârâu","Pârâu Boia","Pârâu de Pripor","Pârâu de Vale","Pârâu Viu","Pârvulești","Pegeni","Peșteana de Jos","Peșteana-Jiu","Peșteana-Vulcan","Peștișani","Petrăchei","Petrești","Picu","Pieptani","Pinoasa","Piscoiu","Piscuri","Pișteștii din Deal","Pleșa","Plopșoru","Plopu","Ploștina","Pociovaliștea","Pocruia","Poiana","Poiana-Seciuri","Poienari","Poienița","Pojaru","Pojogeni","Polata","Polovragi","Popești","Popești-Stejari","Preajba Mare","Prigoria","Priporu","Prunești","Purcaru","Răchiți","Raci","Racoți","Racovița","Rădinești","Radoși","Râpa","Rasova","Rasovița","Rătez","Rogojel","Rogojeni","Romanești","Roșia de Amaradia","Roșia-Jiu","Roșiuța","Rovinari","Ruget","Rugi","Runcu","Runcurel","Săcelu","Samarinești","Sâmbotin","Sănătești","Sârbești","Sărdănești","Șasa","Satu Nou","Săulești","Schela","Scoarța","Scorușu","Scrada","Scurtu","Seaca","Seciurile","Seuca","Șiacu","Șipotu","Sitești","Șitoaia","Slămnești","Slăvuța","Slivilești","Slobozia","Socu","Sohodol","Șomănești","Spahii","Stăncești","Stăncești-Larga","Stănești","Ștefănești","Steic","Stejari","Stejaru","Stejerei","Sterpoaia","Știucani","Stoina","Stolojani","Strâmba-Jiu","Strâmba-Vulcan","Strâmtu","Stroiești","Sura","Suseni","Tălpășești","Tâlvești","Tămășești","Țânțăreni","Țârculești","Târgu Cărbunești","Târgu Jiu","Târgu Logrești","Tehomir","Telești","Tetila","Țicleni","Timișeni","Țirioi","Tismana","Toiaga","Topești","Totea","Totea de Hurezani","Trestioara","Trocani","Turburea","Turceni","Turcinești","Ulmet","Ungureni","Urda de Jos","Urda de Sus","Urdari","Urechești","Ursați","Ursoaia","Văcarea","Văgiulești","Vaidei","Văieni","Vălari","Vâlceaua","Vâlcele","Valea","Valea Bisericii","Valea cu Apă","Valea Deșului","Valea Mânăstirii","Valea Mare","Valea Mică","Valea Motrului","Valea Perilor","Valea Poienii","Valea Pojarului","Valea Racilor","Valea Viei","Văleni","Văluța","Vânăta","Vârtopu","Vidin","Vierșani","Vladimir","Vlăduleni","Voinigești","Voiteștii din Deal","Voiteștii din Vale","Zăicoiu","Zorlești","Zorzila"]},{"abr":"hg","nume":"Harghita","localitati":["Miercurea-Ciuc","Aldea","Alexandrița","Aluniș","Andreeni","Armășeni","Armășenii Noi","Arvățeni","Atia","Atid","Avrămești","Bădeni","Băile Chirui","Băile Homorod","Băile Tușnad","Bălan","Bancu","Barațcoș","Bârzava","Becaș","Bențid","Beta","Betești","Bilbor","Bisericani","Bodogaia","Borsec","Borzont","Brădești","Bucin (Joseni)","Bucin (Praid)","Bulgăreni","Cădaciu Mare","Cădaciu Mic","Călimănel","Călnaci","Calonda","Călugăreni","Căpâlnița","Capu Corbului","Carpitus","Cârța","Casinu Nou","Cechești","Cehețel","Cetățuia","Chedia Mare","Chedia Mică","Chileni","Chinușu","Ciaracio","Ciba","Ciceu","Ciobăniș","Cireșeni","Ciucani","Ciucsângeorgiu","Ciumani","Cobătești","Comănești","Comiat","Corbu","Corund","Cotormani","Covacipeter","Cozmeni","Crăciunel","Crișeni","Cristuru Secuiesc","Cușmed","Daia","Dănești","Dârjiu","Dealu","Dealu Armanului","Dejuțiu","Delnița","Desag","Ditrău","Dobeni","Duda","Eghersec","Eliseni","Făgețel (Frumoasa)","Făgețel (Remetea)","Fâncel","Fântâna Brazilor","Feliceni","Filiaș","Filpea","Firtănuș","Firtușu","Fitod","Forțeni","Frumoasa","Fundoaia","Gălăuțaș","Gălăuțaș-Pârău","Gârciu (Racu)","Gheorgheni","Ghiduț","Ghipeș","Ghiurche","Goagiu","Hagota","Harghita-Băi","Hodoșa","Hoghia","Hosasău","Iacobeni","Iașu","Ighiu","Imper","Ineu","Inlăceni","Izvoare","Izvoru Mureșului","Izvorul Trotușului","Jigodin-Băi","Jolotca","Joseni","Lacu Roșu","Lăzarea","Lăzărești","Laz-Firtănuș","Laz-Șoimuș","Leliceni","Liban","Livezi","Locodeni","Lueta","Lunca de Jos","Lunca de Sus","Luncani","Lupeni","Lutița","Mădăraș","Măgheruș","Mărtiniș","Martonca","Mătișeni","Medișoru Mare","Medișoru Mic","Merești","Mihăileni","Mihăileni (Șimonești)","Minele Lueta","Misentea","Moglănești","Morăreni","Mugeni","Mujna","Nădejdea","Nicoleni","Nicolești (Frumoasa)","Nicolești (Ulieș)","Nuțeni","Obrănești","Ocland","Ocna de Jos","Ocna de Sus","Odorheiu Secuiesc","Orășeni","Oțeni","Păltiniș","Păltiniș-Ciuc","Păuleni","Păuleni-Ciuc","Petecu","Petreni","Pintic","Plăieșii de Jos","Plăieșii de Sus","Platonești","Plopiș","Poiana Fagului","Poiana Târnavei","Polonița","Porumbeni","Porumbenii Mari","Porumbenii Mici","Potiond","Praid","Preluca","Puntea Lupului","Răchitiș","Racu","Rareș","Recea","Remetea","Rugănești","Runc","Săcel","Sâncel","Sâncrai","Sâncrăieni","Sândominic","Sânmartin","Sânpaul","Sânsimion","Sântimbru","Sântimbru-Băi","Sărmaș","Șașvereș","Satu Mare","Satu Mic","Satu Nou (Ocland)","Secu","Secuieni","Senetea","Șicasău","Șiclod","Siculeni","Șimonești","Sineu","Șoimeni","Șoimușu Mare","Șoimușu Mic","Sub Cetate","Subcetate","Suseni","Tăietura","Tămașu","Tărcești","Târnovița","Tăureni","Teleac","Țengheler","Tibod","Toleșeni","Tomești","Toplița","Tulgheș","Turdeni","Tușnad","Tușnadu Nou","Uilac","Ulcani","Ulieș","Văcărești","Vâgani","Vale","Valea Boroș","Valea Capelei","Valea Gârbea","Valea Întunecoasă","Valea lui Antaloc","Valea lui Pavel","Valea Rece","Valea Rotundă","Valea Strâmbă","Valea Ugra","Valea Uzului","Văleni","Vargatac","Vărșag","Vasileni","Vidacut","Visafolio","Vlăhița","Voșlăbeni","Vrabia","Zăpodea","Zencani","Zetea"]},{"abr":"hd","nume":"Hunedoara","localitati":["Abucea","Almășel","Almaș-Săliște","Almașu Mic","Almașu Mic de Munte","Almașu Sec","Alun (Boșorod)","Alun (Bunila)","Aninoasa","Arănieș","Archia","Ardeu","Aurel Vlaicu","Băcâia","Bacea","Băcia","Baia de Criș","Băiești","Băița","Bălata","Baldovin","Balomir","Balșa","Bănița","Banpotoc","Bărăștii Hațegului","Bărăștii Iliei","Barbura","Bârcea Mare","Bârcea Mică","Bârsău","Baru","Barza","Basarabasa","Baștea","Bățălar","Batiz","Bătrâna","Bejan","Bejan-Târnăvița","Bercu","Beriu","Birtin","Blăjeni","Blăjeni-Vulcan","Bobaia","Bobâlna","Bocșa Mare","Bocșa Mică","Boholt","Boia Bârzii","Boița","Boiu","Boiu de Jos","Boiu de Sus","Boș","Boșorod","Boz","Bozeș","Brad","Brădățel","Brănișca","Brășeu","Brazi","Brâznic","Breazova","Bretea Mureșană","Bretea Română","Bretea Streiului","Bretelin","Brotuna","Buceș","Buceș-Vulcan","Bucium","Bucium-Orlea","Bucureșci","Bujoru","Bulzeștii de Jos","Bulzeștii de Sus","Bunești","Bunila","Burjuc","Căbești","Căinelu de Jos","Căinelu de Sus","Călan","Călanu Mic","Câmpu lui Neag","Câmpuri de Sus","Câmpuri-Surduc","Căoi","Căraci","Cărăstău","Cârjiți","Cărmăzănești","Cârnești","Cărpiniș","Căstău","Căzănești","Cerbăl","Cerbia","Cerișor","Cernișoara Florese","Certeju de Jos","Certeju de Sus","Chergheș","Chimindia","Chișcădaga","Chitid","Cigmău","Cimpa","Cinciș-Cerna","Cioclovina","Ciopeia","Ciula Mare","Ciula Mică","Ciulpăz","Ciumița","Ciungani","Ciungu Mare","Clopotiva","Coaja","Copaci","Coroiești","Cosești","Costești","Costești-Deal","Covragiu","Cozia","Crăciunești","Crăguiș","Criș","Crișan","Crișcior","Cristur","Criva","Crivadia","Cucuiș","Cuieș","Curechiu","Curpenii Silvașului","Cutin","Dăbâca","Dâlja Mare","Dâlja Mică","Dâncu Mare","Dâncu Mic","Dănulești","Dealu Babii","Dealu Mare","Dealu Mic","Deleni","Densuș","Deva","Dobra","Dobroț","Dragu-Brad","Dudești","Dumbrava","Dumbrava de Jos","Dumbrava de Sus","Dumbrăvița","Dumești","Dupăpiatră","Făgețel","Fântâna","Fărcădin","Fața Roșie","Federi","Feregi","Fintoag","Fizeș","Fizești","Folt","Fornădia","Furcșoara","Galați","Galbina","Gânțaga","Gelmar","General Berthelot","Geoagiu","Geoagiu-Băi","Ghelari","Gialacuta","Giurgești","Glodghilești","Godinești","Goleș","Gotești","Gothatea","Govăjdia","Grădiștea de Munte","Grid","Grind","Grohot","Grohoțele","Groș","Groșuri","Gura Bordului","Gurasada","Hărău","Hărțăgani","Hășdat","Hășdău","Hățăgel","Hațeg","Herepeia","Hobița","Hobița-Grădiște","Holdea","Homorod","Hondol","Hunedoara","Ilia","Iscroni","Izvoarele","Jeledinți","Jieț","Jiu-Paroșeni","Josani","Lăpugiu de Jos","Lăpugiu de Sus","Lăpușnic","Lăsău","Leauț","Lelese","Leșnic","Livada","Livadia","Livezi","Ludeștii de Jos","Ludeștii de Sus","Lunca (Baia de Criș)","Lunca (Băița)","Lunca Cernii de Jos","Lunca Cernii de Sus","Luncani","Luncoiu de Jos","Luncoiu de Sus","Luncșoara","Lupeni","Măceu","Mada","Măgura","Măgura-Toplița","Măgureni","Mălăiești","Mănerău","Mărtinești","Meria","Merișor (Bănița)","Merișor (Bucureșci)","Merișoru de Munte","Mermezeu-Văleni","Mesteacăn (Brad)","Mesteacăn (Răchitova)","Micănești","Mihăiești","Mihăileni","Mintia","Mosoru","Muncelu Mare","Muncelu Mic","Nădăștia de Jos","Nădăștia de Sus","Nălațvad","Nandru","Negoiu","Nojag","Nucșoara","Obârșa","Ocișor","Ociu","Ocolișu Mare","Ocolișu Mic","Ohaba","Ohaba de sub Piatră","Ohaba Streiului","Ohaba-Ponor","Ohaba-Sibișel","Oprișești","Orăștie","Orăștioara de Jos","Orăștioara de Sus","Ormindea","Ostrov","Ostrovel","Ostrovu Mic","Păclișa","Panc","Panc-Săliște","Paroș","Păucinești","Păulești","Păuliș","Peșteana","Peștenița","Peștera (Băița)","Peștera (Petroșani)","Peștera (Sălașu de Sus)","Peștișu Mare","Pestișu Mic","Petreni","Petrești","Petrila","Petros","Petroșani","Piatra","Pișchinți","Plai","Plop","Plopi","Podele","Pogănești","Poiana","Poiana Răchițelii","Poieni (Beriu)","Poieni (Densuș)","Poienița","Poienița Tomii","Poienița Voinii","Pojoga","Ponor","Popești","Potingani","Prăvăleni","Pricaz","Prihodiște (Boșorod)","Prihodiște (Vața de Jos)","Pui","Răcăștia","Răchițaua","Răchitova","Rădulești (Stâncești)","Râpaș","Rapolțel","Rapoltu Mare","Răscoala","Râu Alb","Râu Bărbat","Râu de Mori","Râu Mic","Reea","Renghet","Reț","Ribicioara","Ribița","Rișca","Rișculița","Romos","Romoșel","Roșcani","Roșia","Rovina (Brănișca)","Rovina (Bucureșci)","Ruda","Ruda-Brad","Runcșor","Runcu Mare","Runcu Mic","Rusești","Ruși","Rușor","Săcămaș","Săcărâmb","Săcel","Sălașu de Jos","Sălașu de Sus","Sălătruc","Sălciva","Săliște","Săliștioara","Sâncrai","Sânpetru","Sântămăria de Piatră","Sântămăria-Orlea","Sântandrei","Sântuhalm","Sârbi","Sarmizegetusa","Șăulești","Sereca","Șerel","Șesuri","Sibișel (Beriu)","Sibișel (Râu de Mori)","Silvașu de Jos","Silvașu de Sus","Simeria","Simeria Veche","Slătinioara","Socet","Sohodol","Șoimuș","Spini","Stâncești","Stâncești-Ohaba","Stănculești","Stănija","Stăuini","Ștei","Șteia","Stejărel","Stoieneasa","Strei","Strei-Săcel","Streisângeorgiu","Stretea","Subcetate","Sulighete","Suseni","Tămășasa","Tămășești","Tâmpa","Țărățel","Târnava","Târnava de Criș","Târnăvița","Tarnița","Târsa","Tătărăști","Tătărăștii de Criș","Țebea","Techereu","Teiu","Teliucu Inferior","Teliucu Superior","Ticera","Tirici","Tisa","Tiulești","Tomești","Tomnatec","Toplița","Toplița Mureșului","Totești","Totia","Trestia","Turdaș","Turmaș","Tuștea","Uibărești","Ulieș","Ulm","Unciuc","Uric","Uricani","Uroi","Ursici","Vadu","Vadu Dobrii","Vaidei","Vălari","Vâlcele","Vâlcelele Bune","Vâlceluța","Valea","Valea Arsului","Valea Babii","Valea Bradului","Valea Dâljii","Valea de Brazi","Valea Lungă","Valea Lupului","Valea Mare de Criș","Valea Nandrului","Valea Poienii","Valea Sângeorgiului","Văleni (Baia de Criș)","Văleni (Geoagiu)","Vălioara","Vălișoara","Vălișoara (Balșa)","Vărmaga","Vața de Jos","Vața de Sus","Vețel","Vica","Visca","Voia","Vorța","Vulcan","Zam","Zăvoi","Zdrapți","Zeicani"]},{"abr":"il","nume":"Ialomița","localitati":["Adâncata","Albești","Alexeni","Amara","Amara Nouă","Andrășești","Armășești","Axintele","Balaciu","Bărăganu","Bărbătescu","Bărbulești","Bărcănești","Bataluri","Bițina-Pământeni","Bițina-Ungureni","Bora","Borănești","Bordușani","Bordușelu","Boteni","Brazii","Broșteni","Bucșa","Bucu","Buești","Buliga","Butoiu","Cătrunești","Căzănești","Cegani","Chiroiu-Pământeni","Chiroiu-Satu Nou","Chiroiu-Ungureni","Ciocârlia","Ciochina","Ciulnița","Cocora","Colelia","Condeești","Copuzu","Cosâmbești","Coșereni","Cotorca","Crăsanii de Jos","Crăsanii de Sus","Crunți","Drăgoești","Dridu","Dridu-Snagov","Dumitrești","Făcăeni","Fetești","Fetești-Gară","Fierbinții de Jos","Fierbinții de Sus","Fierbinți-Târg","Frățilești","Fundata","Gârbovi","Gheorghe Doja","Gheorghe Lazăr","Gimbășani","Giurgeni","Grecii de Jos","Grindași","Grindu","Grivița","Gura Ialomiței","Gura Văii","Hagieni","Hagiești","Horia","Iazu","Ion Ghica","Ion Roată","Ivănești","Jilavele","Lăcusteni","Lilieci","Livedea","Luciu","Maia","Maltezi","Malu","Malu Roșu","Manasia","Mărculești","Marsilieni","Mihail Kogălniceanu","Miloșești","Mircea cel Bătrân","Misleanu","Moldoveni","Movila","Movileanca","Movilița","Munteni-Buzău","Murgeanca","Nenișori","Nicolești","Ograda","Orboești","Orezu","Păltinișu","Patru Frați","Perieți","Piersica","Platonești","Poiana","Progresu","Rași","Răsimnicea","Retezatu","Reviga","Roșiori","Rovine","Sălcioara","Sărățeni","Săveni","Scânteia","Sfântu Gheorghe","Sinești","Sintești","Slătioarele","Slobozia","Slobozia Nouă","Smirna","Stejaru","Stelnica","Sudiți","Țăndărei","Tovărășia","Traian","Urziceni","Valea Bisericii","Valea Ciorii","Valea Măcrișului","Vlădeni","Vlașca"]},{"abr":"is","nume":"Iași","localitati":["Albești","Alexandru cel Bun","Alexandru I. Cuza","Alexeni","Alexești","Andrieșeni","Arama","Aroneanu","Avântu","Bâcu","Bădeni","Bahluiu","Băiceni (Cucuteni)","Băiceni (Todirești)","Balciu","Balș","Bălțați","Bălteni","Bălușești","Banu","Bărbătești","Bârlești","Bârnova","Belcești","Berezlogi","Bivolari","Blaga","Blăgești","Boatca","Bocnița","Bodești","Bogdănești","Bogonos","Bohotin","Bojila","Boldești","Boroșești","Borosoaia","Borșa","Bosia","Boșteni","Boureni (Balș)","Boureni (Moțca)","Brădicești","Brăești","Bran","Brătești","Brătuleni","Brătulești","Breazu","Broșteni","Buda (Brăești)","Buda (Lespezi)","Budăi","Budești","Buhăeni","Buhalnița","Bulbucani","Bursuc-Deal","Bursuc-Vale","Buruienești","Butea","Buzdug","Buznea","Cărbunari","Cârjoaia","Cârlig","Cârniceni","Căuești","Ceplenița","Cercu","Chicerea","Chilișoaia","Chiperești","Chișcăreni","Cilibiu","Cioca-Boca","Ciocârlești","Ciohorăni","Ciortești","Cireșeni","Ciurbești","Ciurea","Coada Stâncii","Coarnele Caprei","Coasta Măgurii","Cogeasca","Colțu Cornii","Comarna","Conțești","Corcodel","Cornești","Coropceni","Cosițeni","Costești","Costuleni","Cotârgaci","Cotnari","Cotu lui Ivan","Cotu Morii","Covasna","Cozia","Cozmești","Cozmești (Stolniceni-Prăjescu)","Cristești","Cristești (Brăești)","Cristești (Holboca)","Crivești (Strunga)","Crivești (Vânători)","Crucea","Cucova","Cucuteni","Cucuteni (Lețcani)","Curagău","Curături","Cuza Vodă (Ipatele)","Cuza Vodă (Popricani)","Dădești","Dagâța","Dancaș","Dancu","Deleni","Deleni (Ciortești)","Dobrovăț","Dolhești","Domnița","Dorobanț","Doroșcani","Drăgănești","Drăgușeni","Dumbrava (Ciurea)","Dumbrava (Lespezi)","Dumbrăvița","Dumești","Dumitreștii Gălății","Erbiceni","Făgăt","Fântânele","Fântânele (Andrieșeni)","Fărcășeni","Fedeleșeni","Feredeni","Fetești","Filiași","Focuri","Forăști","Frăsuleni","Frenciugi","Frumușica","Gănești","Gârbești","Gâștești","Găureni","Giurgești","Glăvănești","Glodenii Gândului","Goești","Golăiești","Gorban","Goruni","Grădinari","Grajduri","Griești","Gropnița","Grozești","Gura Bâdiliței","Gura Bohotin","Gura Văii","Hăbășești","Hadâmbu","Hălăucești","Hălceni","Hândrești","Hârlău","Hărmăneasa","Hărmănești","Hărmăneștii Noi","Hărmăneștii Vechi","Hărpășești","Hârtoape","Heci","Heleșteni","Hermeziu","Hilița","Hlincea","Hodora","Hoisești","Holboca","Holm","Homița","Horlești","Horlești (Rediu)","Horodiștea","Horpaz","Humosu","Iacobeni","Iași","Iazu Nou","Iazu Vechi","Icușeni","Iepureni (Andrieșeni)","Iepureni (Movileni)","Ion Neculce","Iorcani","Iosupeni","Ipatele","Isaiia","Iugani","Izvoarele","Jigoreni","Kogălniceni","Larga-Jijia","Leahu-Nacu","Lespezi","Lețcani","Liteni","Luceni","Lunca (Grajduri)","Lunca (Pașcani)","Lunca Cetățuii","Lunca Rateș","Luncași","Lungani","Lungani (Voinești)","Lupăria","Măcărești","Mădârjac","Mădârjești","Mălăești","Mănăstirea","Mânjești","Mânzătești","Maxut","Medeleni","Miclăușeni","Mihail Kogălniceanu","Mircești","Mironeasa","Miroslava","Miroslovești","Mitești","Mitoc","Moara Ciornei","Mogoșești","Mogoșești-Siret","Moimești","Moreni","Moșna","Moțca","Movileni","Movileni (Heleșteni)","Muncelu de Sus","Munteni","Oboroceni","Obrijeni","Onești","Oprișeni","Oproaia","Orzeni","Osoi (Comarna)","Osoi (Sinești)","Oțeleni","Pădureni (Grajduri)","Pădureni (Popești)","Pârcovaci","Pașcani","Păun","Păușești","Perieni","Petrești","Petroșica","Picioru Lupului","Pietrăria","Pietriș","Pietrosu","Piscu Rusului","Plugari","Pocreaca","Podișu","Podolenii de Jos","Podolenii de Sus","Podu Hagiului","Podu Iloaiei","Podu Jijiei","Poiana (Deleni)","Poiana (Schitu Duca)","Poiana cu Cetate","Poiana de Sus","Poiana Mănăstirii","Poiana Mărului","Poiana Șcheii","Poieni","Poienile","Popești","Popricani","Potângeni","Prigoreni","Prisăcani","Probota","Proselnici","Răchiteni","Rădeni","Răducăneni","Răsboieni","Războieni","Recea","Rediu","Rediu (Brăești)","Rediu (Ruginoasa)","Rediu (Scânteia)","Rediu Aldei","Rediu Mitropoliei","Românești","Roșcani","Roșu","Rotăria","Ruginoasa","Runcu","Rusenii Noi","Rusenii Vechi","Săcărești","Sălăgeni","Sângeri","Sârca","Satu Nou ","Satu Nou (Belcești)","Satu Nou (Șcheia)","Satu Nou (Sirețel)","Săveni","Scânteia","Scheia","Șcheia","Schitu Duca","Schitu Hadâmbului","Schitu Stavnic","Scobâlțeni","Scobinți","Scoposeni (Gorban)","Scoposeni (Horlești)","Sculeni","Șendreni","Șerbești","Sinești","Șipote","Sirețel","Slobozia (Ciurea)","Slobozia (Deleni)","Slobozia (Schitu Duca)","Slobozia (Sirețel)","Slobozia (Voinești)","Soci","Sodomeni","Soloneț","Șorogari","Spineni","Spinoasa","Sprânceana","Stânca (Comarna)","Stânca (Victoria)","Stejarii","Sticlăria","Stolniceni-Prăjescu","Stornești","Stroești","Strunga","Suhuleț","Tabăra","Tansa","Tansa (Belcești)","Târgu Frumos","Tarnița","Tătăruși","Tăutești","Țibana","Țibănești","Țigănași","Țipilești","Todirel","Todirești","Tomești","Topile","Totoești","Traian","Trifești","Tudor Vladimirescu","Tufeștii de Sus","Tungujei","Țuțora","Uda","Ulmi","Ungheni","Uricani","Ursărești","Urșița","Ursoaia","Vadu Vejei","Vâlcelele","Vâlcica","Valea Adâncă","Valea Lungă","Valea Lupului","Valea Oilor","Valea Racului","Valea Satului","Valea Seacă","Valea Ursului","Vălenii","Vama","Vânători","Vânători (Popricani)","Vascani","Verșeni","Victoria","Vișan","Vlădeni","Vlădiceni","Vlădnicuț","Vladomira","Vocotești","Voinești","Volintirești","Vorovești","Vulturi","Zaboloteni","Zagavia","Zbereni","Zberoaia","Zece Prăjini","Zlodica","Zmeu"]},{"abr":"if","nume":"Ilfov","localitati":["1 Decembrie","Afumați","Alunișu","Bălăceanca","Balotești","Balta Neagră","Bălteni","Berceni","Bragadiru","Brănești","Buciumeni","Buda","Buftea","Buriaș","Căciulați","Căldăraru","Cățelu","Cernica","Chiajna","Chitila","Ciofliceni","Ciolpani","Ciorogârla","Clinceni","Copăceni","Corbeanca","Cornetu","Cozieni","Creața","Crețești","Crețuleasca","Dărăști-Ilfov","Dârvari","Dascălu","Dimieni","Dobroești","Domnești","Dragomirești-Deal","Dragomirești-Vale","Dudu","Dumbrăveni","Dumitrana","Fundeni","Gagu","Găneasa","Ghermănești","Glina","Grădiștea","Gruiu","Islaz","Izvorani","Jilava","Lipia","Lupăria","Măgurele","Măineasca","Manolache","Merii Petchii","Micșuneștii Mari","Micșunești-Moară","Moara Domnească","Moara Vlăsiei","Mogoșoaia","Nuci","Odăile","Olteni","Ordoreanu","Ostratu","Otopeni","Pantelimon","Pasărea","Periș","Petrăchioaia","Petrești","Pipera (Voluntari)","Piscu","Piteasca","Popești-Leordeni","Poșta","Pruni","Roșu","Rudeni","Runcu","Săftica","Șanțu-Florești","Siliștea Snagovului","Șindrilița","Sintești","Sitaru","Snagov","Ștefăneștii de Jos","Ștefăneștii de Sus","Surlari","Tamași","Tâncăbești","Tânganu","Țegheș","Tunari","Vadu Anei","Vânători","Vârteju","Vidra","Vlădiceasca","Voluntari","Zurbaua"]},{"abr":"mm","nume":"Maramureș","localitati":["Ardusat","Arduzel","Arieșu de Câmp","Arieșu de Pădure","Ariniș","Aspra","Asuaju de Jos","Asuaju de Sus","Baba","Baia Mare","Baia Sprie","Băile Borșa","Băița","Băița de sub Codru","Băiuț","Bârgău","Bârsana","Băsești","Berbești","Berchez","Berchezoaia","Berința","Bicaz","Bistra","Blidari","Bocicoel","Bocicoiu Mare","Bogdan Vodă","Boiereni","Boiu Mare","Bontăieni","Borcut","Borșa","Botiza","Bozânta Mare","Bozânta Mică","Breb","Brebeni","Buciumi","Budești","Bușag","Buteasa","Buzești","Călinești","Câmpulung la Tisa","Cărbunari","Cărpiniș","Cătălina","Cavnic","Cernești","Cetățele","Chechiș","Chelința","Chiuzbaia","Cicârlău","Ciocotiș","Ciolt","Ciuta","Coaș","Codru Butesii","Coltău","Colțirea","Copalnic","Copalnic-Deal","Copalnic-Mănăștur","Cornești","Corni","Coroieni","Coruia","Costeni","Coștiui","Crăciunești","Crasna Vișeului","Cufoaia","Culcea","Cupșeni","Curtuiușu Mare","Curtuiușu Mic","Dămăcușeni","Dănești","Dăneștii Chioarului","Dealu Corbului","Dealu Mare","Desești","Dobricu Lăpușului","Drăghia","Dragomirești","Dumbrava","Dumbrăvița","Durușa","Fânațe","Fântânele","Fărcașa","Făurești","Ferești","Fericea","Fersig","Finteușu Mare","Finteușu Mic","Firiza","Frâncenii Boiului","Gârdani","Giulești","Glod","Groape","Groși","Groșii Țibleșului","Handalu Ilbei","Hărnicești","Hideaga","Hoteni","Hovrila","Iadăra","Iapa","Ieud","Ilba","Inău","Întrerâuri","Izvoarele","Jugăstreni","Lăpuș","Lăpușel","Larga","Lăschia","Lazu Baciului","Leordina","Libotin","Lucăcești","Lunca la Tisa","Măgureni","Mănăstirea","Mânău","Mara","Merișor","Mesteacăn","Mireșu Mare","Mocira","Mogoșești","Moisei","Nănești","Negreia","Nistru","Oarța de Jos","Oarța de Sus","Ocna Șugatag","Ocoliș","Odești","Oncești","Orțița","Peteritea","Petrova","Piatra","Plopiș","Poiana Botizii","Poienile de sub Munte","Poienile Izei","Posta","Preluca Nouă","Preluca Veche","Pribilești","Prislop","Răzoare","Recea","Remecioara","Remetea Chioarului","Remeți","Remeți pe Someș","Repedea","Rodina","Rogoz","Rohia","Românești","Rona de Jos","Rona de Sus","Rozavlea","Rus","Ruscova","Rușor","Săbișa","Săcălășeni","Săcel","Săliște","Săliștea de Sus","Sălnița","Sălsig","Sâlța","Săpânța","Sarasău","Sârbi (Budești)","Sârbi (Fărcașa)","Săsar","Sat-Șugatag","Satu Nou de Jos","Satu Nou de Sus","Satulung","Seini","Șieu","Sighetu Marmației","Șindrești","Șișești","Slătioara","Șomcuta Mare","Someș-Uileac","Stejera","Stoiceni","Strâmbu-Băiuț","Strâmtura","Stremț","Suciu de Jos","Suciu de Sus","Șugău","Șurdești","Tămaia","Tămășești","Târgu Lăpuș","Tăuții de Sus","Tăuții-Măgherăuș","Teceu Mic","Țicău","Tisa","Tohat","Trestia","Tulghieș","Ulmeni","Ulmoasa","Unguraș","Ungureni","Urmeniș","Vad","Vadu Izei","Valea Chioarului","Valea Cufundoasă","Valea Hotarului","Valea Neagră","Valea Stejarului","Valea Vișeului","Văleni","Vălenii Lăpușului","Vălenii Șomcutei","Vărai","Vicea","Viile Apei","Vima Mare","Vima Mică","Vișeu de Jos","Vișeu de Mijloc","Vișeu de Sus"]},{"abr":"mh","nume":"Mehedinți","localitati":["23 August","Adunații Teiului","Albulești","Almăjel","Alunișul","Arginești","Arvătești","Aurora","Bâcleș","Bădițești","Bahna","Baia de Aramă","Baia Nouă","Bala","Bala de Sus","Bălăcița","Balota","Balotești","Balta","Balta Verde","Bâltanele (Greci)","Bâltanele (Prunișor)","Băluța","Bâlvănești","Bâlvăneștii de Jos","Bârâiacu","Bârda","Bârlogeni","Batoți","Biban","Bistrețu","Bistrița","Blidaru","Bobaița","Boceni","Borogea","Brâgleasa","Braniștea","Brânzeni","Brateșul","Bratilovu","Brativoești","Brebina","Breța","Breznicioara","Breznița-Motru","Breznița-Ocol","Broșteni","Bucura","Budănești","Buicani","Buicești","Bunoaica","Burila Mare","Burila Mică","Busești","Butoiești","Călineștii de Jos","Călineștii de Sus","Câmpu Mare","Căpățânești","Cărămidaru","Cârceni","Cârjei","Cârșu","Căzănești","Cearângu","Celnata","Ceptureni","Cerânganul","Cernaia","Cerna-Vârf","Cerneți","Cervenița","Ciochiuța","Cioroboreni","Ciovârnășani","Cireșu","Coada Cornetului","Cocorova","Colareț","Colibași","Comanda","Comănești","Copăcioasa","Corcova","Cordun","Corlățel","Corzu","Cosovăț","Costești","Cotoroaia","Cozia","Cracu Lung","Cracu Muntelui","Crăguești","Crainici","Cremenea","Crivina","Croica","Cujmir","Cujmiru Mic","Dâlbocița","Dâlma","Dănceu","Dârvari","Dealu Mare","Dedovița Nouă","Dedovița Veche","Deleni","Delureni","Devesel","Dobra","Drăghești","Dragotești","Drincea","Drobeta-Turnu Severin","Dubova","Dudașu","Dudașu Schelei","Dumbrava","Dumbrava de Jos","Dumbrava de Mijloc","Dumbrava de Sus","Dumbrăvița","Dunărea Mică","Eibenthal","Ercea","Erghevița","Eșelnița","Fântâna Domnească","Fântânile Negre","Fața Cremenii","Fața Motrului","Făuroaia","Firizu","Florești","Gârbovățu de Jos","Gârbovățu de Sus","Gărdăneasa","Gârdoaia","Gârla Mare","Gârnița","Gemeni","Ghelmegioaia","Gheorghești","Giura","Giurgiani","Goanța","Godeanu","Godeanu (Obârșia-Cloșani)","Gogoșu","Golineasa","Gornenți","Gornovița","Govodarva","Greci","Grozești","Gruia","Gura Motrului","Gura Văii","Gutu","Gvardinița","Halânga","Higiu","Hinova","Hotărani","Hurducești","Husnicioara","Iablanița","Igiroasa","Ilovăț","Ilovița","Ilovu","Imoasa","Isverna","Iupca","Izimșa","Izvoarele","Izvorălu","Izvorălu de Jos","Izvoru Aneștilor","Izvoru Bârzii","Izvoru Frumos","Jiana","Jiana Mare","Jiana Veche","Jidoștița","Jignița","Jirov","Jugastru","Jupânești","Lac","Lazu","Livezi","Livezile","Ludu","Lumnic","Lunca Banului","Luncșoara","Lupșa de Jos","Lupșa de Sus","Magheru","Măgurele","Mălărișca","Malovăț","Manu","Mărășești","Marga","Marmanu","Măru Roșu","Menți","Meriș","Mijarca","Moisești","Molani","Moșneni","Motruleni","Nadanova","Negoești","Negrești","Negrușa","Nevățu","Nicolae Bălcescu","Noapteșa","Obârșia de Câmp","Obârșia-Cloșani","Ohaba","Olteanca","Oprănești","Oprișor","Orevița Mare","Orșova","Ostrovu Corbului","Ostrovu Mare","Pădina","Pădina Mare","Pădina Mică","Păltinișu","Pârlagele","Pârvulești","Păsărani","Pătulele","Păunești","Pavăț","Peri","Peșteana","Peștenuța","Petra","Petriș","Pistrița","Plai","Plopi","Pluta","Podeni","Podu Grosului","Poiana","Poiana Gruii","Ponoarele","Poroina","Poroina Mare","Poroinița","Porțile de Fier II","Poșta Veche","Prejna","Priboiești","Prisăceaua","Pristol","Proitești","Prunaru","Prunișor","Punghina","Pușcașu","Puținei","Racova","Răduțești","Răiculești","Răscolești","Recea","Rocșoreni","Rogova","Roșia","Roșiori","Rudina","Runcușoru","Ruptura","Sălătruc","Salcia","Sărdănești","Satu Mare","Satu Nou","Scăpău","Schela Cladovei","Schinteiești","Schitu Topolniței","Scorila","Seliștea","Selișteni","Seliștiuța","Severinești","Sfodea","Șimian","Șipotu (Ponoarele)","Șipotu (Poroina Mare)","Șiroca","Șișești","Slașoma","Slătinicu Mare","Slătinicu Mic","Smadovița","Șovarna","Sperlești","Stăncești","Stănești","Stângăceaua","Ștefan Odobleja","Stejaru","Stignița","Ștircovița","Strehaia","Stroești","Studina","Suharu","Șușița (Breznița-Ocol)","Șușița (Grozești)","Svinița","Tălăpanu","Tâmna","Țânțaru","Târsa","Țigănași","Tismana","Titerlești","Țițirigi","Traian","Turtaba","Valea Anilor","Valea Bună","Valea Copcii","Valea Coșuștei","Valea Marcului","Valea Petrii","Valea Teiului","Valea Ursului (Ponoarele)","Valea Ursului (Tâmna)","Vânători","Vânju Mare","Vânjuleț","Varodia","Viașu","Vidimirești","Vișina","Vlădaia","Vlădășești","Vlădica","Voloiac","Voloicel","Vrancea","Vrata","Zegaia","Zegujani"]},{"abr":"ms","nume":"Mureș","localitati":["Abud","Abuș","Acățari","Adămuș","Adrian","Adrianu Mare","Adrianu Mic","Agrișteu","Albești","Aluniș","Andreneasa","Angofa","Apalina","Apold","Archita","Arșița","Ațintiș","Aurel Vlaicu","Avrămești","Băgaciu","Bahnea","Băița","Băla","Bălăușeri","Balda","Band","Bâra","Bărboși","Bărdești","Bârlibaș","Bârlibășoaia","Bârza","Batoș","Bedeni","Beica de Jos","Beica de Sus","Bereni","Berghia","Bernadea","Beu","Bezid","Bezidu Nou","Bicașu","Bichiș","Bistra Mureșului","Blidireasa","Bobohalma","Bogata","Boiu","Bolintineni","Bologaia","Bord","Bordoșiu","Borzia","Botei","Botez","Botorca","Bozed","Bozeni","Brădețelu","Brâncovenești","Breaza","Budiu Mic","Bujor","Bujor-Hodaie","Căciulata","Căcuciu","Călimănești","Călugăreni","Călușeri","Câmpenița","Câmpu Cetății","Cându","Căpâlna de Sus","Căpeți","Căpușu de Câmpie","Cașva","Cecălaca","Ceie","Cerghid","Cerghizel","Ceuaș","Ceuașu de Câmpie","Chendu","Chețani","Chibed","Chiheru de Jos","Chiheru de Sus","Chinari","Chinciuș","Chirileu","Chisălița","Ciba","Cibu","Cinta","Cioarga","Ciobotani","Cipăieni","Cipău","Ciretea","Cirhagău","Ciulea","Ciurgău","Cloașterf","Coasta Grindului","Coasta Mare","Comori","Corbești","Cordoș","Cornești (Adămuș)","Cornești (Crăciunești)","Coroi","Coroisânmărtin","Corunca","Cotorinau","Cotuș","Cozma","Crăciunești","Crăiești","Crăiești (Adămuș)","Criș","Cristești","Cucerdea","Cuci","Cuieșd","Culpiu","Cund","Curețe","Curteni","Cuștelnic","Daia (Apold)","Daia (Bahnea)","Dalu","Dâmbău","Dâmbu","Dămieni","Daneș","Dătășeni","Deag","Deaj","Deda","Dedrad","Deleni (Ideciu de Jos)","Deleni (Pogăceaua)","Delenii","Dileu Nou","Dileu Vechi","Dobra","Drăculea Bandului","Drojdii","Dubiștea de Pădure","Dulcea","Dumbrava","Dumbrăvioara","Dumitreni","Dumitreștii","După Deal (Cuci)","După Deal (Iclănzel)","Ercea","Eremieni","Eremitu","Ernei","Fânațe (Band)","Fânațe (Fărăgău)","Fânațe (Iclănzel)","Fânațe (Tăureni)","Fânațele Căpușului","Fânațele Mădărașului","Fânațele Socolului","Fântâna Babii","Fântânele","Fărăgău","Feleag","Filea","Filitelnic","Filpișu Mare","Filpișu Mic","Fițcău","Foi","Frunzeni","Fundătura","Fundoaia","Găiești","Gălăoaia","Gălățeni","Gălești","Gâmbuț","Gănești","Gaura Sângerului","Gheja","Gheorghe Doja","Ghidașteu","Ghindari","Ghinești","Giuluș","Giurgiș","Glăjărie","Glodeni","Gogan","Goreni","Gornești","Grădini","Grâușorul","Grebenișu de Câmpie","Grindeni","Groapa Rădăii","Gruișor","Gurghiu","Habic","Hădăreni","Hagău","Hărănglab","Hărțău","Herepea","Herghelia","Hetiur","Hodac","Hodaia","Hodoșa","Iara de Mureș","Ibănești","Ibănești-Pădure","Icland","Iclandu Mare","Iclănzel","Ideciu de Jos","Ideciu de Sus","Idicel","Idicel-Pădure","Idiciu","Idrifaia","Iernut","Iernuțeni","Ihod","Ilieni","Ilieși","Ilioara","Iod","Isla","Iștan-Tău","Iștihaza","Ivănești","Jabenița","Jacodu","Jacu","Lăpușna","Larga (Gurghiu)","Larga (Sărmașu)","Lăscud","Laslău Mare","Laslău Mic","Lăureni","Lechincioara","Lechința","Lefaia","Leniș","Leordeni","Leorința","Leorința-Șăulia","Lepindea","Linț","Livezeni","Logig","Loțu","Luduș","Luieriu","Lunca","Lunca Bradului","Lunca Mureșului","Măcicășești","Mădăraș","Mădărășeni","Măgherani","Măgheruș","Maia","Maiad","Maiorești","Mălăești","Maldaoci","Malea","Mărășești","Mărculeni","Mătrici","Merișor","Merișoru","Meștera","Mica","Miercurea Nirajului","Mihai Viteazu","Miheșu de Câmpie","Milășel","Mirigioaia","Mitrești","Moara de Jos","Mogoaia","Moișa","Morăreni","Morești","Moruț","Moșuni","Mura Mare","Mura Mică","Mureni","Mureșeni","Murgești","Nadășa","Nadeș","Nandra","Nazna","Neagra","Neaua","Negrenii de Câmpie","Nicolești","Nima Milășelului","Nima Râciului","Oarba de Mureș","Obârșie","Odrihei","Ogra","Onuca","Ormeniș","Oroiu","Orosia","Orșova","Orșova-Pădure","Ozd","Păcureni","Pădurea","Pădureni","Păingeni","Pănet","Papiu Ilarian","Pârâu Crucii (Pogăceaua)","Pârâu Crucii (Râciu)","Pârâu Mare","Păsăreni","Păucișoara","Păuloaia","Periș","Petea","Petelea","Petrilaca","Petrilaca de Mureș","Pietriș","Pipea","Poarta","Poduri","Pogăceaua","Poienița","Porumbac","Porumbeni","Pripoare","Pusta","Racameț","Râciu","Ranta","Râpa de Jos","Răstolița","Răzoare","Recea","Reghin","Remetea","Rigmani","Rora","Roșiori","Roteni","Roua","Rușii-Munți","Săbed","Săcădat","Săcalu de Pădure","Săcăreni","Șaeș","Sălard","Sălașuri","Sălcud","Sâmbriaș","Sâncraiu de Mureș","Șandru","Sângeorgiu de Câmpie","Sângeorgiu de Mureș","Sângeorgiu de Pădure","Sânger","Sângeru de Pădure","Sâniacob","Sânișor","Sânmărghita","Sânmărtinu de Câmpie","Sânmihai de Pădure","Sânpaul","Sânpetru de Câmpie","Sânsimion","Sântana de Mureș","Sântioana","Sântioana de Mureș","Sântu","Sânvăsii","Șapartoc","Sărățeni","Șardu Nirajului","Sărmășel","Sărmășel-Gară","Sărmașu","Saschiz","Satu Nou (Gheorghe Doja)","Satu Nou (Sânpetru de Câmpie)","Șăulia","Șăulița","Șăușa","Scurta","Sebeș","Seleuș (Daneș)","Seleuș (Zagăr)","Senereuș","Șerbeni","Seuca","Șeulia de Mureș","Sfântu Gheorghe","Sicele","Sighișoara","Șilea Nirajului","Șincai","Șincai-Fânațe","Șoard","Socolu de Câmpie","Șoimuș","Solocma","Solovăstru","Șomoștelnic","Șoromiclea","Sovata","Stânceni","Ștefanca","Ștefăneaca","Stejărenii","Stejeriș","Sub Pădure","Suplac","Suseni","Suveica","Tăblășeni","Tâmpa","Târgu Mureș","Târnăveni","Tău","Tăureni","Teleac","Țigmandru","Țiptelnic","Tireu","Tirimia","Tirimioara","Tisieu","Titiana","Toaca","Tofalău","Toldal","Tonciu","Țopa","Torba","Trei Sate","Troița","Tușinu","Uila","Ulieș","Ungheni","Uricea","Urisiu de Jos","Urisiu de Sus","Ursoaia","Vădaș","Vadu","Vaidacuta","Vaideiu","Valea","Valea Albeștiului","Valea Dăii","Valea Frăției","Valea Glodului","Valea Iclandului","Valea Izvoarelor","Valea Largă","Valea Mare","Valea Pădurii","Valea Rece","Valea Sânmărtinului","Valea Sânpetrului (Grebenișu de Câmpie)","Valea Sânpetrului (Pogăceaua)","Valea Șapartocului","Valea Sasului","Valea Seacă","Valea Șurii","Valea Ulieșului","Valea Ungurului","Valea Urieșului","Văleni","Vălenii","Vălenii de Mureș","Vălișoara","Vălureni","Vânători","Vărgata","Vătava","Venchi","Veța","Vețca","Vidrasău","Viforoasa","Viilor","Viișoara","Vișinelu","Voiniceni","Voivodeni","Vulcan","Zagăr","Zăpodea","Zau de Câmpie","Zimți"]},{"abr":"nt","nume":"Neamț","localitati":["Adjudeni","Agapia","Agapia-Mânăstire","Agârcia","Alexandru cel Bun","Almaș","Arămești","Arămoaia","Ardeluța","Averești","Bahna","Bahna Mare","Băhnișoara","Bălănești","Bălțătești","Bălușești (Dochia)","Bălușești (Icușești)","Băneasa","Bâra","Baratca","Bărcănești","Bârgăuani","Bârjoveni","Bârnadu","Barticești","Bașta","Bătrânești","Bețești","Bicaz","Bicaz-Chei","Bicazu Ardelean","Bisericani","Bistricioara","Bistrița","Blebea","Boboiești","Bodești","Bodeștii de Jos","Boghicea","Bogzești","Boiștea","Borca","Bordea","Borlești","Borniș","Borșeni","Botești","Boțești","Bozieni","Bozienii de Sus","Bradu","Brășăuți","Brateș","Breaza","Brițcani","Broșteni","Brusturi","Bucium","Budești","Buhalnița","Buhonca","Bunghi","Buruienești","Bușmei","Butnărești","Căciulești","Călugăreni","Cândești","Capșa","Cârlig","Cârligi","Cășăria","Căușeni","Cazaci","Ceahlău","Certieni","Chicerea","Chilia","Chilii","Chintinici","Chirițeni","Ciornei","Ciritei","Ciurea","Climești","Cordun","Corhana","Corni","Costișa","Cotu Vameș","Crăcăoani","Cracăul Negru","Crăiești","Cuci","Cuejdiu","Curechiștea","Cut","Dămuc","Dănești","Dârloaia","David","Davideni","Deleni","Doamna","Dobreni","Dochia","Dodeni","Doina","Dolhești","Doljești","Dornești","Drăgănești","Dragomirești","Dragova","Dreptu","Dulcești","Dumbrava","Dumbrava Roșie","Dumbrava-Deal","Durău","Dușești","Farcașa","Făurei","Filioara","Frumosu","Frunzeni","Gâdinți","Galu","Gârcina","Ghelăiești","Gherăești","Gherăeștii Noi","Gherman","Ghidion","Ghigoiești","Ghindăoani","Girov","Giulești","Giurgeni","Gorun","Goșmani","Grințieș","Groși","Grozăvești","Grumăzești","Gura Văii","Hamzoaia","Hangu","Hanul Ancuței","Hârțești","Hârtop","Hlăpești","Hociungi","Hoisești","Holm","Homiceni","Horia","Huisurez","Humulești","Humuleștii Noi","Icușești","Ingărești","Ion Creangă","Itrinești","Iucșa","Ivaneș","Izvoare (Bahna)","Izvoare (Dumbrava Roșie)","Izvoru","Izvoru Alb","Izvoru Muntelui","Leghin","Liliac","Linsești","Luminiș","Lunca (Borca)","Lunca (Oniceni)","Lunca (Vânători-Neamț)","Lunca Moldovei","Luțca","Mădei","Magazia","Mânăstirea Neamț","Mănoaia","Mărgineni","Mărmureni","Mastacăn (Borlești)","Mastacăn (Dragomirești)","Mesteacăn","Micșunești","Miron Costin","Mitocu Bălan","Moldoveni","Moreni","Muncelu","Muncelu de Jos","Munteni","Neagra","Nechit","Negrești","Negrești (Bâra)","Negritești","Negulești","Nemțișor","Netezi","Nisiporești","Nistria","Oanțu","Oglinzi","Oniceni","Orțăști","Oșlobeni","Pădureni","Pâncești","Pângărăcior","Pângărați","Pârâul Cârjei","Pârâul Fagului","Pârâul Mare","Pârâul Pântei","Păstrăveni","Pâțâligeni","Patricheni","Petricani","Petru Vodă","Piatra Șoimului","Piatra-Neamț","Pietrosu","Pildești","Pipirig","Plăieșu","Plugari","Pluton","Podoleni","Poiana (Brusturi)","Poiana (Dulcești)","Poiana (Grințieș)","Poiana (Negrești)","Poiana (Pângărați)","Poiana Crăcăoani","Poiana Humei","Poiana Largului","Poiana Teiului","Poienari","Poieni","Poienile Oancei","Poloboc","Popești (Farcașa)","Popești (Girov)","Potoci","Prăjești","Preluca","Preutești","Pustieta","Rădeni","Râșca","Răucești","Războieni","Războienii de Jos","Recea","Rediu","Rediu (Bâra)","Rocna","Roman","Români","Roșeni","Roșiori","Rotunda","Roznov","Ruginești","Ruginoasa","Ruseni (Borlești)","Ruseni (Poiana Teiului)","Săbăoani","Sabasa","Săcăleni","Săcălușești","Sagna","Sărata","Săvești","Săvinești","Săvinești (Poiana Teiului)","Scăricica","Schitu Tarcău","Secu","Secuieni","Secuienii Noi","Siliștea","Simionești","Slobozia (Boghicea)","Slobozia (Roznov)","Socea","Soci (Borca)","Soci (Ștefan cel Mare)","Șoimărești","Solca","Șovoaia","Spiești","Spiridonești","Stânca","Stănița","Ștefan cel Mare","Stejaru (Farcașa)","Stejaru (Ion Creangă)","Stejaru (Pângărați)","Straja","Tabăra","Talpa","Tălpălăi","Tămășeni","Tarcău","Țârdenii Mici","Târgu Neamț","Târpești","Târzia","Tașca","Tazlău","Telec","Tețcani","Țibucani","Țibucanii de Jos","Ticoș","Ticoș-Floarea","Timișești","Todireni","Țolici","Topoliceni","Topolița","Totoiești","Traian (Săbăoani)","Traian (Zănești)","Trei Fântâni","Trifești","Tupilați","Turturești","Țuțcanii din Deal","Țuțcanii din Vale","Uncești","Ungheni","Unghi","Urecheni","Vad","Vădurele (Alexandru cel Bun)","Vădurele (Cândești)","Vaduri","Valea Albă","Valea Arini","Valea Enei","Valea Mare","Valea Seacă","Valea Ursului","Văleni","Văleni (Piatra-Neamț)","Vânători-Neamț","Văratec","Veja","Verșești","Viișoara","Vlădiceni","Vlădnicele","Vulpășești","Zănești","Zvorănești"]},{"abr":"ot","nume":"Olt","localitati":["Afumați","Albești","Alimănești","Alunișu","Arcești","Arcești-Cot","Arvăteasca","Băbiciu","Bacea","Bâgești","Bălănești","Baldovinești","Băleasa","Balș","Bălțați","Bălteni","Bărăști","Bărăști (Colonești)","Bărăști (Morunglav)","Bărăștii de Cepturi","Bărăștii de Vede","Bărbălăi","Bârca","Bărcănești","Bârseștii de Sus","Barza","Bârza","Bătăreni","Batia","Bechet","Beculești","Belgun","Beria de Jos","Beria de Sus","Berindei","Bircii","Bistrița Nouă","Blaj","Bobicești","Bobu","Bondrea","Boroești","Brâncoveni","Braneț","Brastavățu","Brebeni","Broșteni","Bucinișu","Bucinișu Mic","Buicești","Bulimanu","Burdulești","Bușca","Buta","Butoi","Buzești","Călinești","Călui","Câmpu Mare","Câmpu Părului","Cândelești","Caracal","Cârlogani","Cârstani","Catanele","Căzănești","Cepari","Cepești","Cerbeni","Cezieni","Chelbești","Cherleștii din Deal","Cherleștii Moșteni","Chilia","Chilii","Chintești","Chițeasca","Cilieni","Ciocănești","Cioflanu","Ciorâca","Cioroiașu","Cioroiu","Cireașov","Ciurești","Cocorăști","Cojgărei","Colibași","Colonești","Comanca","Comănești","Comani","Comănița","Constantinești","Corabia","Corbeni","Corbu","Corbu (Teslui)","Corlătești","Cornățelu","Coteana","Coteni","Cotorbești","Crăciunei","Crâmpoia","Creți","Criva de Jos","Criva de Sus","Crușovu","Cucueți","Cungrea","Curtișoara","Curtișoara (Dobrețu)","Cuza Vodă","Dâmburile","Dăneasa","Davidești","Dejești","Deleni","Deveselu","Dienci","Doanca","Doba","Dobrețu","Dobriceni","Dobrosloveni","Dobroteasa","Dobrotinet","Dobrun","Donești","Drăgănești-Olt","Drăghiceni","Dranovățu","Dumitrești","Enoșești","Făgețelu","Fălcoiu","Fărcașele","Fărcașu de Jos","Floru","Frăsinet-Gară","Frăsinetu","Frunzaru","Găneasa","Gârcov","Găvănești","Ghimpați","Ghimpețeni","Ghimpețenii Noi","Ghioșani","Giuvărăști","Gostavățu","Govora","Grădinari","Grădinile","Grădiștea","Greci (Osica de Sus)","Greci (Schitu)","Greerești","Grojdibodu","Gropșani","Grozăvești","Gruiu","Gubandru","Guești","Gura Căluiu","Gura Padinii","Horezu","Hotărani","Hotaru","Ianca","Ianca Nouă","Iancu Jianu","Ibănești","Icoana","Ionicești","Ipotești","Isaci","Izbiceni","Izvoarele","Izvoru","Jieni","Jitaru","Lăunele","Lăzărești","Leleasca","Leotești","Liiceni","Linia din Vale","Lisa","Lunca","Măgura (Perieți)","Măgura (Tătulești)","Malu Roșu","Mamura","Mandra","Mănulești","Mardale","Mărgăritești","Mărgheni","Mărgineni-Slobozia","Mărunței","Mărunței (Colonești)","Mereni","Mierleștii de Sus","Mierlicești","Miești","Mihăești","Mihăilești-Popești","Milcov","Milcoveni","Milcovu din Deal","Milcovu din Vale","Mircești","Mirila","Mogoșești","Momaiu","Morunești","Morunglav","Moșteni","Moțoești","Movileni","Năvârgeni","Negreni","Nicolae Titulescu","Obârșia","Obârșia Nouă","Oboga","Ociogi","Olari","Oltișoru","Oporelu","Optășani","Optași","Optași-Măgura","Orlea","Orlea Nouă","Osica de Jos","Osica de Sus","Ostrov","Oteștii de Jos","Oteștii de Sus","Pârșcoveni","Peretu","Perieți","Pescărești","Pestra","Petculești","Piatra","Piatra-Olt","Pielcani","Pietriș","Pietrișu","Piscani","Plăviceanca","Plăviceni","Pleșoiu","Plopșorelu","Poboru","Poganu","Poiana","Poiana Mare","Popești (Bărăști)","Popești (Văleni)","Potcoava","Potcoava-Fălcoeni","Potelu","Potlogeni","Potopinu","Preotești","Prisaca","Priseaca","Proaspeți","Profa","Racovița","Rădești","Radomirești","Raițiu","Recea","Redea","Redișoara","Reșca","Reșcuța","Româna","Roșienii Mari","Roșienii Mici","Rotunda","Rudari","Runcu Mare","Rusănești","Rusăneștii de Sus","Rusciori","Salcia","Săltănești","Sâmburești","Sârbii-Măgura","Satu Nou (Grădinari)","Satu Nou (Gura Padinii)","Scărișoara","Schitu","Schitu Deleni","Schitu din Deal","Schitu din Vale","Scorbura","Scornicești","Seaca","Seaca (Poboru)","Șerbănești","Șerbăneștii de Sus","Simniceni","Sinești","Slatina","Slătioara","Slăveni","Șopârlița","Spătaru","Spineni","Sprâncenata","Stănuleasa (Sâmburești)","Stănuleasa (Vitomirești)","Stăvaru","Ștefan cel Mare","Stejaru","Stoborăști","Stoenești","Stoicănești","Strejești","Strejeștii de Sus","Strugurelu","Studina","Studinița","Stupina","Șuica","Surpeni","Tabaci","Tabonu","Tătulești","Teiș","Teiuș","Teiușu","Teslui","Tia Mare","Tirișneag","Tomeni","Tonești (Leleasca)","Tonești (Sâmburești)","Topana","Traian","Trepteni","Trufinești","Tudor Vladimirescu","Tufaru","Tufeni","Turia","Ulmet","Ulmi","Ungureni","Uria","Ursa","Urși","Ursoaia","Urzica","Vădastra","Vădăstrița","Vâlcele","Vâlcelele de Sus","Valea Fetei","Valea lui Alb","Valea Mare","Valea Merilor","Valea Satului","Valea Soarelui","Văleni","Văleni (Brâncoveni)","Vânești","Vârtopu","Verguleasa","Vineți","Vișina","Vișina Nouă","Vitănești","Vitomirești","Vlădila","Vlădila Nouă","Vlăduleni","Vlaici","Vlăngărești","Voineasa","Vulpeni","Vulpești","Vulturești","Zănoaga","Zorleasca"]},{"abr":"ph","nume":"Prahova","localitati":["Adunați","Albești-Muru","Albești-Paleologu","Albinari","Aluniș","Antofiloaia","Apostolache","Ariceștii Rahtivani","Ariceștii Zeletin","Arioneștii Noi","Arioneștii Vechi","Arva","Azuga","Baba Ana","Băicoi","Balta Doamnei","Bălțești","Băltița","Bănești","Bâra","Bărăitaru","Bărcănești","Bărzila","Bătești","Bătrâni","Belciug","Berceni","Bertea","Bighilin","Blejoi","Bobicești","Boboci","Bobolia","Bodești","Bogdănești","Boldești","Boldești-Grădiștea","Boldești-Scăeni","Bordenii Mari","Bordenii Mici","Boșilcești","Bozieni","Brădet","Brătășanca","Brătești","Brazi","Brazii de Jos","Brazii de Sus","Breaza","Breaza de Jos","Breaza de Sus","Brebu","Brebu Mânăstirei","Brebu Megieșesc","Buchilași","Bucov","Buda (Ariceștii Rahtivani)","Buda (Râfov)","Bughea de Jos","Bughea de Sus","Buștenari","Bușteni","Butuci","Buzota","Călinești","Călugăreni","Câmpina","Cap Roșu","Cărbunari","Cărbunești","Cârjari","Cartierul Dâmbu","Cătina","Cătunu (Berceni)","Cătunu (Drajna)","Ceptura","Ceptura de Jos","Ceptura de Sus","Cerașu","Cernești","Cheia","Cherba","Cheșnoiu","Chiciureni","Chiojdeanca","Chirițești","Chițorani","Cioceni","Ciocrac","Ciorani","Cioranii de Jos","Cioranii de Sus","Cireșanu","Ciupelnița","Coada Izvorului","Coada Malului","Coceana","Cocorăștii Caplii","Cocorăștii Colț","Cocorăștii Grind","Cocorăștii Mislii","Cocoșești","Colceag","Colonia Brazi","Colțu de Jos","Comarnic","Conduratu","Corlătești","Cornu","Cornu de Jos (Cornu)","Cornu de Jos (Drăgănești)","Cornu de Sus (Cornu)","Cornu de Sus (Dumbrava)","Coșerele","Coslegi","Cosmina de Jos","Cosmina de Sus","Cosminele","Costeni","Coțofenești","Crângurile","Crivina","Cuib","Curcubeu","Curmătura","Dâmbu","Dârvari","Dițești","Dobrota","Doftana","Drăgăneasa","Drăgănești","Drăghicești","Drajna","Drajna de Jos","Drajna de Sus","Dumbrava","Dumbrăvești","Ezeni","Făcăieni","Făget","Făgetu","Fânari (Gorgota)","Fânari (Olari)","Fântânele","Fefelei","Filipeștii de Pădure","Filipeștii de Târg","Florești","Frăsinet","Fulga","Fulga de Jos","Fulga de Sus","Fundeni","Găgeni","Gâlmeia","Găvănel","Gheaba","Gherghița","Ghighiu","Ghinoaica","Ghiocel","Ghioldum","Ghioșești","Glod","Goga","Gogeasca","Gorgota","Gornet","Gornet-Cricov","Goruna","Grădiștea","Gresia","Groșani","Gura Beliei","Gura Crivățului","Gura Vadului","Gura Vitioarei","Hăbud","Hârsa","Hătcărău","Homorâciu","Iazu","Independența","Inotești","Iordăcheanu","Irimești","Izești","Izvoarele","Izvoru","Jercălăi","Jugureni","Lacu Turcului","Lapoș","Lăpoșel","Liliești","Lipănești","Livadea","Loloiasca","Lopatnița","Lunca Mare","Lunca Prahovei","Lutu Roșu","Magula","Măgura","Măgurele","Măgureni","Mălăeștii de Jos","Mălăeștii de Sus","Mălăiești","Malamuc","Malu Roșu","Malu Vânăt","Mânăstirea Suzana","Măneciu","Măneciu-Pământeni","Măneciu-Ungureni","Mănești","Marginea Pădurii","Mărginenii de Jos","Mârlogea","Mărunțiș","Matița","Mehedința","Melicești","Merdeala","Meri","Minieri","Mireșu Mare","Mireșu Mic","Miroslăvești","Mislea","Mizil","Moara","Moara Domnească","Moara Nouă","Mocești","Nedelea","Negoiești","Nevesteasca","Nisipoasa","Nistorești","Novăcești","Nucet (Chiojdeanca)","Nucet (Gornet)","Nucșoara de Jos","Nucșoara de Sus","Ocina de Jos","Ocina de Sus","Odăile","Ogretin","Olari","Olarii Vechi","Ologeni","Olteni","Orzoaia de Jos","Orzoaia de Sus","Ostrovu","Păcureți","Păcuri","Palanca","Pantazi","Parepa-Rușani","Păulești","Păuleștii Noi","Perșunari (Cocorăștii Colț)","Perșunari (Gura Vadului)","Piatra (Cocorăștii Colț)","Piatra (Drajna)","Piatra (Provița de Jos)","Piatra Mică","Pietriceaua","Pietricica","Pietrișu","Pietroșani","Piorești","Pisculești","Pițigoi","Plai","Plăiețu","Plaiu (Provița de Sus)","Plaiu (Talea)","Plaiu Câmpinei","Plaiu Cornului","Plavia","Pleașa","Ploiești","Ploieștiori","Plopeni","Plopeni (Dumbrăvești)","Plopu","Podenii Noi","Podenii Vechi","Podgoria","Podu Cheii","Podu Corbului","Podu lui Galben","Podu Lung","Podu Ursului","Podu Vadului","Podu Văleni","Podurile","Poiana","Poiana Câmpina","Poiana Copăceni","Poiana Mare","Poiana Mierlei","Poiana Țapului","Poiana Trestiei","Poiana Vărbilău","Poienarii Apostoli","Poienarii Burchii","Poienarii Vechi","Poienarii-Rali","Poienile","Popești (Brazi)","Popești (Podenii Noi)","Posada","Posești","Poseștii-Pământeni","Poseștii-Ungureni","Potigrafu","Prăjani","Predeal","Predeal-Sărari","Predești","Priseaca","Provița de Jos","Provița de Sus","Puchenii Mari","Puchenii Mici","Puchenii-Moșneni","Pușcași","Rachieri","Radila","Râfov","Răgman","Rahova","Românești","Rotarea","Rotari","Salcia","Sălciile","Sălcioara","Sângeru","Sărari","Sărățel","Sârca","Satu de Sus","Satu Nou (Baba Ana)","Satu Nou (Lipănești)","Sătucu","Schela","Schiau (Urlați)","Schiau (Valea Călugărească)","Schiulești","Scorțeni","Scurtești","Secăria","Seciu","Seciuri","Sfăcăru","Sfârleanca","Sicrita","Siliștea","Siliștea Dealului","Sinaia","Șipotu","Șirna","Slănic","Slavu","Slon","Șoimari","Șoimești","Șotrile","Stăncești","Starchiojd","Ștefești","Stejaru","Stoenești","Străoști","Strejnicu","Ștubeiu","Surani","Surdești","Talea","Țânțăreni","Țărculești","Târgșoru Nou","Târgșoru Vechi","Tăriceni","Târlești","Târșoreni","Tătărăi","Tătărani","Tătaru","Teișani","Telega","Teșila","Tinosu","Țintea","Țipărești","Tisa","Tohani","Tomșani","Țonțești","Trăisteni","Trenu","Trestienii de Jos","Trestienii de Sus","Trestioara","Tufani","Tufeni","Tulburea","Tulburea-Văleni","Udrești","Ulmi","Ungureni (Filipeștii de Târg)","Ungureni (Gherghița)","Ungureni (Vadu Săpat)","Urlați","Urleta","Vadu Părului","Vadu Săpat","Vâlcănești","Vâlcelele","Valea Anei","Valea Bobului","Valea Borului","Valea Brădetului","Valea Bradului","Valea Călugărească","Valea Crângului","Valea Cricovului","Valea Cucului","Valea Doftanei","Valea Dulce","Valea Largă","Valea Lespezii","Valea Mantei","Valea Mieilor","Valea Nicovani","Valea Nucetului","Valea Oprii","Valea Orlei","Valea Pietrei","Valea Plopului","Valea Poienii","Valea Popii","Valea Scheilor","Valea Screzii","Valea Seacă","Valea Seman","Valea Stâlpului","Valea Stupinii","Valea Târsei","Valea Tocii","Valea Unghiului","Valea Urloii","Valea Ursoii","Vălenii de Munte","Vărbila","Vărbilău","Vârfurile","Varnița","Vistieru","Vitioara de Sus","Zahanaua","Zalhanaua","Zâmbroaia","Zamfira","Zănoaga","Zmeuret"]},{"abr":"sj","nume":"Sălaj","localitati":["Adalin","Aghireș","Agrij","Aleuș","Almașu","Aluniș","Archid","Băbeni","Băbiu","Bădăcin","Badon","Baica","Bălan","Ban","Bănișor","Bârsa","Bârsău Mare","Bârsăuța","Benesat","Bercea","Bezded","Bic","Bilghez","Biușa","Bizușa-Băi","Bobota","Bocșa","Bocșița","Bodia","Bogdana","Boghiș","Borla","Borza","Bozieș","Bozna","Brâglez","Brebi","Brusturi","Buciumi","Bulgari","Buzaș","Călacea","Camăr","Câmpia","Căpâlna","Carastelec","Ceaca","Cehei","Cehu Silvaniei","Cerișa","Cernuc","Chechiș","Chendrea","Chendremal","Cheud","Chichișa","Chieșd","Chilioara","Chizeni","Ciglean","Ciocmani","Ciula","Ciumărna","Ciureni","Cizer","Cliț","Colonia Sighetu Silvaniei","Cormeniș","Coșeiu","Cosniciu de Jos","Cosniciu de Sus","Cozla","Crasna","Creaca","Crișeni","Criștelec","Cristolț","Cristolțel","Cristur-Crișeni","Cubleșu","Cuceu","Cuciulat","Cutiș","Cuzăplac","Dăbiceni","Deja","Deleni","Derșida","Dioșod","Doba","Dobrin","Dobrocina","Doh","Dolheni","Dolu","Domnin","Dragu","Drighiu","Dumuslău","Fabrica","Făgetu","Fălcușa","Fântânele","Fântânele-Rus","Fetindia","Fildu de Jos","Fildu de Mijloc","Fildu de Sus","Firminiș","Fizeș","Fodora","Frâncenii de Piatră","Fufez","Gălășeni","Gâlgău","Gâlgău Almașului","Gălpâia","Gârbou","Gârceiu","Giurtelecu Șimleului","Glod","Gostila","Gura Vlădesei","Guruslău","Halmășd","Hășmaș","Hereclean","Hida","Horoatu Cehului","Horoatu Crasnei","Hurez","Huseni","Husia","Huta","Iaz","Ileanda","Ilișua","Inău","Ip","Jac","Jebucu","Jibou","Lazuri","Lemniu","Leșmir","Letca","Lompirt","Lozna","Luminișu","Lupoaia","Măeriște","Măgura","Mal","Mălădia","Măleni","Marca","Marca-Huta","Marin","Meseșenii de Jos","Meseșenii de Sus","Mesteacănu","Mierța","Miluani","Mineu","Mirșid","Moiad","Moigrad-Porolissum","Motiș","Muncel","Nadiș","Naimon","Năpradea","Negreni","Noțig","Nușfalău","Ortelec","Pădureni","Păduriș","Panic","Păușa","Peceiu","Pericei","Periceiu Mic","Perii Vadului","Petrindu","Petrinzel","Piroșa","Plesca","Plopiș","Poarta Sălajului","Podișu","Poiana Blenchii","Poiana Măgura","Poiana Onții","Poienița","Popeni","Popteleac","Porț","Preluci","Preoteasa","Pria","Prodănești","Purcăreț","Pusta","Racâș","Răstoci","Răstolț","Răstolțu Deșert","Ratin","Ratovei","Recea","Recea Mică","Rogna","Românași","Romita","Rona","Ruginoasa","Rus","Sâg","Sălăjeni","Sălățig","Șamșud","Sâncraiu Almașului","Sâncraiu Silvaniei","Sângeorgiu de Meseș","Sânmihaiu Almașului","Sânpetru Almașului","Sântă Măria","Sârbi","Șărmășag","Șasa","Șeredeiu","Sfăraș","Sici","Sighetu Silvaniei","Șimișna","Șimleu Silvaniei","Șoimuș","Șoimușeni","Solomon","Solona","Someș-Guruslău","Someș-Odorhei","Stana","Stâna","Stârciu","Stoboru","Stupini","Sub Cetate","Șumal","Surduc","Sutoru","Tămașa","Țărmure","Țăudu","Teștioara","Tetișu","Tihău","Toplița","Traniș","Trestia","Treznea","Turbuța","Tusa","Ugruțiu","Uileacu Șimleului","Ulciug","Vădurele","Valcău de Jos","Valcău de Sus","Valea Ciurenilor","Valea Hranei","Valea Leșului","Valea Loznei","Valea Lungă","Valea Pomilor","Văleni","Vălișoara","Var","Vârșolț","Vârteșca","Verveghiu","Viile Jacului","Voivodeni","Zalău","Zalha","Zalnoc","Zăuan","Zăuan-Băi","Zimbor"]},{"abr":"sm","nume":"Satu Mare","localitati":["Acâș","Aciua","Adrian","Ady Endre","Agriș","Aliceni","Aliza","Amați","Ambud","Andrid","Apa","Apateu","Ardud","Ardud-Vii","Atea","Baba Novac","Băbășești","Băbești","Babța","Bârsău","Bârsău de Jos","Bârsău de Sus","Bătarci","Becheni","Beltiug","Bercu","Bercu Nou","Berea","Berindan","Berveni","Bicău","Bixad","Blaja","Bocicău","Bogdand","Boghiș","Boinești","Bolda","Borlești","Botiz","Călinești-Oaș","Cămărzana","Cămin","Căpleni","Cărășeu","Carei","Căuaș","Cean","Cehal","Cehăluț","Certeze","Chegea","Chereușa","Chilia","Chisău","Cidreag","Cig","Cionchești","Ciumești","Ciuperceni","Coca","Comlăușa","Corod","Corund","Craidorolț","Crișeni","Crucișor","Cucu","Culciu","Culciu Mare","Culciu Mic","Cuța","Dacia","Dara","Decebal","Dindești","Dindeștiu Mic","Doba","Dobolț","Dobra","Domănești","Dorolț","Drăgușeni","Dumbrava","Eriu-Sâncrai","Eteni","Foieni","Ganaș","Gelu","Gerăușa","Ghenci","Gherța Mare","Gherța Mică","Ghilești","Ghilvaci","Ghirișa","Ghirolt","Giorocuta","Giungi","Giurtelecu Hododului","Halmeu","Halmeu-Vii","Hodișa","Hodod","Homoroade","Homorodu de Jos","Homorodu de Mijloc","Homorodu de Sus","Horea","Hotoan","Hrip","Hurezu Mare","Huta-Certeze","Ianculești","Iegheriște","Iojib","Irina","Istrău","Lazuri","Lechința","Lelei","Lipău","Livada","Livada Mică","Lucăceni","Luna","Lunca Apei","Mădăras","Măriuș","Marna Nouă","Mărtinești","Medieș-Râturi","Medieșu Aurit","Medieș-Vii","Medișa","Mesteacăn","Micula","Micula Nouă","Mihăieni","Moftin","Moftinu Mare","Moftinu Mic","Moișeni","Nadișu Hododului","Necopoi","Negrești-Oaș","Nisipeni","Noroieni","Oar","Odoreu","Orașu Nou","Orașu Nou-Vii","Orbău","Pășunea Mare","Păulești","Paulian","Peleș","Pelișor","Petea","Petin","Petrești","Pir","Piru Nou","Pișcari","Pișcolt","Poiana Codrului","Pomi","Portița","Porumbești","Potău","Prilog","Prilog-Vii","Racova","Racșa","Racșa-Vii","Rădulești","Rătești","Rațiu","Remetea Oașului","Resighea","Românești","Roșiori","Rușeni","Săcășeni","Sâi","Șandra","Sanislău","Sânmiclăuș","Santău","Sărătura","Sărăuad","Sărvăzel","Sătmărel","Satu Mare","Satu Mic","Săuca","Scărișoara Nouă","Sechereșa","Ser","Silvaș","Șirlău","Socond","Soconzel","Solduba","Someșeni","Stâna","Sudurău","Supur","Supuru de Jos","Supuru de Sus","Tămășeni","Tarna Mare","Târșolț","Tășnad","Tătărești","Țeghea","Terebești","Tireac","Tiream","Traian","Trip","Tur","Turț","Turț-Băi","Turulung","Turulung-Vii","Unimăt","Urziceni","Urziceni-Pădure","Văgaș","Valea Morii","Valea Seacă","Valea Vinului","Vama","Vânătorești","Vetiș","Vezendiu","Viile Satu Mare","Viișoara"]},{"abr":"sb","nume":"Sibiu","localitati":["Aciliu","Agârbiciu","Agnita","Alămor","Albi","Alma","Alma Vii","Alțina","Amnaș","Apoldu de Jos","Apoldu de Sus","Apoș","Armeni","Arpașu de Jos","Arpașu de Sus","Ațel","Avrig","Axente Sever","Bârghiș","Bazna","Benești","Biertan","Blăjel","Boarta","Bogatu Român","Boian","Boița","Brădeni","Bradu","Brateiu","Broșteni","Bruiu","Buia","Bungard","Buzd","Cârța","Cârțișoara","Cașolț","Chesler","Chirpăr","Cisnădie","Cisnădioara","Colonia Tălmaciu","Colonia Târnava","Colun","Copșa Mare","Copșa Mică","Cornățel","Coveș","Crinț","Cristian","Curciu","Daia","Dârlos","Dealu Frumos","Dobârca","Dumbrăveni","Dupuș","Ernea","Fântânele","Florești","Fofeldea","Galeș","Gherdeal","Ghijasa de Jos","Ghijasa de Sus","Giacăș","Glâmboaca","Gura Râului","Gusu","Hamba","Hașag","Hoghilag","Hosman","Iacobeni","Ighișu Nou","Ighișu Vechi","Ilimbav","Jina","Laslea","Lazaret","Loamneș","Lotrioara","Ludoș","Mag","Mălâncrav","Mândra","Marpod","Mârșa","Mediaș","Merghindeal","Metiș","Micăsasa","Miercurea Sibiului","Mighindoala","Mihăileni","Moardăș","Mohu","Moșna","Motiș","Movile","Nemșa","Netuș","Nocrich","Noiștat","Nou","Nou Român","Nou Săsesc","Nucet","Ocna Sibiului","Orlat","Pădureni","Paltin","Păltiniș","Păuca","Păucea","Pelișor","Petiș","Poiana Sibiului","Poienița","Poplaca","Porumbacu de Jos","Porumbacu de Sus","Presaca","Prislop","Prod","Racovița","Rășinari","Râu Sadului","Răvășel","Retiș","Richiș","Roandola","Rod","Romanești","Roșia","Ruja","Rusciori","Ruși","Săcădate","Săcel","Sădinca","Sadu","Șalcău","Săliște","Sângătin","Sărata","Șaroș pe Târnave","Săsăuș","Scoreiu","Sebeșu de Jos","Sebeșu de Sus","Șeica Mare","Șeica Mică","Șelimbăr","Sibiel","Sibiu","Slimnic","Șmig","Șoala","Șomartin","Soroștin","Stejărișu","Ștenea","Șura Mare","Șura Mică","Tălmăcel","Tălmaciu","Țapu","Târnava","Țeline","Țichindeal","Tilișca","Topârcea","Turnu Roșu","Valchid","Vale","Valea Lungă","Valea Viilor","Văleni","Vărd","Vecerd","Velț","Veseud (Chirpăr)","Veseud (Slimnic)","Veștem","Vurpăr","Zlagna"]},{"abr":"sv","nume":"Suceava","localitati":["Adâncata","Antoceni","Arbore","Argel","Argestru","Arghira","Arțari","Bădeuți","Badragi","Bahna Arin","Baia","Baineț","Băișești","Bălăceana","Bălcăuți","Bălinești","Băncești","Bănești","Bărăști","Basarabi","Benia","Berchișești","Berești","Bilca","Bivolăria","Bobeica","Bodnăreni","Bogata","Bogdănești","Boroaia","Bosanci","Botești","Botoș","Botoșana","Botoșanița Mare","Botoșanița Mică","Botuș","Botușel","Boura","Brădățel","Brăiești","Braniștea","Brașca","Breaza","Breaza de Sus","Brodina","Brodina (Izvoarele Sucevei)","Brodina de Jos","Broșteni","Broșteni (Drăgușeni)","Bucșoaia","Buda (Râșca)","Buda (Zvoriștea)","Budeni","Bulai","Bunești","Burla","Bursuceni","Cacica","Cajvana","Calafindești","Călinești (Dărmănești)","Călinești (Șerbăuți)","Călinești-Vasilache","Călugăreni","Cămârzani","Câmpulung Moldovenesc","Capu Câmpului","Capu Codrului","Cârlibaba","Cârlibaba Nouă","Căsoi","Catrinari","Chilișeni","Chiril","Ciocănești","Ciomârtan","Ciprian Porumbescu","Ciumârna","Ciumulești","Climăuți","Clit","Codru","Cojocăreni","Cojoci","Colacu","Comănești","Corlata","Corni","Cornu Luncii","Corocăiești","Corpaci","Coșna","Costâna","Costileva","Costișa","Cotârgași","Cotu Băii","Cotu Dobei","Coverca","Cozănești","Crucea","Cumpărătura","Cununschi","Dănila","Dărmănești","Dârmoxa","Dealu","Dealu Floreni","Deia","Deleni","Delnița","Deluț","Demacușa","Dolhasca","Dolhești","Dolheștii Mari","Dolheștii Mici","Dorna Candrenilor","Dorna-Arini","Dornești","Dornișoara","Doroteia","Drăgoiasa","Drăgoiești","Dragomirna","Dragoșa","Drăgușeni","Dubiusca","Dumbrava (Cornu Luncii)","Dumbrava (Grănicești)","Dumbrăveni","Dumbrăveni (Râșca)","Dumbrăvița","Ehrește","Falcău","Fălticeni","Fântâna Mare","Fântânele","Fetești","Florinta","Forăști","Frasin","Frasin (Broșteni)","Frătăuții Noi","Frătăuții Vechi","Frumoasa","Frumosu","Fundu Moldovei","Găinești","Gălănești","Gara","Gara Leu","Gemenea","Gheorghițeni","Giulești","Giurgești","Glodu","Grămești","Grănicești","Grigorești","Groapa Vlădichii","Gropeni","Gulia","Gura Haitii","Gura Humorului","Gura Putnei","Gura Solcii","Hăleasa","Hancea","Hănțești","Hârtop","Herla","Holda","Holdița","Horodnic","Horodnic de Jos","Horodnic de Sus","Horodniceni","Hreațca","Humoreni","Hurjuieni","Huși","Iacobeni","Iacobești","Iaslovăț","Iaz","Iedu","Iesle","Ilișești","Ioneasa","Ipotești","Izvoarele Sucevei","Jacota","Jahalia","Lămășeni","Leucușești","Lipoveni","Lisaura","Liteni","Liteni (Moara)","Lucăcești","Lunca (Milișăuți)","Lunca (Zamostea)","Luncușoara","Lungeni","Lupcina","Măgura","Maidan","Mălini","Mănăstioara (Siret)","Mănăstioara (Udești)","Mănăstirea Humorului","Măneuți","Manolea","Marginea","Măriței","Mărițeia Mică","Măzănăești","Mereni","Merești","Mestecăniș","Mesteceni","Mihăiești","Mihoveni","Milișăuți","Mironu","Mitocași","Mitocu Dragomirnei","Moara","Moara Carp","Moara Nica","Moișa","Moldova-Sulița","Moldovița","Molid","Movileni","Mușenița","Neagra","Neagra Șarului","Negostina","Negrileasa","Nicani","Nigotești","Nisipitu","Norocu","Obcina","Oniceni","Ortoaia","Osoi","Ostra","Pădureni","Păiseni","Paltin","Păltiniș","Păltinoasa","Paltinu","Panaci","Pâraie","Pârâu Negrei","Părhăuți","Pârteștii de Jos","Pârteștii de Sus","Pătrăuți","Petia","Pietroasa","Pilugani","Plai","Plaiu Șarului","Plăvălari","Pleșa","Pleșești","Plopeni","Plutonița","Pocoleni","Podeni","Podu Coșnei","Poiana (Dolhasca)","Poiana (Zvoriștea)","Poiana Mărului","Poiana Micului","Poiana Negrii","Poiana Stampei","Poienari","Poieni-Solca","Poieni-Suceava","Pojorâta","Prăleni","Praxia","Prelipca","Preutești","Prisaca Dornei","Probota","Putna","Racova","Rădășeni","Rădăuți","Rașca","Râșca","Răuțeni","Reuseni","Românești (Coșna)","Românești (Grănicești)","Roșcani","Roșiori","Roșu","Rotopănești","Rotunda","Rudești","Runcu","Rusca","Ruși","Rușii-Mănăstioara","Săcuța","Sadău","Sadova","Sălăgeni","Salcea","Sârghiești","Sărișor","Sărișoru Mare","Șaru Bucovinei","Șaru Dornei","Sasca Mare","Sasca Mică","Sasca Nouă","Satu Mare","Satu Mare (Crucea)","Șcheia","Securiceni","Șerbănești","Șerbăuți","Șes","Șesuri","Sfântu Ilie","Siliștea","Siliștea Nouă","Siminicea","Șinca","Siret","Slatina","Slătioara (Râșca)","Slătioara (Stulpicani)","Slobozia (Fântânele)","Slobozia (Zvoriștea)","Slobozia Sucevei","Smida Ungurenilor","Solca","Șoldănești","Soloneț","Solonețu Nou","Spătărești","Stamate","Stânca","Stâncuța","Știrbăț","Straja","Strâmtura","Stroiești","Stulpicani","Suceava","Sucevița","Sunători","Țarna Mare","Tărnicioara","Tătaru","Tăutești","Teșna (Coșna)","Teșna (Poiana Stampei)","Țibău","Țibeni","Tișăuți","Todireni","Todirești","Țolești","Trei Movile","Udești","Uidești","Ulma","Uncești","Vadu Moldovei","Vadu Negrilesei","Vâlcelele","Valea Bancului","Valea Bourei","Valea Glodului","Valea Moldovei","Valea Poienei","Valea Putnei","Valea Stânei","Văleni-Stânișoara","Vama","Văratec","Vârfu Dealului","Varvata","Vășcăuți","Vatra Dornei","Vatra Moldoviței","Verbia","Vercicani","Verești","Vicovu de Jos","Vicovu de Sus","Vicșani","Voievodeasa","Voitinel","Volovăț","Vornicenii Mari","Vornicenii Mici","Voroneț","Vulturești","Zaharești","Zalomestra","Zamostea","Zvoriștea"]},{"abr":"tr","nume":"Teleorman","localitati":["Albeni","Albești","Alexandria","Antonești","Băbăița","Băcălești","Baciu","Băduleasa","Balaci","Baldovinești","Balta Sărată","Băneasa","Banov","Bârseștii de Jos","Bâscoveni","Beciu","Beiu","Belciug","Beuca","Blejești","Bogdana","Botoroaga","Bragadiru","Brânceni","Brâncoveanca","Brătășani","Bratcovu","Brătești","Brebina","Broșteanca","Bujoreni","Bujoru","Bujoru (Călmățuiu)","Burdeni","Butculești","Butești","Buzescu","Călinești","Călmățuiu","Călmățuiu de Sus","Calomfirești","Călugăru","Caravaneți","Cârlomanu","Cătunu","Cernetu","Cervenia","Cetatea","Ciolănești","Ciolăneștii din Deal","Ciolăneștii din Vale","Ciuperceni","Ciuperceni (Cosmești)","Ciurari","Ciurari-Deal","Clănița","Comoara","Conțești","Copăceanca","Cosmești","Coșoaia","Coșoteni","Crângeni","Crângu","Crevenicu","Cucueți","Dărvaș","Deparați","Didești","Dobreni","Dobrotești","Dorobanțu","Dracea","Drăcești","Drăcșani","Drăcșenei","Drăgănești de Vede","Drăgănești-Vlașca","Drăghinești","Dudu","Dulceanca","Dulceni","Fântânele","Florica","Frăsinet","Frumoasa","Furculești","Gălăteni","Gărăgău","Gârdești","Grădișteanca","Gratia","Gresia","Guruieni","Însurăței","Ionașcu","Islaz","Izvoarele","Lăceni","Lada","Licuriciu","Linia Costii","Lisa","Lița","Ludăneasca","Lunca","Măgura","Măgura cu Liliac","Măldăeni","Marița","Mârzănești","Mavrodin","Mereni","Merenii de Jos","Merenii de Sus","Meri","Merișani (Băbăița)","Merișani (Dobrotești)","Moldoveni","Moșteni","Moșteni (Furculești)","Nanov","Năsturelu","Năvodari","Necșești","Negreni","Negrenii de Sus","Negrenii-Osebiți","Negrilești","Nenciulești","Nicolae Bălcescu","Obârtu","Odobeasca","Olteanca","Olteni","Orbeasca","Orbeasca de Jos","Orbeasca de Sus","Păru Rotund","Păuleasca","Peretu","Perii Broșteni","Piatra","Pietroșani","Pleașov","Plopi","Plopii-Slăvitești","Plosca","Poeni","Poiana","Poroschia","Preajba","Prunaru","Prundu","Purani","Purani (Vitănești)","Puranii de Sus","Putineiu","Rădoiești","Rădoiești-Deal","Rădoiești-Vale","Rădulești","Răsmirești","Roșiori de Vede","Rotărești","Săceni","Saelele","Salcia","Sârbeni","Sârbenii de Jos","Satu Nou","Satul Vechi","Schitu Poienari","Scrioaștea","Scurtu Mare","Scurtu-Slăvești","Seaca","Secara","Segarcea-Deal","Segarcea-Vale","Sericu","Sfințești","Siliștea","Siliștea (Vitănești)","Siliștea Gumești","Siliștea Mică","Slăvești","Slobozia Mândra","Smârdan","Smârdioasa","Socetu","Șoimu","Spătărei","Ștefeni","Stejaru","Stejaru (Crângeni)","Ștorobăneasa","Suhaia","Talpa","Talpa Poștei","Talpa-Bâscoveni","Talpa-Ogrăzile","Târnava","Tătărăștii de Jos","Tătărăștii de Sus","Țăvârlău","Tecuci","Teleormanu","Țigănești","Traian","Trivalea-Moșteni","Troianul","Tudor Vladimirescu","Tunari","Turnu Măgurele","Uda-Clocociov","Uda-Paciurea","Udeni","Udupu","Ulmeni","Urluiu","Văcărești","Văceni","Valea Cireșului","Valea Părului","Valea Poștei","Vânători","Vârtoape","Vârtoapele de Jos","Vârtoapele de Sus","Vătași","Vatra","Vedea","Videle","Viile","Viișoara","Vitănești","Voievoda","Zâmbreasca","Zimnicea","Zimnicele","Zlata"]},{"abr":"tm","nume":"Timiș","localitati":["Albina","Alioș","Altringen","Babșa","Bacova","Balinț","Baloșești","Banloc","Bara","Bărăteaz","Bârna","Bătești","Bazoș","Bazoșu Nou","Beba Veche","Becicherecu Mic","Begheiu Mic","Belinț","Bencecu de Jos","Bencecu de Sus","Berecuța","Beregsău Mare","Beregsău Mic","Berini","Bethausen","Bichigi","Biled","Birda","Blajova","Bobda","Bodo","Bogda","Boldur","Botești","Botinești","Brănești","Breazova","Breștea","Brestovăț","Bucovăț (Dumbrava)","Bucovăț (Remetea Mare)","Bulgăruș","Bulza","Bunea Mare","Bunea Mică","Butin","Buzad","Buziaș","Cadăr","Călacea","Căpăt","Carani","Cărpiniș","Cebza","Cenad","Cenei","Cerna","Cerneteaz","Charlotenburg","Checea","Checheș","Cheglevici","Cherestur","Chevereșu Mare","Chișoda","Chizătău","Ciacova","Cireșu","Cireșu Mic","Cladova","Cliciova","Clopodia","Colonia Bulgară","Colonia Fabricii","Colonia Mică","Comeat","Comloșu Mare","Comloșu Mic","Cornești","Coșarii","Coșava","Coșevița","Coșteiu","Coșteiu de Sus","Covaci","Crai Nou","Cralovăț","Criciova","Crivina","Crivina de Sus","Crivobara","Cruceni","Curtea","Cutina","Darova","Dejan","Denta","Deta","Diniaș","Dobrești","Dolaț","Drăgoiești","Dragomirești","Dragșina","Drăgsinești","Drinova","Dubești","Duboz","Dudeștii Noi","Dudeștii Vechi","Dumbrava","Dumbrăvița","Fădimac","Făget","Fărășești","Fârdea","Ferendia","Fibiș","Ficătar","Foeni","Folea","Gad","Gaiu Mic","Gătaia","Gavojdia","Gelu","Gherman","Ghilad","Ghiroda","Ghizela","Giarmata","Giarmata-Vii","Giera","Giroc","Giulvăz","Gladna Montană","Gladna Română","Gottlob","Grabaț","Grănicerii","Groși","Gruni","Hăuzești","Herendești","Herneacova","Hezeriș","Hisiaș","Hitiaș","Hodoni","Hodoș (Brestovăț)","Hodoș (Darova)","Homojdia","Honorici","Ianova","Icloda","Ictar-Budinți","Iecea Mare","Iecea Mică","Ierșnic","Igriș","Iohanisfeld","Iosif","Iosifalău","Ivanda","Izvin","Jabăr","Jamu Mare","Jdioara","Jebel","Jena","Jimbolia","Jupânești","Jupani","Jurești","Lăpușnic","Lățunaș","Lenauheim","Leucușești","Liebling","Livezile","Lovrin","Lucareț","Lugoj","Lugojel","Luncanii de Jos","Luncanii de Sus","Lunga","Macedonia","Măguri","Mânăstire","Mănăștiur","Margina","Mașloc","Mâtnicu Mic","Moravița","Moșnița Nouă","Moșnița Veche","Murani","Nadăș","Nădrag","Nemeșești","Nerău","Nevrincea","Nițchidorf","Obad","Ofsenița","Ohaba Lungă","Ohaba Română","Ohaba-Forgaci","Oloșag","Opatița","Orțișoara","Otelec","Otvești","Pădurani","Pădureni","Pădureni (Victor Vlad Delamarina)","Paniova","Parța","Partoș","Păru","Peciu Nou","Percosova","Periam","Pesac","Petroasa Mare","Petroman","Petrovaselo","Pietroasa","Pini","Pișchia","Pogănești","Poieni","Pordeanu","Povârgina","Pustiniș","Răchita","Racovița","Rădmănești","Răuți","Recaș","Remetea Mare","Remetea Mică","Remetea-Luncă","Românești","Rovinița Mare","Rovinița Mică","Rudicica","Rudna","Săcălaz","Săceni","Sacoșu Mare","Sacoșu Turcesc","Șag","Sălbăgel","Sălciua Nouă","Sânandrei","Șandra","Sângeorge","Sânmartinu Maghiar","Sânmartinu Sârbesc","Sânmihaiu German","Sânmihaiu Român","Sânnicolau Mare","Șanovița","Sânpetru Mare","Sânpetru Mic","Saravale","Sărăzani","Sârbova","Satchinez","Sculia","Secaș","Seceani","Șemlacu Mare","Șemlacu Mic","Silagiu","Sinersig","Sintar","Sintești","Șipet","Soca","Spata","Stamora Germană","Stamora Română","Stanciova","Știuca","Sudriaș","Surducu Mic","Susani","Suștra","Tapia","Târgoviște","Temerești","Teremia Mare","Teremia Mică","Teș","Timișoara","Țipari","Toager","Tomești","Tomnatic","Topla","Topolovățu Mare","Topolovățu Mic","Tormac","Traian Vuia","Uihei","Uivar","Uliuc","Unip","Urseni","Utvin","Vălcani","Valea Lungă Română","Variaș","Victor Vlad Delamarina","Visag","Vizejdia","Vizma","Voiteg","Vucova","Zgribești","Zolt","Zorani"]},{"abr":"tl","nume":"Tulcea","localitati":["Agighiol","Alba","Ardealu","Atmagea","Babadag","Baia","Balabancea","Băltenii de Jos","Băltenii de Sus","Beidaud","Beștepe","C.A. Rosetti","Calfa","Camena","Căprioara","Caraorman","Carcaliu","Cardon","Cârjelari","Casimcea","Câșlița","Cataloi","Caugagia","Ceamurlia de Jos","Ceamurlia de Sus","Ceatalchioi","Cerbu","Cerna","Chilia Veche","Cișmeaua Nouă","Ciucurova","Cloșca","Colina","Corugea","Crișan","Dăeni","Dorobanțu","Dunavățu de Jos","Dunavățu de Sus","Enisala","Făgărașu Nou","Fântâna Mare","Fântâna Oilor","Florești","Frecăței","Garvăn","General Praporgescu","Gorgova","Greci","Grindu","Haidar","Hamcearca","Horia","I.C. Brătianu","Iazurile","Ilganii de Jos","Ilganii de Sus","Isaccea","Iulia","Izvoarele","Jijila","Jurilovca","Lăstuni","Letea","Luminița","Lunca","Luncavița","Măcin","Măgurele","Mahmudia","Malcoci","Maliuc","Meșteru","Mihai Bravu","Mihail Kogălniceanu","Mila 23","Mina Altân Tepe","Mineri","Mircea Vodă","Murighiol","Nalbant","Neatârnarea","Nicolae Bălcescu","Niculițel","Nifon","Nufăru","Ostrov","Ostrov Tătaru","Panduru","Parcheș","Pardina","Partizani","Pătlăgeanca","Peceneaga","Periprava","Piatra","Plauru","Plopul","Poșta","Rachelu","Rahman","Rândunica","Războieni","Revărsarea","Sabangia","Sălceni","Sălcioara","Sâmbăta Nouă","Sarichioi","Sarighiol de Deal","Sarinasuf","Satu Nou","Sfântu Gheorghe","Sfiștofca","Slava Cercheză","Slava Rusă","Smârdan","Somova","Stânca","Stejaru","Sulina","Tatanir","Telița","Tichilești","Topolog","Traian","Trestenic","Tudor Vladimirescu","Tulcea","Turcoaia","Turda","Uzlina","Văcăreni","Valea Nucarilor","Valea Teilor","Vasile Alecsandri","Victoria","Vișina","Visterna","Vulturu","Zebil"]},{"abr":"vl","nume":"Vâlcea","localitati":["Afânata","Aldești","Alunu","Amărăști","Andreiești","Aninoasa","Aranghel","Aricioaia","Armășești","Arsanca","Aurești","Avrămești","Băbeni","Băbeni-Oltețu","Băbuești","Bădeni","Băiașa","Băiașu","Băile Govora","Băile Olănești","Băjenari","Balaciu","Bălcești","Balomireasa","Balota","Bălșoara","Bălțățeni","Bălteni","Băluțoaia","Bănești","Bănțești","Bărbărigeni","Bărbătești","Bărbuceni","Barcanele","Bărcănești","Bârlogu","Băroiu","Bârsești (Budești)","Bârsești (Mihăești)","Bârsoiu","Barza","Bârzești","Bătășani","Becșani","Benești","Berbești","Berbești (Laloșu)","Bercioiu","Berești","Berislăvești","Bistrița","Blănoiu","Blejani","Blidari","Bocșa","Bodești (Alunu)","Bodești (Bărbătești)","Bogdănești (Bujoreni)","Bogdănești (Oteșani)","Bogdănești (Tomșani)","Boișoara","Bonciu","Bondoci","Boroșești","Botorani","Brădișor","Bradu-Clocotici","Bratia din Deal","Bratia din Vale","Bratovești","Brezoi","Broșteni","Buciumeni","Bucșani","Buda","Budele","Budești","Budești (Diculești)","Budurăști","Bujoreni","Bulagei","Buleta","Bumbuești","Bunești","Bungețani","Burdălești","Butanu","Buzdugan","Căciulata","Câineni","Câinenii Mari","Câinenii Mici","Căligi","Călimănești","Călina","Călinești","Capu Dealului","Carcadiești","Cârlogani","Cârstănești","Casa Veche","Cățetu","Căzănești (Ghioroiu)","Căzănești (Milcoiu)","Căzănești (Râmnicu Vâlcea)","Ceretu","Cermegești (Lădești)","Cermegești (Pesceana)","Cerna","Cernelele","Cernișoara","Cetățeaua","Cheia","Cherăști","Chiceni","Chirculești","Chiricești","Cioboți","Ciocâltei","Ciocănari","Cioponești","Ciorăști","Ciortești","Cireșu","Cireșul","Ciucheți","Ciumagi","Ciungetu","Ciutești","Coasta (Golești)","Coasta (Păușești-Măglași)","Coasta Cerbului","Coasta Mare","Cocoru","Colelia","Colțești","Comanca","Condoiești","Contea","Copăcelu","Copăceni","Copăceni (Racovița)","Corbii din Vale","Corbu","Cornet","Coșani","Cosota","Costești","Crângu","Cremenari","Crețeni","Cucești","Cuci","Cucoiu","Cuculești","Cueni","Curăturile","Curtea","Dăești","Dăești (Popești)","Dămțeni","Dăncăi","Dângești","Dănicei","Dealu Aluniș","Dealu Bisericii","Dealu Corni","Dealu Glămeia","Dealu Lăunele","Dealu Malului","Dealu Mare (Galicea)","Dealu Mare (Gușoeni)","Dealu Mare (Ionești)","Dealu Scheiului","Dealu Văleni","Dejoi","Deleni","Delureni (Ionești)","Delureni (Stoilești)","Delureni (Valea Mare)","Dezrobiți","Diaconești","Dianu","Diculești","Dimulești","Dobrești","Dobricea","Dobriceni","Dobrușa","Dosu Râului","Dozești","Drăgănești (Brezoi)","Drăgănești (Golești)","Drăganu","Drăgășani","Drăgioiu","Drăgoești","Drăgulești","Dumbrava","Dumbrăvești","Făcăi","Fârtățești","Făurești","Făurești (Zătreni)","Fedeleșoiu","Firești","Firijba","Fișcălia","Foleștii de Jos","Foleștii de Sus","Fotești","Frâncești","Frâncești-Coasta","Frasina","Fumureni","Fundătura","Găgeni","Găinești","Galicea","Gâltofani","Gănești","Gănțulei","Gârnicet","Gârnicetu","Gătejești","Găujani","Găvănești","Geamăna (Drăgoești)","Geamăna (Stoilești)","Genuneni","Ghindari","Ghiobești","Ghioroiu","Gibești","Ginerica","Giulești","Giuleștii de Sus","Giurgiuveni","Giuroiu","Glăvile","Glodu","Golești","Golotreni","Gorunești (Bălcești)","Gorunești (Slătioara)","Govora","Grădiștea","Greblești","Greci","Gropeni","Groși","Gruieri","Gruiu","Gruiu Lupului","Guguianca","Gura Crucilor","Gura Suhașului","Gura Văii","Gurguiata","Gurișoara","Gușoeni","Gușoianca","Herăști","Horezu","Hotărasa","Hotarele","Hotăroaia","Iacovile","Ifrimești","Igoiu","Ilaciu","Ionești","Irimești","Izbășești","Izvorașu","Izvoru","Izvoru Rece (Stoilești)","Izvoru Rece (Vaideeni)","Jaroștea","Jiblea Nouă","Jiblea Veche","Lăcusteni","Lăcustenii de Jos","Lăcustenii de Sus","Lădești","Laloșu","Lăpușata","Lăunele de Jos","Linia (Budești)","Linia (Grădiștea)","Linia Dealului","Linia Hanului","Linia pe Vale","Livadia","Livezi","Lunca (Bujoreni)","Lunca (Ocnele Mari)","Lungești","Lupoaia","Lupuiești","Măciuca","Măciuceni","Mădulari","Mădulari (Cernișoara)","Măgura","Măgureni","Malaia","Măldărești","Măldărești (Lădești)","Măldărești (Măciuca)","Măldăreștii de Jos","Malu","Malu Alb","Malu Vârtop","Mamu","Mănăilești","Măneasa","Mângureni","Mănicea","Marcea","Mărcușu","Mărgineni","Măricești","Marița","Mateești","Măzăraru","Măzili","Mecea","Meieni","Mereșești","Mierea","Mihăești","Mijați","Mijlocu","Milcoiu","Milești","Milostea","Mirești","Mitrofani","Mlăceni","Modoia","Mogești","Mogoșești","Mologești","Mosoroasa","Moșteni","Mrenești","Muereasca","Muereasca de Sus","Munteni","Neghinești","Negraia","Negreni","Negrulești","Nemoiu","Nenciulești","Nețești","Nicolae Bălcescu","Nicolești","Nisipi","Obârșia","Obislavu","Obogeni","Obrocești","Ocnele Mari","Ocnița","Ocracu","Olănești","Olanu","Olteanca (Glăvile)","Olteanca (Lădești)","Olteni","Oltețani","Oltețu","Opătești","Orlești","Ostroveni","Oteșani","Otetelișu","Oveselu","Padina","Pădurețu","Palanga","Pârâienii de Jos","Pârâienii de Mijloc","Pârâienii de Sus","Părăușani","Păsărei","Păscoaia","Păsculești","Pătești","Păușa","Păușești","Păușești-Măglași","Păușești-Otăsău","Perișani","Pertești","Pesceana","Pietrari","Pietrari (Păușești-Măglași)","Pietrarii de Sus","Pietreni","Pietrișu","Pietroasa","Piscu Mare","Piscu Pietrei","Piscu Scoarței","Pleașa","Pleșești","Pleșoiu (Livezi)","Pleșoiu (Nicolae Bălcescu)","Podeni","Poenari","Poenița","Poiana","Poienari","Pojogi-Cerna","Popești","Popești (Fârtățești)","Popești (Golești)","Popești (Lădești)","Popești (Măciuca)","Popești (Nicolae Bălcescu)","Popești (Sinești)","Popești (Stoenești)","Popești (Tetoiu)","Portărești","Prajila","Predești","Preotești","Priba","Priloage","Pripoara","Pripoare","Priporu","Procopoaia","Prodănești","Proieni","Prundeni","Racovița","Racovița (Budești)","Racu","Rădăcinești","Râmești (Horezu)","Râmești (Șușani)","Râmnicu Vâlcea","Râpa Cărămizii","Râpănești","Rățălești","Râu Vadului","Râureni","Robaia","Robești","Roești","Roești (Pesceana)","Romanești","Români","Romanii de Jos","Romanii de Sus","Roșia","Roșiile","Roșioara","Roșoveni","Rotărăști","Ruda","Rugetu (Mihăești)","Rugetu (Slătioara)","Runcu","Rusănești","Saioci","Sălătrucel","Săliștea","Sânbotin","Sârbi","Sărsănești","Sărulești","Sășcioara","Satu Poieni","Scaioși","Scărișoara","Scăueni","Schitu","Scorușu","Scundu","Seaca (Călimănești)","Seaca (Sălătrucel)","Seciu","Șerbăneasa","Șerbănești (Lăpușata)","Șerbănești (Păușești)","Șerbănești (Sălătrucel)","Șerbănești (Ștefănești)","Silea","Sinești","Șirineasa","Slătioara","Slătioarele","Slăvitești","Snamăna","Șolicești","Șotani","Spârleni","Spinu","Stănculești","Stănești","Stănești (Stoilești)","Stănești-Lunca","Stanomiru","Ștefănești","Ștefănești (Măciuca)","Știrbești","Stoenești","Stoenești (Berislăvești)","Stoicănești","Stoiculești","Stoilești","Stolniceni","Străchinești","Streminoasa","Stroești","Stupărei","Sub Deal","Suiești","Surdoiu","Șuricaru","Surpatele","Surpați","Șușani","Suseni","Șuta","Sutești","Tănăsești","Tanislavi","Târgu Gângulești","Tătărani","Țeica","Teiu","Teiul","Teiușu","Telechești","Țepești","Tepșenari","Tetoiu","Tighina","Tina","Tisa","Titești","Titireci","Tomșani","Troian","Trundin","Tufanii","Tulei-Câmpeni","Turburea","Turcești","Tuțulești","Țuțuru","Udrești","Ulmețel","Ulmetu","Urșani","Urși (Popești)","Urși (Stoilești)","Ursoaia","Urzica","Ușurei","Vaideeni","Valea Alunișului","Valea Babei","Valea Bălcească","Valea Caselor (Drăgășani)","Valea Caselor (Popești)","Valea Cheii","Valea Grădiștei","Valea lui Stan","Valea Lungă","Valea Măceșului","Valea Mare","Valea Mare (Băbeni)","Valea Mare (Berbești)","Valea Râului","Valea Scheiului","Valea Ursului","Valea Văleni","Valea Viei","Văleni (Păușești)","Văleni (Zătreni)","Vărateci","Văratica","Văratici","Vârleni","Vătășești","Verdea","Vețelu","Viișoara","Vlădești","Vlăduceni","Vlădulești","Voicești","Voiceștii din Vale","Voiculeasa","Voineasa","Voineșița","Vulpuești","Zărneni","Zărnești","Zătreni","Zătrenii de Sus","Zăvideni","Zăvoieni","Zgubea","Zlătărei","Zmeurătu"]},{"abr":"vs","nume":"Vaslui","localitati":["1 Decembrie","Albești","Albești (Delești)","Albina","Albița","Alexandru Vlahuță","Armășeni (Băcești)","Armășeni (Bunești-Averești)","Armășoaia","Arșița","Arsura","Averești","Avrămești","Băbușa","Băbuța","Băcani","Băcăoani","Băcești","Bădeana","Bahnari","Băile Drânceni","Bălești","Băltățeni","Bălțați","Bălteni","Bălteni-Deal","Banca","Băncești","Barboși","Bârlad","Bârlălești","Bărtăluș-Mocani","Bărtăluș-Răzeși","Bârzești","Bejenești","Belcești","Belzeni","Benești","Bereasa","Berezeni","Blăgești","Bleșca","Bobești","Bogdana","Bogdana-Voloseni","Bogdănești","Bogdănești (Fălciu)","Bogdănița","Bogești","Bolați","Borodești","Boțești","Boțoaia","Botoi","Boușori","Bozia","Brădești","Brăhășoaia","Brodoc","Broscoșești","Broșteni","Buda (Alexandru Vlahuță)","Buda (Bogdănești)","Buda (Oșești)","Budești","Budu Cantemir","Buhăiești","Bulboaca","Bumbăta","Bunești","Bunești-Averești","Bursuci","Buscata","Butucăria","Călimănești","Călugăreni","Cănțălărești","Căpotești","Căpușneni","Cârja","Cârjoani","Cârțibași","Căzănești","Cepești","Cetățuia","Chersăcosu","Chetrești","Chetrosu","Chilieni","Chircești","Chițcani","Chițoc","Cioatele","Ciocani","Ciofeni","Ciortolom","Ciuperca","Codăești","Codreni","Condrea","Copăceana","Corbu","Corni-Albești","Corobănești","Corodești","Coroiești","Coroiești (Bogdănița)","Coroieștii de Sus","Coroiu","Coșca","Coșești","Costești","Cotic","Cozmești","Crăciunești","Crâng","Crângu Nou","Crasna","Crăsnășeni","Crețești","Crețeștii de Sus","Cristești","Crivești","Cujba","Cursești-Deal","Cursești-Vale","Curteni","Dănești","Davidești","Dealu Mare","Dealu Secării","Delea","Deleni","Deleni (Hoceni)","Delești","Dimitrie Cantemir","Dinga","Doagele","Dobroslovești","Docăneasa","Docani","Dodești","Drăgești","Dragomănești","Dragomirești","Drânceni","Draxeni","Drăxeni","Drujești","Duda","Duda-Epureni","Dumasca","Dumbrăveni","Dumești","Dumeștii Vechi","Emil Racoviță","Epureni","Epureni (Duda-Epureni)","Fălciu","Fântâna Blănarului","Fântânele","Fâstâci","Fedești","Ferești","Floreni","Florești","Focșa","Focșeasca","Frasinu","Fruntișeni","Fulgu","Fundătura (Arsura)","Fundătura (Delești)","Fundătura Mare","Fundătura Mică","Fundu Văii (Lipovăț)","Fundu Văii (Poienești)","Găgești","Gâlțești","Gănești","Gara Banca","Gara Docăneasa","Gara Roșiești","Gara Tălășman","Gârceni","Gârdești","Găvanu","Ghergheleu","Gherghești","Ghermănești (Banca)","Ghermănești (Drânceni)","Ghicani","Ghireasca","Giurcani","Giurgești","Glodeni","Grăjdeni","Grivița","Grumezoaia","Gugești","Gura Albești","Gura Idrici","Gura Văii","Gușiței","Hălărești","Halta Dodești","Hârsova","Hârșoveni","Hoceni","Hordila","Hordilești","Horga","Horoiata","Hreasca","Huc","Hupca","Hurdugi","Huși","Iana","Iaz","Ibănești","Idrici","Iezer","Iezerel","Igești","Ivănești","Ivănești (Pădureni)","Ivești","Jigălia","Lacu Babei","Lălești","Lățești","Laza","Lazu","Leoști (Pădureni)","Leoști (Tătărăni)","Lipovăț","Lunca","Lunca Banului","Lunca Veche","Lupești","Măcrești (Rebricea)","Măcrești (Zăpodeni)","Mălăiești","Mălușteni","Mânăstirea (Delești)","Mânăstirea (Mălușteni)","Mânjești","Manțu","Mânzătești","Mânzați","Mărășeni","Mărășești","Măscurei","Miclești","Miclești (Banca)","Mihail Kogălniceanu","Mircești","Mireni","Mitoc","Moara Domnească","Moara Grecilor","Morăreni","Moreni","Movileni","Muntenești","Muntenii de Jos","Muntenii de Sus","Murgeni","Mușata","Negrești","Obârșeni (Vinderei)","Obârșeni (Voinești)","Obârșenii Lingurari","Odaia Bogdana","Odaia Bursucani","Oltenești","Oprișița","Orgoiești","Oșești","Oțeleni","Oțetoaia","Păcurărești","Pădureni","Pădureni (Oșești)","Pâhna","Pâhnești","Păltiniș","Parpanița","Pârvești","Peicani","Perieni","Plopeni","Plopi","Plopoasa","Plotonești","Pochidia","Podeni","Podu Oprii","Podu Petriș","Pogana","Pogănești","Pogonești","Poiana","Poiana lui Alexa","Poiana Pietrei","Poienești","Poienești-Deal","Polocin","Popeni (Găgești)","Popeni (Zorleni)","Popești (Dragomirești)","Popești (Miclești)","Portari","Poșta Elan","Pribești","Protopopești","Puiești","Pungești","Puntișeni","Pușcași","Puțu Olarului","Racova","Racovița","Rădăești","Rădeni","Rădești","Răducani","Răduiești","Rafaila","Raiu","Rânceni","Rânzești","Rapșa","Rășcani (Dănești)","Rășcani (Șuletea)","Râșești","Râșnița","Rateșu Cuzei","Rebricea","Recea","Rediu (Hoceni)","Rediu (Roșiești)","Rediu (Vaslui)","Rediu Galian","Roșiești","Roșiori","Rotari","Rugăria","Rusca","Ruși","Sălceni","Sălcioara","Sărățeni","Săratu","Sârbi","Sasova","Satu Nou (Banca)","Satu Nou (Berezeni)","Satu Nou (Crețești)","Satu Nou (Muntenii de Sus)","Satu Nou (Pochidia)","Satu Nou (Solești)","Sauca","Schineni","Schinetea","Schitu","Secuia","Semenea","Șerbotești","Siliștea (Iana)","Siliștea (Pungești)","Siliștea (Todirești)","Simila","Similișoara","Sipeni","Șișcani","Slobozia","Soci","Sofieni","Sofronești","Solești","Șopârleni","Stâncășeni","Stănilești","Ștefan cel Mare","Stejaru","Știoborăni","Stoișești","Strâmtura-Mitoc","Stroiești","Stuhuleț","Suceveni","Șuletea","Suseni","Tăbălăiești","Tăcuta","Tălpigeni","Tanacu","Târzii","Tătărăni","Tătărăni (Dănești)","Tatomirești","Teișoru","Telejna","Țibăneștii Buhlii","Țifu","Todireni","Todirești","Tomești","Tomșa","Toporăști","Trestiana","Trohan","Tufeștii de Jos","Tulești","Tunsești","Tupilați","Țuțcani","Tutova","Ulea","Uncești","Unțești","Urdești","Uricari","Urlați","Ursoaia","Vadurile","Vâlcele","Valea Grecului","Valea lui Bosie","Valea lui Darie","Valea Lungă","Valea Lupului","Valea Mare (Dumești)","Valea Mare (Ivănești)","Valea Mare (Negrești)","Valea Oanei","Valea Popii","Valea Seacă","Valea Siliștei","Valea Târgului","Văleni","Văleni (Pădureni)","Văleni (Viișoara)","Vaslui","Verdeș","Vetrișoaia","Viișoara","Viișoara (Todirești)","Viișoara (Vaslui)","Viltotești","Vinderei","Vinețești","Vișinari","Vizureni","Vlădești","Vladia","Voinești","Voinești (Vulturești)","Vovriești","Vulpășeni","Vulturești","Vutcani","Zăpodeni","Zgura","Zizinca","Zorleni"]},{"abr":"vn","nume":"Vrancea","localitati":["Adjud","Adjudu Vechi","Alexandru Vlahuță","Andreiașu de Jos","Andreiașu de Sus","Anghelești","Argea","Armeni","Arșița","Arva","Bahnele","Bălănești","Bălești","Balta Raței","Bârsești","Bâtcari","Bătinești","Beciu","Belciugele","Biceștii de Jos","Biceștii de Sus","Bichești","Biliești","Bizighești","Blidari (Cârligele)","Blidari (Dumitrești)","Bodești","Boghești","Bogheștii de Sus","Bogza","Bolotești","Bonțești","Bordeasca Nouă","Bordeasca Veche","Bordești","Bordeștii de Jos","Boțârlău","Brădăcești","Brădetu","Broșteni","Buda","Budești","Burca","Burcioaia","Căiata","Călienii Noi","Călienii Vechi","Călimăneasa","Călimănești","Câmpineanca","Câmpuri","Cândești","Cârligele","Carșochești-Corăbița","Cătăuți","Ceardac","Cerbu","Chiojdeni","Chiricani","Chițcani","Ciolănești","Ciorani","Ciorăști","Ciușlea","Clipicești","Cocoșari","Codrești","Colacu","Copăcești","Corbița","Cornetu","Coroteni","Costișa (Homocea)","Costișa (Tănăsoaia)","Costișa de Sus","Cotești","Covrag","Coza","Crucea de Jos","Crucea de Sus","Dălhăuți","Dealu Cucului","Dealu Lung","Dealu Sării","Diocheți-Rediu","Doaga","Domnești-Sat","Domnești-Târg","Dragosloveni (Dumbrăveni)","Dragosloveni (Soveja)","Dumbrava (Panciu)","Dumbrava (Poiana Cristei)","Dumbrăveni","Dumitrești","Dumitreștii de Sus","Dumitreștii-Față","După Măgura","Făgetu","Faraoanele","Farcaș","Făurei","Feldioara","Fetești","Fetig","Fitionești","Focșani","Frecăței","Găgești","Galbeni","Găloiești","Garoafa","Ghebari","Ghimicești","Gogoiu","Golești","Goleștii de Sus","Gologanu","Greșu","Groapa Tufei","Gugești","Gura Caliței","Gura Văii","Hângulești","Haret","Hăulișca","Holbănești","Homocea","Hotaru","Igești","Irești","Iugani","Ivăncești","Izvoarele","Jariștea","Jgheaburi","Jiliște","Jitia","Jitia de Jos","Jorăști","Lacu lui Baban","Lămotești","Lărgășeni","Lăstuni","Lepșa","Lespezi","Liești","Livada","Livezile","Lojnița","Luncile","Lupoaia","Măgura","Mahriu","Măicănești","Maluri","Mănăstioara","Mândrești-Moldova","Mândrești-Munteni","Mărăcini","Mărășești","Mărăști","Mărtinești","Mătăcina","Mera","Mesteacănu","Mihălceni","Milcovel","Milcovul","Mirceștii Noi","Mirceștii Vechi","Modruzeni","Morărești","Motnău","Movilița","Muncei","Muncelu","Nănești","Nănești (Tănăsoaia)","Năruja","Neculele","Negrilești","Neicu","Nereju","Nereju Mic","Nistorești","Obrejița","Ocheșești","Odobasca","Odobești","Olăreni","Oleșești","Olteni","Oreavu","Pădureni (Jariștea)","Pădureni (Mărășești)","Pădureni (Tâmboești)","Paltin","Panciu","Pătrășcani","Păulești","Păunești","Păvălari","Petreanu","Petrești","Pietroasa (Bolotești)","Pietroasa (Câmpineanca)","Pietroasa (Tâmboești)","Pietroasa (Vârteșcoiu)","Piscu Radului","Piscu Reghiului","Pitulușa","Plăcințeni","Pleșești","Plopu","Ploscuțeni","Ploștina","Podu Lacului","Podu Nărujei","Podu Șchiopului","Podu Stoica","Poduri","Podurile","Poenile","Poiana","Poiana Cristei","Poiana Stoichii","Poienița","Popești","Prahuda","Precistanu","Prisaca","Prisecani","Pufești","Putna","Răchitașu","Răchitosu","Răcoasa","Rădăcinești","Rădulești","Răiuți","Râmniceanca","Râmniceni","Rașca","Răstoaca","Rebegari","Reghiu","Repedea","Românești","Roșcari","Roșioara","Rotileștii Mari","Rotileștii Mici","Rucăreni","Ruget","Ruginești","Sahastru","Salcia Nouă","Salcia Veche","Sârbi","Satu Nou (Ciorăști)","Satu Nou (Panciu)","Scafari","Scânteia","Seciu","Șerbănești","Șerbești","Sihlea","Siminoc","Șindrilari","Siretu","Șișcani","Slimnic","Slobozia Botești","Slobozia Bradului","Slobozia Ciorăști","Șotârcari","Soveja","Spătăreasa","Spinești","Spulber","Străjescu","Străoane","Stupina","Suraia","Tăbucești","Tâmboești","Tănăsari","Tănăsoaia","Târâtu","Tătăranu","Tătaru","Țepa","Terchești","Tichiriș","Țifești","Tinoasa","Țipău","Tișița","Titila","Tojanii de Jos","Tojanii de Sus","Topești","Trestia","Trestieni","Trotușanu","Tulburea","Tulnici","Tuțu","Ungureni","Unirea","Urechești","Ursoaia","Vadu Roșca","Vâjâitoarea","Vâlcani","Vâlcele","Vâlcelele","Valea Beciului","Valea Cotești","Valea Mică","Valea Milcovului","Valea Neagră","Valea Sării","Văleni (Movilița)","Văleni (Ruginești)","Văleni (Străoane)","Vânători","Varnița","Vărsătura","Vârteșcoiu","Verdea","Vetrești-Herăstrău","Vidra","Viișoara (Păunești)","Viișoara (Vidra)","Vintileasca","Vitănești","Vităneștii de sub Măgură","Vizantea Mănăstirească","Vizantea Răzășească","Vizantea-Livezi","Vladnicu de Jos","Vladnicu de Sus","Voetin","Voloșcani","Vrâncioaia","Vulcăneasa","Vulturu"]}]');function Tf(o){var h,V,s="";if(typeof o=="string"||typeof o=="number")s+=o;else if(typeof o=="object")if(Array.isArray(o)){var P=o.length;for(h=0;h<P;h++)o[h]&&(V=Tf(o[h]))&&(s&&(s+=" "),s+=V)}else for(V in o)o[V]&&(s&&(s+=" "),s+=V);return s}function Ua(){for(var o,h,V=0,s="",P=arguments.length;V<P;V++)(o=arguments[V])&&(h=Tf(o))&&(s&&(s+=" "),s+=h);return s}function fS(o){if(typeof document>"u")return;let h=document.head||document.getElementsByTagName("head")[0],V=document.createElement("style");V.type="text/css",h.firstChild?h.insertBefore(V,h.firstChild):h.appendChild(V),V.styleSheet?V.styleSheet.cssText=o:V.appendChild(document.createTextNode(o))}fS(`:root{--toastify-color-light: #fff;--toastify-color-dark: #121212;--toastify-color-info: #3498db;--toastify-color-success: #07bc0c;--toastify-color-warning: #f1c40f;--toastify-color-error: hsl(6, 78%, 57%);--toastify-color-transparent: rgba(255, 255, 255, .7);--toastify-icon-color-info: var(--toastify-color-info);--toastify-icon-color-success: var(--toastify-color-success);--toastify-icon-color-warning: var(--toastify-color-warning);--toastify-icon-color-error: var(--toastify-color-error);--toastify-container-width: fit-content;--toastify-toast-width: 320px;--toastify-toast-offset: 16px;--toastify-toast-top: max(var(--toastify-toast-offset), env(safe-area-inset-top));--toastify-toast-right: max(var(--toastify-toast-offset), env(safe-area-inset-right));--toastify-toast-left: max(var(--toastify-toast-offset), env(safe-area-inset-left));--toastify-toast-bottom: max(var(--toastify-toast-offset), env(safe-area-inset-bottom));--toastify-toast-background: #fff;--toastify-toast-padding: 14px;--toastify-toast-min-height: 64px;--toastify-toast-max-height: 800px;--toastify-toast-bd-radius: 6px;--toastify-toast-shadow: 0px 4px 12px rgba(0, 0, 0, .1);--toastify-font-family: sans-serif;--toastify-z-index: 9999;--toastify-text-color-light: #757575;--toastify-text-color-dark: #fff;--toastify-text-color-info: #fff;--toastify-text-color-success: #fff;--toastify-text-color-warning: #fff;--toastify-text-color-error: #fff;--toastify-spinner-color: #616161;--toastify-spinner-color-empty-area: #e0e0e0;--toastify-color-progress-light: linear-gradient(to right, #4cd964, #5ac8fa, #007aff, #34aadc, #5856d6, #ff2d55);--toastify-color-progress-dark: #bb86fc;--toastify-color-progress-info: var(--toastify-color-info);--toastify-color-progress-success: var(--toastify-color-success);--toastify-color-progress-warning: var(--toastify-color-warning);--toastify-color-progress-error: var(--toastify-color-error);--toastify-color-progress-bgo: .2}.Toastify__toast-container{z-index:var(--toastify-z-index);-webkit-transform:translate3d(0,0,var(--toastify-z-index));position:fixed;width:var(--toastify-container-width);box-sizing:border-box;color:#fff;display:flex;flex-direction:column}.Toastify__toast-container--top-left{top:var(--toastify-toast-top);left:var(--toastify-toast-left)}.Toastify__toast-container--top-center{top:var(--toastify-toast-top);left:50%;transform:translate(-50%);align-items:center}.Toastify__toast-container--top-right{top:var(--toastify-toast-top);right:var(--toastify-toast-right);align-items:end}.Toastify__toast-container--bottom-left{bottom:var(--toastify-toast-bottom);left:var(--toastify-toast-left)}.Toastify__toast-container--bottom-center{bottom:var(--toastify-toast-bottom);left:50%;transform:translate(-50%);align-items:center}.Toastify__toast-container--bottom-right{bottom:var(--toastify-toast-bottom);right:var(--toastify-toast-right);align-items:end}.Toastify__toast{--y: 0;position:relative;touch-action:none;width:var(--toastify-toast-width);min-height:var(--toastify-toast-min-height);box-sizing:border-box;margin-bottom:1rem;padding:var(--toastify-toast-padding);border-radius:var(--toastify-toast-bd-radius);box-shadow:var(--toastify-toast-shadow);max-height:var(--toastify-toast-max-height);font-family:var(--toastify-font-family);z-index:0;display:flex;flex:1 auto;align-items:center;word-break:break-word}@media only screen and (max-width: 480px){.Toastify__toast-container{width:100vw;left:env(safe-area-inset-left);margin:0}.Toastify__toast-container--top-left,.Toastify__toast-container--top-center,.Toastify__toast-container--top-right{top:env(safe-area-inset-top);transform:translate(0)}.Toastify__toast-container--bottom-left,.Toastify__toast-container--bottom-center,.Toastify__toast-container--bottom-right{bottom:env(safe-area-inset-bottom);transform:translate(0)}.Toastify__toast-container--rtl{right:env(safe-area-inset-right);left:initial}.Toastify__toast{--toastify-toast-width: 100%;margin-bottom:0;border-radius:0}}.Toastify__toast-container[data-stacked=true]{width:var(--toastify-toast-width)}.Toastify__toast--stacked{position:absolute;width:100%;transform:translate3d(0,var(--y),0) scale(var(--s));transition:transform .3s}.Toastify__toast--stacked[data-collapsed] .Toastify__toast-body,.Toastify__toast--stacked[data-collapsed] .Toastify__close-button{transition:opacity .1s}.Toastify__toast--stacked[data-collapsed=false]{overflow:visible}.Toastify__toast--stacked[data-collapsed=true]:not(:last-child)>*{opacity:0}.Toastify__toast--stacked:after{content:"";position:absolute;left:0;right:0;height:calc(var(--g) * 1px);bottom:100%}.Toastify__toast--stacked[data-pos=top]{top:0}.Toastify__toast--stacked[data-pos=bot]{bottom:0}.Toastify__toast--stacked[data-pos=bot].Toastify__toast--stacked:before{transform-origin:top}.Toastify__toast--stacked[data-pos=top].Toastify__toast--stacked:before{transform-origin:bottom}.Toastify__toast--stacked:before{content:"";position:absolute;left:0;right:0;bottom:0;height:100%;transform:scaleY(3);z-index:-1}.Toastify__toast--rtl{direction:rtl}.Toastify__toast--close-on-click{cursor:pointer}.Toastify__toast-icon{margin-inline-end:10px;width:22px;flex-shrink:0;display:flex}.Toastify--animate{animation-fill-mode:both;animation-duration:.5s}.Toastify--animate-icon{animation-fill-mode:both;animation-duration:.3s}.Toastify__toast-theme--dark{background:var(--toastify-color-dark);color:var(--toastify-text-color-dark)}.Toastify__toast-theme--light,.Toastify__toast-theme--colored.Toastify__toast--default{background:var(--toastify-color-light);color:var(--toastify-text-color-light)}.Toastify__toast-theme--colored.Toastify__toast--info{color:var(--toastify-text-color-info);background:var(--toastify-color-info)}.Toastify__toast-theme--colored.Toastify__toast--success{color:var(--toastify-text-color-success);background:var(--toastify-color-success)}.Toastify__toast-theme--colored.Toastify__toast--warning{color:var(--toastify-text-color-warning);background:var(--toastify-color-warning)}.Toastify__toast-theme--colored.Toastify__toast--error{color:var(--toastify-text-color-error);background:var(--toastify-color-error)}.Toastify__progress-bar-theme--light{background:var(--toastify-color-progress-light)}.Toastify__progress-bar-theme--dark{background:var(--toastify-color-progress-dark)}.Toastify__progress-bar--info{background:var(--toastify-color-progress-info)}.Toastify__progress-bar--success{background:var(--toastify-color-progress-success)}.Toastify__progress-bar--warning{background:var(--toastify-color-progress-warning)}.Toastify__progress-bar--error{background:var(--toastify-color-progress-error)}.Toastify__progress-bar-theme--colored.Toastify__progress-bar--info,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--success,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--warning,.Toastify__progress-bar-theme--colored.Toastify__progress-bar--error{background:var(--toastify-color-transparent)}.Toastify__close-button{color:#fff;position:absolute;top:6px;right:6px;background:transparent;outline:none;border:none;padding:0;cursor:pointer;opacity:.7;transition:.3s ease;z-index:1}.Toastify__toast--rtl .Toastify__close-button{left:6px;right:unset}.Toastify__close-button--light{color:#000;opacity:.3}.Toastify__close-button>svg{fill:currentColor;height:16px;width:14px}.Toastify__close-button:hover,.Toastify__close-button:focus{opacity:1}@keyframes Toastify__trackProgress{0%{transform:scaleX(1)}to{transform:scaleX(0)}}.Toastify__progress-bar{position:absolute;bottom:0;left:0;width:100%;height:100%;z-index:1;opacity:.7;transform-origin:left}.Toastify__progress-bar--animated{animation:Toastify__trackProgress linear 1 forwards}.Toastify__progress-bar--controlled{transition:transform .2s}.Toastify__progress-bar--rtl{right:0;left:initial;transform-origin:right;border-bottom-left-radius:initial}.Toastify__progress-bar--wrp{position:absolute;overflow:hidden;bottom:0;left:0;width:100%;height:5px;border-bottom-left-radius:var(--toastify-toast-bd-radius);border-bottom-right-radius:var(--toastify-toast-bd-radius)}.Toastify__progress-bar--wrp[data-hidden=true]{opacity:0}.Toastify__progress-bar--bg{opacity:var(--toastify-color-progress-bgo);width:100%;height:100%}.Toastify__spinner{width:20px;height:20px;box-sizing:border-box;border:2px solid;border-radius:100%;border-color:var(--toastify-spinner-color-empty-area);border-right-color:var(--toastify-spinner-color);animation:Toastify__spin .65s linear infinite}@keyframes Toastify__bounceInRight{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(3000px,0,0)}60%{opacity:1;transform:translate3d(-25px,0,0)}75%{transform:translate3d(10px,0,0)}90%{transform:translate3d(-5px,0,0)}to{transform:none}}@keyframes Toastify__bounceOutRight{20%{opacity:1;transform:translate3d(-20px,var(--y),0)}to{opacity:0;transform:translate3d(2000px,var(--y),0)}}@keyframes Toastify__bounceInLeft{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(-3000px,0,0)}60%{opacity:1;transform:translate3d(25px,0,0)}75%{transform:translate3d(-10px,0,0)}90%{transform:translate3d(5px,0,0)}to{transform:none}}@keyframes Toastify__bounceOutLeft{20%{opacity:1;transform:translate3d(20px,var(--y),0)}to{opacity:0;transform:translate3d(-2000px,var(--y),0)}}@keyframes Toastify__bounceInUp{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,3000px,0)}60%{opacity:1;transform:translate3d(0,-20px,0)}75%{transform:translate3d(0,10px,0)}90%{transform:translate3d(0,-5px,0)}to{transform:translateZ(0)}}@keyframes Toastify__bounceOutUp{20%{transform:translate3d(0,calc(var(--y) - 10px),0)}40%,45%{opacity:1;transform:translate3d(0,calc(var(--y) + 20px),0)}to{opacity:0;transform:translate3d(0,-2000px,0)}}@keyframes Toastify__bounceInDown{0%,60%,75%,90%,to{animation-timing-function:cubic-bezier(.215,.61,.355,1)}0%{opacity:0;transform:translate3d(0,-3000px,0)}60%{opacity:1;transform:translate3d(0,25px,0)}75%{transform:translate3d(0,-10px,0)}90%{transform:translate3d(0,5px,0)}to{transform:none}}@keyframes Toastify__bounceOutDown{20%{transform:translate3d(0,calc(var(--y) - 10px),0)}40%,45%{opacity:1;transform:translate3d(0,calc(var(--y) + 20px),0)}to{opacity:0;transform:translate3d(0,2000px,0)}}.Toastify__bounce-enter--top-left,.Toastify__bounce-enter--bottom-left{animation-name:Toastify__bounceInLeft}.Toastify__bounce-enter--top-right,.Toastify__bounce-enter--bottom-right{animation-name:Toastify__bounceInRight}.Toastify__bounce-enter--top-center{animation-name:Toastify__bounceInDown}.Toastify__bounce-enter--bottom-center{animation-name:Toastify__bounceInUp}.Toastify__bounce-exit--top-left,.Toastify__bounce-exit--bottom-left{animation-name:Toastify__bounceOutLeft}.Toastify__bounce-exit--top-right,.Toastify__bounce-exit--bottom-right{animation-name:Toastify__bounceOutRight}.Toastify__bounce-exit--top-center{animation-name:Toastify__bounceOutUp}.Toastify__bounce-exit--bottom-center{animation-name:Toastify__bounceOutDown}@keyframes Toastify__zoomIn{0%{opacity:0;transform:scale3d(.3,.3,.3)}50%{opacity:1}}@keyframes Toastify__zoomOut{0%{opacity:1}50%{opacity:0;transform:translate3d(0,var(--y),0) scale3d(.3,.3,.3)}to{opacity:0}}.Toastify__zoom-enter{animation-name:Toastify__zoomIn}.Toastify__zoom-exit{animation-name:Toastify__zoomOut}@keyframes Toastify__flipIn{0%{transform:perspective(400px) rotateX(90deg);animation-timing-function:ease-in;opacity:0}40%{transform:perspective(400px) rotateX(-20deg);animation-timing-function:ease-in}60%{transform:perspective(400px) rotateX(10deg);opacity:1}80%{transform:perspective(400px) rotateX(-5deg)}to{transform:perspective(400px)}}@keyframes Toastify__flipOut{0%{transform:translate3d(0,var(--y),0) perspective(400px)}30%{transform:translate3d(0,var(--y),0) perspective(400px) rotateX(-20deg);opacity:1}to{transform:translate3d(0,var(--y),0) perspective(400px) rotateX(90deg);opacity:0}}.Toastify__flip-enter{animation-name:Toastify__flipIn}.Toastify__flip-exit{animation-name:Toastify__flipOut}@keyframes Toastify__slideInRight{0%{transform:translate3d(110%,0,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInLeft{0%{transform:translate3d(-110%,0,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInUp{0%{transform:translate3d(0,110%,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideInDown{0%{transform:translate3d(0,-110%,0);visibility:visible}to{transform:translate3d(0,var(--y),0)}}@keyframes Toastify__slideOutRight{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(110%,var(--y),0)}}@keyframes Toastify__slideOutLeft{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(-110%,var(--y),0)}}@keyframes Toastify__slideOutDown{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(0,500px,0)}}@keyframes Toastify__slideOutUp{0%{transform:translate3d(0,var(--y),0)}to{visibility:hidden;transform:translate3d(0,-500px,0)}}.Toastify__slide-enter--top-left,.Toastify__slide-enter--bottom-left{animation-name:Toastify__slideInLeft}.Toastify__slide-enter--top-right,.Toastify__slide-enter--bottom-right{animation-name:Toastify__slideInRight}.Toastify__slide-enter--top-center{animation-name:Toastify__slideInDown}.Toastify__slide-enter--bottom-center{animation-name:Toastify__slideInUp}.Toastify__slide-exit--top-left,.Toastify__slide-exit--bottom-left{animation-name:Toastify__slideOutLeft;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--top-right,.Toastify__slide-exit--bottom-right{animation-name:Toastify__slideOutRight;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--top-center{animation-name:Toastify__slideOutUp;animation-timing-function:ease-in;animation-duration:.3s}.Toastify__slide-exit--bottom-center{animation-name:Toastify__slideOutDown;animation-timing-function:ease-in;animation-duration:.3s}@keyframes Toastify__spin{0%{transform:rotate(0)}to{transform:rotate(360deg)}}
`);var Tu=o=>typeof o=="number"&&!isNaN(o),ja=o=>typeof o=="string",Ke=o=>typeof o=="function",mS=o=>ja(o)||Tu(o),go=o=>ja(o)||Ke(o)?o:null,gS=(o,h)=>o===!1||Tu(o)&&o>0?o:h,So=o=>ci.isValidElement(o)||ja(o)||Ke(o)||Tu(o);function SS(o,h,V=300){let{scrollHeight:s,style:P}=o;requestAnimationFrame(()=>{P.minHeight="initial",P.height=s+"px",P.transition=`all ${V}ms`,requestAnimationFrame(()=>{P.height="0",P.padding="0",P.margin="0",setTimeout(h,V)})})}function CS({enter:o,exit:h,appendPosition:V=!1,collapse:s=!0,collapseDuration:P=300}){return function({children:R,position:N,preventExitTransition:K,done:z,nodeRef:B,isIn:D,playToast:Y}){let J=V?`${o}--${N}`:o,k=V?`${h}--${N}`:h,ti=ci.useRef(0);return ci.useLayoutEffect(()=>{let ii=B.current,Z=J.split(" "),j=G=>{G.target===B.current&&(Y(),ii.removeEventListener("animationend",j),ii.removeEventListener("animationcancel",j),ti.current===0&&G.type!=="animationcancel"&&ii.classList.remove(...Z))};ii.classList.add(...Z),ii.addEventListener("animationend",j),ii.addEventListener("animationcancel",j)},[]),ci.useEffect(()=>{let ii=B.current,Z=()=>{ii.removeEventListener("animationend",Z),s?SS(ii,z,P):z()};D||(K?Z():(ti.current=1,ii.className+=` ${k}`,ii.addEventListener("animationend",Z)))},[D]),Vi.createElement(Vi.Fragment,null,R)}}function yf(o,h){return{content:Df(o.content,o.props),containerId:o.props.containerId,id:o.props.toastId,theme:o.props.theme,type:o.props.type,data:o.props.data||{},isLoading:o.props.isLoading,icon:o.props.icon,reason:o.removalReason,status:h}}function Df(o,h,V=!1){return ci.isValidElement(o)&&!ja(o.type)?ci.cloneElement(o,{closeToast:h.closeToast,toastProps:h,data:h.data,isPaused:V}):Ke(o)?o({closeToast:h.closeToast,toastProps:h,data:h.data,isPaused:V}):o}function vS({closeToast:o,theme:h,ariaLabel:V="close"}){return Vi.createElement("button",{className:`Toastify__close-button Toastify__close-button--${h}`,type:"button",onClick:s=>{s.stopPropagation(),o(!0)},"aria-label":V},Vi.createElement("svg",{"aria-hidden":"true",viewBox:"0 0 14 16"},Vi.createElement("path",{fillRule:"evenodd",d:"M7.71 8.23l3.75 3.75-1.48 1.48-3.75-3.75-3.75 3.75L1 11.98l3.75-3.75L1 4.48 2.48 3l3.75 3.75L9.98 3l1.48 1.48-3.75 3.75z"})))}function hS({delay:o,isRunning:h,closeToast:V,type:s="default",hide:P,className:R,controlledProgress:N,progress:K,rtl:z,isIn:B,theme:D}){let Y=P||N&&K===0,J={animationDuration:`${o}ms`,animationPlayState:h?"running":"paused"};N&&(J.transform=`scaleX(${K})`);let k=Ua("Toastify__progress-bar",N?"Toastify__progress-bar--controlled":"Toastify__progress-bar--animated",`Toastify__progress-bar-theme--${D}`,`Toastify__progress-bar--${s}`,{"Toastify__progress-bar--rtl":z}),ti=Ke(R)?R({rtl:z,type:s,defaultClassName:k}):Ua(k,R),ii={[N&&K>=1?"onTransitionEnd":"onAnimationEnd"]:N&&K<1?null:()=>{B&&V()}};return Vi.createElement("div",{className:"Toastify__progress-bar--wrp","data-hidden":Y},Vi.createElement("div",{className:`Toastify__progress-bar--bg Toastify__progress-bar-theme--${D} Toastify__progress-bar--${s}`}),Vi.createElement("div",{role:"progressbar","aria-hidden":Y?"true":"false","aria-label":"notification timer",className:ti,style:J,...ii}))}var BS=1,zf=()=>`${BS++}`;function bS(o,h,V){let s=1,P=0,R=[],N=[],K=h,z=new Map,B=new Set,D=G=>(B.add(G),()=>B.delete(G)),Y=()=>{N=Array.from(z.values()),B.forEach(G=>G())},J=({containerId:G,toastId:A,updateId:x})=>{let O=G?G!==o:o!==1,Ci=z.has(A)&&x==null;return O||Ci},k=(G,A)=>{z.forEach(x=>{var O;(A==null||A===x.props.toastId)&&((O=x.toggle)==null||O.call(x,G))})},ti=G=>{var A,x;(x=(A=G.props)==null?void 0:A.onClose)==null||x.call(A,G.removalReason),G.isActive=!1},ii=G=>{if(G==null)z.forEach(ti);else{let A=z.get(G);A&&ti(A)}Y()},Z=()=>{P-=R.length,R=[]},j=G=>{var A,x;let{toastId:O,updateId:Ci}=G.props,$=Ci==null;G.staleId&&z.delete(G.staleId),G.isActive=!0,z.set(O,G),Y(),V(yf(G,$?"added":"updated")),$&&((x=(A=G.props).onOpen)==null||x.call(A))};return{id:o,props:K,observe:D,toggle:k,removeToast:ii,toasts:z,clearQueue:Z,buildToast:(G,A)=>{if(J(A))return;let{toastId:x,updateId:O,data:Ci,staleId:$,delay:ai}=A,Pi=O==null;Pi&&P++;let Ii={...K,style:K.toastStyle,key:s++,...Object.fromEntries(Object.entries(A).filter(([yi,me])=>me!=null)),toastId:x,updateId:O,data:Ci,isIn:!1,className:go(A.className||K.toastClassName),progressClassName:go(A.progressClassName||K.progressClassName),autoClose:A.isLoading?!1:gS(A.autoClose,K.autoClose),closeToast(yi){z.get(x).removalReason=yi,ii(x)},deleteToast(){let yi=z.get(x);if(yi!=null){if(V(yf(yi,"removed")),z.delete(x),P--,P<0&&(P=0),R.length>0){j(R.shift());return}Y()}}};Ii.closeButton=K.closeButton,A.closeButton===!1||So(A.closeButton)?Ii.closeButton=A.closeButton:A.closeButton===!0&&(Ii.closeButton=So(K.closeButton)?K.closeButton:!0);let Li={content:G,props:Ii,staleId:$};K.limit&&K.limit>0&&P>K.limit&&Pi?R.push(Li):Tu(ai)?setTimeout(()=>{j(Li)},ai):j(Li)},setProps(G){K=G},setToggle:(G,A)=>{let x=z.get(G);x&&(x.toggle=A)},isToastActive:G=>{var A;return(A=z.get(G))==null?void 0:A.isActive},getSnapshot:()=>N}}var ki=new Map,yu=[],Co=new Set,MS=o=>Co.forEach(h=>h(o)),Pf=()=>ki.size>0;function pS(){yu.forEach(o=>Gf(o.content,o.options)),yu=[]}var VS=(o,{containerId:h})=>{var V;return(V=ki.get(h||1))==null?void 0:V.toasts.get(o)};function Rf(o,h){var V;if(h)return!!((V=ki.get(h))!=null&&V.isToastActive(o));let s=!1;return ki.forEach(P=>{P.isToastActive(o)&&(s=!0)}),s}function yS(o){if(!Pf()){yu=yu.filter(h=>o!=null&&h.options.toastId!==o);return}if(o==null||mS(o))ki.forEach(h=>{h.removeToast(o)});else if(o&&("containerId"in o||"id"in o)){let h=ki.get(o.containerId);h?h.removeToast(o.id):ki.forEach(V=>{V.removeToast(o.id)})}}var TS=(o={})=>{ki.forEach(h=>{h.props.limit&&(!o.containerId||h.id===o.containerId)&&h.clearQueue()})};function Gf(o,h){So(o)&&(Pf()||yu.push({content:o,options:h}),ki.forEach(V=>{V.buildToast(o,h)}))}function DS(o){var h;(h=ki.get(o.containerId||1))==null||h.setToggle(o.id,o.fn)}function Af(o,h){ki.forEach(V=>{(h==null||!(h!=null&&h.containerId)||(h==null?void 0:h.containerId)===V.id)&&V.toggle(o,h==null?void 0:h.id)})}function zS(o){let h=o.containerId||1;return{subscribe(V){let s=bS(h,o,MS);ki.set(h,s);let P=s.observe(V);return pS(),()=>{P(),ki.delete(h)}},setProps(V){var s;(s=ki.get(h))==null||s.setProps(V)},getSnapshot(){var V;return(V=ki.get(h))==null?void 0:V.getSnapshot()}}}function PS(o){return Co.add(o),()=>{Co.delete(o)}}function RS(o){return o&&(ja(o.toastId)||Tu(o.toastId))?o.toastId:zf()}function Du(o,h){return Gf(o,h),h.toastId}function Fl(o,h){return{...h,type:h&&h.type||o,toastId:RS(h)}}function Zl(o){return(h,V)=>Du(h,Fl(o,V))}function mi(o,h){return Du(o,Fl("default",h))}mi.loading=(o,h)=>Du(o,Fl("default",{isLoading:!0,autoClose:!1,closeOnClick:!1,closeButton:!1,draggable:!1,...h}));function GS(o,{pending:h,error:V,success:s},P){let R;h&&(R=ja(h)?mi.loading(h,P):mi.loading(h.render,{...P,...h}));let N={isLoading:null,autoClose:null,closeOnClick:null,closeButton:null,draggable:null},K=(B,D,Y)=>{if(D==null){mi.dismiss(R);return}let J={type:B,...N,...P,data:Y},k=ja(D)?{render:D}:D;return R?mi.update(R,{...J,...k}):mi(k.render,{...J,...k}),Y},z=Ke(o)?o():o;return z.then(B=>K("success",s,B)).catch(B=>K("error",V,B)),z}mi.promise=GS;mi.success=Zl("success");mi.info=Zl("info");mi.error=Zl("error");mi.warning=Zl("warning");mi.warn=mi.warning;mi.dark=(o,h)=>Du(o,Fl("default",{theme:"dark",...h}));function AS(o){yS(o)}mi.dismiss=AS;mi.clearWaitingQueue=TS;mi.isActive=Rf;mi.update=(o,h={})=>{let V=VS(o,h);if(V){let{props:s,content:P}=V,R={delay:100,...s,...h,toastId:h.toastId||o,updateId:zf()};R.toastId!==o&&(R.staleId=o);let N=R.render||P;delete R.render,Du(N,R)}};mi.done=o=>{mi.update(o,{progress:1})};mi.onChange=PS;mi.play=o=>Af(!0,o);mi.pause=o=>Af(!1,o);function OS(o){var h;let{subscribe:V,getSnapshot:s,setProps:P}=ci.useRef(zS(o)).current;P(o);let R=(h=ci.useSyncExternalStore(V,s,s))==null?void 0:h.slice();function N(K){if(!R)return[];let z=new Map;return o.newestOnTop&&R.reverse(),R.forEach(B=>{let{position:D}=B.props;z.has(D)||z.set(D,[]),z.get(D).push(B)}),Array.from(z,B=>K(B[0],B[1]))}return{getToastToRender:N,isToastActive:Rf,count:R==null?void 0:R.length}}function NS(o){let[h,V]=ci.useState(!1),[s,P]=ci.useState(!1),R=ci.useRef(null),N=ci.useRef({start:0,delta:0,removalDistance:0,canCloseOnClick:!0,canDrag:!1,didMove:!1}).current,{autoClose:K,pauseOnHover:z,closeToast:B,onClick:D,closeOnClick:Y}=o;DS({id:o.toastId,containerId:o.containerId,fn:V}),ci.useEffect(()=>{if(o.pauseOnFocusLoss)return J(),()=>{k()}},[o.pauseOnFocusLoss]);function J(){document.hasFocus()||j(),window.addEventListener("focus",Z),window.addEventListener("blur",j)}function k(){window.removeEventListener("focus",Z),window.removeEventListener("blur",j)}function ti($){if(o.draggable===!0||o.draggable===$.pointerType){G();let ai=R.current;N.canCloseOnClick=!0,N.canDrag=!0,ai.style.transition="none",o.draggableDirection==="x"?(N.start=$.clientX,N.removalDistance=ai.offsetWidth*(o.draggablePercent/100)):(N.start=$.clientY,N.removalDistance=ai.offsetHeight*(o.draggablePercent===80?o.draggablePercent*1.5:o.draggablePercent)/100)}}function ii($){let{top:ai,bottom:Pi,left:Ii,right:Li}=R.current.getBoundingClientRect();$.nativeEvent.type!=="touchend"&&o.pauseOnHover&&$.clientX>=Ii&&$.clientX<=Li&&$.clientY>=ai&&$.clientY<=Pi?j():Z()}function Z(){V(!0)}function j(){V(!1)}function G(){N.didMove=!1,document.addEventListener("pointermove",x),document.addEventListener("pointerup",O)}function A(){document.removeEventListener("pointermove",x),document.removeEventListener("pointerup",O)}function x($){let ai=R.current;if(N.canDrag&&ai){N.didMove=!0,h&&j(),o.draggableDirection==="x"?N.delta=$.clientX-N.start:N.delta=$.clientY-N.start,N.start!==$.clientX&&(N.canCloseOnClick=!1);let Pi=o.draggableDirection==="x"?`${N.delta}px, var(--y)`:`0, calc(${N.delta}px + var(--y))`;ai.style.transform=`translate3d(${Pi},0)`,ai.style.opacity=`${1-Math.abs(N.delta/N.removalDistance)}`}}function O(){A();let $=R.current;if(N.canDrag&&N.didMove&&$){if(N.canDrag=!1,Math.abs(N.delta)>N.removalDistance){P(!0),o.closeToast(!0),o.collapseAll();return}$.style.transition="transform 0.2s, opacity 0.2s",$.style.removeProperty("transform"),$.style.removeProperty("opacity")}}let Ci={onPointerDown:ti,onPointerUp:ii};return K&&z&&(Ci.onMouseEnter=j,o.stacked||(Ci.onMouseLeave=Z)),Y&&(Ci.onClick=$=>{D&&D($),N.canCloseOnClick&&B(!0)}),{playToast:Z,pauseToast:j,isRunning:h,preventExitTransition:s,toastRef:R,eventHandlers:Ci}}var _S=typeof window<"u"?ci.useLayoutEffect:ci.useEffect,ql=({theme:o,type:h,isLoading:V,...s})=>Vi.createElement("svg",{viewBox:"0 0 24 24",width:"100%",height:"100%",fill:o==="colored"?"currentColor":`var(--toastify-icon-color-${h})`,...s});function LS(o){return Vi.createElement(ql,{...o},Vi.createElement("path",{d:"M23.32 17.191L15.438 2.184C14.728.833 13.416 0 11.996 0c-1.42 0-2.733.833-3.443 2.184L.533 17.448a4.744 4.744 0 000 4.368C1.243 23.167 2.555 24 3.975 24h16.05C22.22 24 24 22.044 24 19.632c0-.904-.251-1.746-.68-2.44zm-9.622 1.46c0 1.033-.724 1.823-1.698 1.823s-1.698-.79-1.698-1.822v-.043c0-1.028.724-1.822 1.698-1.822s1.698.79 1.698 1.822v.043zm.039-12.285l-.84 8.06c-.057.581-.408.943-.897.943-.49 0-.84-.367-.896-.942l-.84-8.065c-.057-.624.25-1.095.779-1.095h1.91c.528.005.84.476.784 1.1z"}))}function HS(o){return Vi.createElement(ql,{...o},Vi.createElement("path",{d:"M12 0a12 12 0 1012 12A12.013 12.013 0 0012 0zm.25 5a1.5 1.5 0 11-1.5 1.5 1.5 1.5 0 011.5-1.5zm2.25 13.5h-4a1 1 0 010-2h.75a.25.25 0 00.25-.25v-4.5a.25.25 0 00-.25-.25h-.75a1 1 0 010-2h1a2 2 0 012 2v4.75a.25.25 0 00.25.25h.75a1 1 0 110 2z"}))}function ES(o){return Vi.createElement(ql,{...o},Vi.createElement("path",{d:"M12 0a12 12 0 1012 12A12.014 12.014 0 0012 0zm6.927 8.2l-6.845 9.289a1.011 1.011 0 01-1.43.188l-4.888-3.908a1 1 0 111.25-1.562l4.076 3.261 6.227-8.451a1 1 0 111.61 1.183z"}))}function US(o){return Vi.createElement(ql,{...o},Vi.createElement("path",{d:"M11.983 0a12.206 12.206 0 00-8.51 3.653A11.8 11.8 0 000 12.207 11.779 11.779 0 0011.8 24h.214A12.111 12.111 0 0024 11.791 11.766 11.766 0 0011.983 0zM10.5 16.542a1.476 1.476 0 011.449-1.53h.027a1.527 1.527 0 011.523 1.47 1.475 1.475 0 01-1.449 1.53h-.027a1.529 1.529 0 01-1.523-1.47zM11 12.5v-6a1 1 0 012 0v6a1 1 0 11-2 0z"}))}function jS(){return Vi.createElement("div",{className:"Toastify__spinner"})}var vo={info:HS,warning:LS,success:ES,error:US,spinner:jS},xS=o=>o in vo;function JS({theme:o,type:h,isLoading:V,icon:s}){let P=null,R={theme:o,type:h};return s===!1||(Ke(s)?P=s({...R,isLoading:V}):ci.isValidElement(s)?P=ci.cloneElement(s,R):V?P=vo.spinner():xS(h)&&(P=vo[h](R))),P}var FS=o=>{let{isRunning:h,preventExitTransition:V,toastRef:s,eventHandlers:P,playToast:R}=NS(o),{closeButton:N,children:K,autoClose:z,onClick:B,type:D,hideProgressBar:Y,closeToast:J,transition:k,position:ti,className:ii,style:Z,progressClassName:j,updateId:G,role:A,progress:x,rtl:O,toastId:Ci,deleteToast:$,isIn:ai,isLoading:Pi,closeOnClick:Ii,theme:Li,ariaLabel:yi}=o,me=Ua("Toastify__toast",`Toastify__toast-theme--${Li}`,`Toastify__toast--${D}`,{"Toastify__toast--rtl":O},{"Toastify__toast--close-on-click":Ii}),Oe=Ke(ii)?ii({rtl:O,position:ti,type:D,defaultClassName:me}):Ua(me,ii),Hi=JS(o),b=!!x||!z,_={closeToast:J,type:D,theme:Li},q=null;return N===!1||(Ke(N)?q=N(_):ci.isValidElement(N)?q=ci.cloneElement(N,_):q=vS(_)),Vi.createElement(k,{isIn:ai,done:$,position:ti,preventExitTransition:V,nodeRef:s,playToast:R},Vi.createElement("div",{id:Ci,tabIndex:0,onClick:B,"data-in":ai,className:Oe,...P,style:Z,ref:s,...ai&&{role:A,"aria-label":yi}},Hi!=null&&Vi.createElement("div",{className:Ua("Toastify__toast-icon",{"Toastify--animate-icon Toastify__zoom-enter":!Pi})},Hi),Df(K,o,!h),q,!o.customProgressBar&&Vi.createElement(hS,{...G&&!b?{key:`p-${G}`}:{},rtl:O,theme:Li,delay:z,isRunning:h,isIn:ai,closeToast:J,hide:Y,type:D,className:j,controlledProgress:b,progress:x||0})))},ZS=(o,h=!1)=>({enter:`Toastify--animate Toastify__${o}-enter`,exit:`Toastify--animate Toastify__${o}-exit`,appendPosition:h}),Of=CS(ZS("bounce",!0)),qS={position:"top-right",transition:Of,autoClose:5e3,closeButton:!0,pauseOnHover:!0,pauseOnFocusLoss:!0,draggable:"touch",draggablePercent:80,draggableDirection:"x",role:"alert",theme:"light","aria-label":"Notifications Alt+T",hotKeys:o=>o.altKey&&o.code==="KeyT"};function YS(o){let h={...qS,...o},V=o.stacked,[s,P]=ci.useState(!0),R=ci.useRef(null),{getToastToRender:N,isToastActive:K,count:z}=OS(h),{className:B,style:D,rtl:Y,containerId:J,hotKeys:k}=h;function ti(Z){let j=Ua("Toastify__toast-container",`Toastify__toast-container--${Z}`,{"Toastify__toast-container--rtl":Y});return Ke(B)?B({position:Z,rtl:Y,defaultClassName:j}):Ua(j,go(B))}function ii(){V&&(P(!0),mi.play())}return _S(()=>{var Z;if(V){let j=R.current.querySelectorAll('[data-in="true"]'),G=12,A=(Z=h.position)==null?void 0:Z.includes("top"),x=0,O=0;Array.from(j).reverse().forEach((Ci,$)=>{let ai=Ci;ai.classList.add("Toastify__toast--stacked"),$>0&&(ai.dataset.collapsed=`${s}`),ai.dataset.pos||(ai.dataset.pos=A?"top":"bot");let Pi=x*(s?.2:1)+(s?0:G*$);ai.style.setProperty("--y",`${A?Pi:Pi*-1}px`),ai.style.setProperty("--g",`${G}`),ai.style.setProperty("--s",`${1-(s?O:0)}`),x+=ai.offsetHeight,O+=.025})}},[s,z,V]),ci.useEffect(()=>{function Z(j){var G;let A=R.current;k(j)&&((G=A.querySelector('[tabIndex="0"]'))==null||G.focus(),P(!1),mi.pause()),j.key==="Escape"&&(document.activeElement===A||A!=null&&A.contains(document.activeElement))&&(P(!0),mi.play())}return document.addEventListener("keydown",Z),()=>{document.removeEventListener("keydown",Z)}},[k]),Vi.createElement("section",{ref:R,className:"Toastify",id:J,onMouseEnter:()=>{V&&(P(!1),mi.pause())},onMouseLeave:ii,"aria-live":"polite","aria-atomic":"false","aria-relevant":"additions text","aria-label":h["aria-label"]},N((Z,j)=>{let G=j.length?{...D}:{...D,pointerEvents:"none"};return Vi.createElement("div",{tabIndex:-1,className:ti(Z),"data-stacked":V,style:G,key:`c-${Z}`},j.map(({content:A,props:x})=>Vi.createElement(FS,{...x,stacked:V,collapseAll:ii,isIn:K(x.toastId,x.containerId),key:`t-${x.key}`},A)))}))}function XS({api_url:o,validation_data:h,entry_data:V,entry_id:s}){const[P,R]=ci.useState(!1),N=Vf.map(Z=>({label:Z.nume,value:Z.nume})),K=Vf.reduce((Z,j)=>{const G=j.nume,A=j.localitati.map(x=>({label:x,value:x}));return Z[G]=A,Z},{}),[z,B]=ci.useState(!1),[D,Y]=ci.useState({last_name:V.last_name,first_name:V.first_name,email:V.email,phone:V.phone,cnp:"",county:"",locality:"",address:"",postal_code:""}),[J,k]=ci.useState({county:!1,locality:!1,cnp:!1,address:!1,postal_code:!1}),ti=Z=>{const{name:j,value:G,type:A,checked:x}=Z.target;if(j==="cnp"){if(G.length>13?k(O=>({...O,cnp:!0})):G.length<13?k(O=>({...O,cnp:!0})):k(O=>({...O,cnp:!1})),isNaN(G)){k(O=>({...O,cnp:!0}));return}Y(O=>({...O,cnp:G}));return}if(j==="postal_code"){if(G.length>6?k(O=>({...O,postal_code:!0})):G.length<6?k(O=>({...O,postal_code:!0})):k(O=>({...O,postal_code:!1})),isNaN(G)){k(O=>({...O,postal_code:!0}));return}Y(O=>({...O,postal_code:G}));return}Y(A==="checkbox"?O=>({...O,[j]:x}):O=>({...O,[j]:G})),k(O=>({...O,[j]:!1}))},ii=async Z=>{Z.preventDefault(),B(!0);let j=!0;for(const A in D)D[A]===""&&(k(x=>({...x,[A]:!0})),j=!1);if(!j){mi.error("Vă rugăm să completați toate câmpurile."),B(!1);return}const G=new FormData;Object.entries(D).forEach(([A,x])=>{x&&G.append(A,x)}),G.append("entry_id",s);try{const A=await fetch(`${o}campaign/entries/validate/submit`,{method:"POST",headers:{Accept:"application/json"},body:G});if(A.ok){const x=await A.json();(x==null?void 0:x.status)==="success"?(mi.success("Formularul a fost trimis cu succes."),R(!0)):mi.error("A apărut o eroare. Vă rugăm să încercați din nou.")}}catch(A){console.error("Error submitting form:",A),mi.error("A apărut o eroare. Vă rugăm să încercați din nou.")}finally{B(!1)}};return E.jsxs("div",{children:[P?E.jsx(E.Fragment,{children:E.jsxs("div",{className:"prize-content",children:[E.jsx("h2",{className:"prize-title",children:"Felicitări!"}),E.jsx("p",{className:"prize-desc",children:"Înscrierea dvs. câștigătoare a fost validată cu succes."}),E.jsx("p",{className:"prize-desc",children:"Veți intra în posesia premiului în cel mai scurt timp."}),E.jsx("br",{}),E.jsx("a",{href:"/",children:"Înapoi acasă"})]})}):E.jsx(E.Fragment,{children:E.jsx("form",{onSubmit:ii,children:E.jsxs("div",{className:"form-content",children:[E.jsxs("div",{className:"form-input-container",children:[E.jsx("label",{htmlFor:"form_field_last_name",className:`${J.last_name&&"error"}`,children:"Nume"}),E.jsx("input",{type:"text",name:"last_name",id:"form_field_last_name",value:D.last_name,readonly:!0,disabled:!0})]}),E.jsxs("div",{className:"form-input-container",children:[E.jsx("label",{className:`${J.first_name&&"error"}`,htmlFor:"form_field_first_name",children:"Prenume"}),E.jsx("input",{type:"text",name:"first_name",id:"form_field_first_name",value:D.first_name,readonly:!0,disabled:!0})]}),E.jsxs("div",{className:"form-input-container",children:[E.jsx("label",{className:`${J.email&&"error"}`,htmlFor:"form_field_email",children:"Adresa de email"}),E.jsx("input",{type:"email",name:"email",id:"form_field_email",value:D.email,readonly:!0,disabled:!0})]}),E.jsxs("div",{className:"form-input-container",children:[E.jsx("label",{className:`${J.phone&&"error"}`,htmlFor:"form_field_phone",children:"Număr de telefon"}),E.jsx("input",{type:"tel",name:"phone",id:"form_field_phone",value:D.phone,readonly:!0,disabled:!0})]}),E.jsxs("div",{className:"form-input-container",children:[E.jsx("label",{className:`${J.cnp&&"error"}`,htmlFor:"form_field_cnp",children:"CNP"}),E.jsx("input",{type:"text",name:"cnp",id:"form_field_cnp",value:D.cnp,onChange:ti,required:!0})]}),E.jsxs("div",{className:"form-input-container",children:[E.jsx("label",{className:`${J.county&&"error"}`,htmlFor:"form_field_county",children:"Județ"}),E.jsx(pf,{id:"form_field_county",value:D.county,name:"county",placeholder:"Selectează un județ",onChange:ti,options:N})]}),E.jsxs("div",{className:"form-input-container",children:[E.jsx("label",{className:`${J.locality&&"error"}`,htmlFor:"form_field_locality",children:"Localitate"}),E.jsx(pf,{id:"form_field_locality",value:D.locality,name:"locality",placeholder:"Selectează o localitate",onChange:ti,options:D.county!==""?[...K[D.county]]:[],disabled:D.county===""})]}),E.jsxs("div",{className:"form-input-container",children:[E.jsx("label",{className:`${J.address&&"error"}`,htmlFor:"form_field_address",children:"Adresa de livrare"}),E.jsx("input",{type:"text",name:"address",id:"form_field_address",value:D.address,onChange:ti,required:!0})]}),E.jsxs("div",{className:"form-input-container",children:[E.jsx("label",{className:`${J.postal_code&&"error"}`,htmlFor:"form_field_postal_code",children:"Cod poștal"}),E.jsx("input",{type:"text",name:"postal_code",id:"form_field_postal_code",value:D.postal_code,onChange:ti,required:!0})]}),E.jsx("div",{className:"form-submit-container",children:E.jsx("button",{disabled:z,children:z?E.jsx(E.Fragment,{children:"Se încarcă"}):E.jsx(E.Fragment,{children:"Trimite"})})})]})})}),E.jsx(YS,{position:"bottom-right",autoClose:5e3,hideProgressBar:!1,newestOnTop:!0,closeOnClick:!1,rtl:!1,pauseOnFocusLoss:!0,draggable:!0,pauseOnHover:!0,theme:"colored",transition:Of})]})}dS.createRoot(document.getElementById("validate-form-app")).render(E.jsx(ci.StrictMode,{children:E.jsx(XS,{api_url:validateData==null?void 0:validateData.api_url,validation_data:validateData==null?void 0:validateData.validationData,entry_data:validateData==null?void 0:validateData.entryData,entry_id:validateData==null?void 0:validateData.entryId})}));
